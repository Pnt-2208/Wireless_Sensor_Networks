<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="62:BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fded1b895e8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fded1d58ba8"/></to>
    </wire>
    <wire loc="72:/home/asis/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fded1d58ba8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fded1d53e20"/></to>
    </wire>
    <wire loc="64:BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x7fded1b98578"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fded1b49a60"/></to>
    </wire>
    <wire loc="52:/home/asis/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fded1b49a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fded1b3f6a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:BlinkAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x7fded1b957d8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fded198a020"/></to>
    </wire>
    <wire loc="52:/home/asis/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fded198a020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fded1b3f6a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:BlinkAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x7fded1b90900"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fded1984550"/></to>
    </wire>
    <wire loc="52:/home/asis/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fded1984550"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fded1b3f6a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fded1b8a020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fded1ba4d20"/></to>
    </wire>
    <wire loc="51:/home/asis/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fded1ba4d20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fded1b725e8"/></to>
    </wire>
    <wire loc="53:/home/asis/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fded1d560e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fded1b370c0"/></to>
    </wire>
    <wire loc="67:/home/asis/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fded1baf490"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fded1e54be8"/></to>
    </wire>
    <wire loc="53:/home/asis/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fded1e54be8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fded1d96c00"/></to>
    </wire>
    <wire loc="68:/home/asis/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fded1bafe68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fded1d52080"/></to>
    </wire>
    <wire loc="58:/home/asis/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fded1d52080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fded1d49020"/></to>
    </wire>
    <wire loc="71:/home/asis/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fded1bae560"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fded1d560e0"/></to>
    </wire>
    <wire loc="59:/home/asis/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fded1d51020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fded1bce7e8"/></to>
    </wire>
    <wire loc="61:/home/asis/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7fded1d49d88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fded1bce1b8"/></to>
    </wire>
    <wire loc="54:/home/asis/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fded1d496c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fded1b4f2d8"/></to>
    </wire>
    <wire loc="62:/home/asis/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fded1d496c0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fded1d4b560"/></to>
    </wire>
    <wire loc="46:/home/asis/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fded1d4b560"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fded1d41020"/></to>
    </wire>
    <wire loc="63:/home/asis/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fded1d4bbf0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fded1d51cf0"/></to>
    </wire>
    <wire loc="48:/home/asis/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7fded1d38388"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7fded1d2fe00"/></to>
    </wire>
    <wire loc="141:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7fded1d2fe00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fded1cac740"/></to>
    </wire>
    <wire loc="49:/home/asis/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fded1d3f4f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fded1d4bbf0"/></to>
    </wire>
    <wire loc="191:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7fded1cfc968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1c1b970"/></to>
    </wire>
    <wire loc="165:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7fded1d164d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fded1c82020"/></to>
    </wire>
    <wire loc="67:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fded1c82020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded180f710"/></to>
    </wire>
    <wire loc="176:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7fded1d0b4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fded1c72d60"/></to>
    </wire>
    <wire loc="69:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fded1c72d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded17a2710"/></to>
    </wire>
    <wire loc="185:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7fded1d011a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fded1c635b8"/></to>
    </wire>
    <wire loc="69:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fded1c635b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded173b710"/></to>
    </wire>
    <wire loc="143:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7fded1d2c1a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fded1caaa50"/></to>
    </wire>
    <wire loc="72:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fded1caaa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1934710"/></to>
    </wire>
    <wire loc="183:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7fded1d05e00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fded1c652a8"/></to>
    </wire>
    <wire loc="67:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fded1c652a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1741710"/></to>
    </wire>
    <wire loc="146:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7fded1d2a4d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fded1ca2bd0"/></to>
    </wire>
    <wire loc="66:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fded1ca2bd0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded18e06a8"/></to>
    </wire>
    <wire loc="157:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7fded1d1f658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fded1c91740"/></to>
    </wire>
    <wire loc="68:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fded1c91740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1873710"/></to>
    </wire>
    <wire loc="168:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7fded1d13968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fded1c7f430"/></to>
    </wire>
    <wire loc="70:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fded1c7f430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1806710"/></to>
    </wire>
    <wire loc="179:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7fded1d08968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fded1c6e120"/></to>
    </wire>
    <wire loc="72:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fded1c6e120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1799710"/></to>
    </wire>
    <wire loc="138:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7fded1d32968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fded1caf2a8"/></to>
    </wire>
    <wire loc="67:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fded1caf2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded19446a8"/></to>
    </wire>
    <wire loc="149:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7fded1d27968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fded1c9e020"/></to>
    </wire>
    <wire loc="69:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fded1c9e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded18d7710"/></to>
    </wire>
    <wire loc="160:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7fded1d1baf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fded1c8dbd8"/></to>
    </wire>
    <wire loc="71:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fded1c8dbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded186a710"/></to>
    </wire>
    <wire loc="171:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7fded1d10e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fded1c7c8c8"/></to>
    </wire>
    <wire loc="73:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fded1c7c8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded17fc710"/></to>
    </wire>
    <wire loc="188:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7fded1cfe658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fded1c5fa50"/></to>
    </wire>
    <wire loc="72:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fded1c5fa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1732710"/></to>
    </wire>
    <wire loc="194:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7fded1cf8348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1c0c020"/></to>
    </wire>
    <wire loc="174:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7fded1d0d1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fded1c74a50"/></to>
    </wire>
    <wire loc="67:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fded1c74a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded17a8710"/></to>
    </wire>
    <wire loc="70:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fded1cac740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded193b710"/></to>
    </wire>
    <wire loc="152:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7fded1d23020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fded1c9a430"/></to>
    </wire>
    <wire loc="72:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fded1c9a430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded18cd710"/></to>
    </wire>
    <wire loc="192:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7fded1cfa020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1c16ab0"/></to>
    </wire>
    <wire loc="155:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7fded1d21348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fded1c93500"/></to>
    </wire>
    <wire loc="66:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fded1c93500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded18796a8"/></to>
    </wire>
    <wire loc="166:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7fded1d15658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fded1c81120"/></to>
    </wire>
    <wire loc="68:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fded1c81120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded180c710"/></to>
    </wire>
    <wire loc="177:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7fded1d0a658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fded1c71e18"/></to>
    </wire>
    <wire loc="70:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fded1c71e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded179f710"/></to>
    </wire>
    <wire loc="186:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7fded1d00348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fded1c62740"/></to>
    </wire>
    <wire loc="70:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fded1c62740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1738710"/></to>
    </wire>
    <wire loc="144:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7fded1d2b348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fded1ca9bd8"/></to>
    </wire>
    <wire loc="73:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fded1ca9bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1931710"/></to>
    </wire>
    <wire loc="147:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7fded1d29658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fded1ca1d60"/></to>
    </wire>
    <wire loc="67:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fded1ca1d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded18dd710"/></to>
    </wire>
    <wire loc="158:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7fded1d1d7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fded1c8f8c8"/></to>
    </wire>
    <wire loc="69:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fded1c8f8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1870710"/></to>
    </wire>
    <wire loc="169:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7fded1d12af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fded1c7e5b8"/></to>
    </wire>
    <wire loc="71:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fded1c7e5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1803710"/></to>
    </wire>
    <wire loc="180:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7fded1d07af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fded1c6d2a8"/></to>
    </wire>
    <wire loc="73:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fded1c6d2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1795710"/></to>
    </wire>
    <wire loc="139:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7fded1d31af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fded1cae430"/></to>
    </wire>
    <wire loc="68:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fded1cae430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1941710"/></to>
    </wire>
    <wire loc="150:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7fded1d26af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fded1c9d120"/></to>
    </wire>
    <wire loc="70:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fded1c9d120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded18d4710"/></to>
    </wire>
    <wire loc="161:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7fded1d1ac78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fded1c8cd60"/></to>
    </wire>
    <wire loc="72:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fded1c8cd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1866710"/></to>
    </wire>
    <wire loc="189:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7fded1cfd7e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fded1c5ebd8"/></to>
    </wire>
    <wire loc="73:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fded1c5ebd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded172f710"/></to>
    </wire>
    <wire loc="164:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7fded1d17020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fded1c84e40"/></to>
    </wire>
    <wire loc="66:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fded1c84e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded18126a8"/></to>
    </wire>
    <wire loc="175:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7fded1d0c348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fded1c73bd8"/></to>
    </wire>
    <wire loc="68:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fded1c73bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded17a5710"/></to>
    </wire>
    <wire loc="184:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7fded1d02020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fded1c64430"/></to>
    </wire>
    <wire loc="68:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fded1c64430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded173e710"/></to>
    </wire>
    <wire loc="195:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7fded1cf74d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1c07180"/></to>
    </wire>
    <wire loc="142:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7fded1d2d020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fded1cab8c8"/></to>
    </wire>
    <wire loc="71:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fded1cab8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1937710"/></to>
    </wire>
    <wire loc="153:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7fded1d221a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fded1c995b8"/></to>
    </wire>
    <wire loc="73:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fded1c995b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded18ca710"/></to>
    </wire>
    <wire loc="182:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7fded1d06c78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fded1c661e8"/></to>
    </wire>
    <wire loc="66:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fded1c661e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded17446a8"/></to>
    </wire>
    <wire loc="156:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7fded1d204d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fded1c925b8"/></to>
    </wire>
    <wire loc="67:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fded1c925b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1876710"/></to>
    </wire>
    <wire loc="167:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7fded1d147e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fded1c802a8"/></to>
    </wire>
    <wire loc="69:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fded1c802a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1809710"/></to>
    </wire>
    <wire loc="178:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7fded1d097e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fded1c6f020"/></to>
    </wire>
    <wire loc="71:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fded1c6f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded179c710"/></to>
    </wire>
    <wire loc="187:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7fded1cff4d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fded1c618c8"/></to>
    </wire>
    <wire loc="71:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fded1c618c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1735710"/></to>
    </wire>
    <wire loc="137:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7fded1d437d8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fded1cb01e8"/></to>
    </wire>
    <wire loc="66:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fded1cb01e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1947520"/></to>
    </wire>
    <wire loc="148:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7fded1d287e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fded1ca0e18"/></to>
    </wire>
    <wire loc="68:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fded1ca0e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded18da710"/></to>
    </wire>
    <wire loc="159:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7fded1d1c968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fded1c8ea50"/></to>
    </wire>
    <wire loc="70:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fded1c8ea50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded186d710"/></to>
    </wire>
    <wire loc="170:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7fded1d11c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fded1c7d740"/></to>
    </wire>
    <wire loc="72:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fded1c7d740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1800710"/></to>
    </wire>
    <wire loc="193:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7fded1cf91a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1c12c38"/></to>
    </wire>
    <wire loc="173:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7fded1d0e020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fded1c75930"/></to>
    </wire>
    <wire loc="66:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fded1c75930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded17ab6a8"/></to>
    </wire>
    <wire loc="162:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7fded1d19e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fded1c8be18"/></to>
    </wire>
    <wire loc="73:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fded1c8be18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded1863710"/></to>
    </wire>
    <wire loc="140:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7fded1d30c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fded1cad5b8"/></to>
    </wire>
    <wire loc="69:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fded1cad5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded193e710"/></to>
    </wire>
    <wire loc="151:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7fded1d25e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fded1c9c2a8"/></to>
    </wire>
    <wire loc="71:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fded1c9c2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fded18d1710"/></to>
    </wire>
    <wire loc="54:/home/asis/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fded1e4b728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fded1d95b08"/></to>
    </wire>
    <wire loc="55:/home/asis/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fded1d92020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fded1e4add0"/></to>
    </wire>
    <wire loc="58:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fded1d737f0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fded1a84268"/></to>
    </wire>
    <wire loc="53:/home/asis/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fded1b4f2d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fded1b72020"/></to>
    </wire>
    <wire loc="54:/home/asis/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fded1b71ce8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fded1b73e18"/></to>
    </wire>
    <wire loc="56:/home/asis/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fded1b73e18"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7fded1d31af0"/></to>
    </wire>
    <wire loc="55:/home/asis/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fded1b70e70"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fded1b51020"/></to>
    </wire>
    <wire loc="57:/home/asis/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fded1b51020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7fded1d32968"/></to>
    </wire>
    <wire loc="56:/home/asis/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fded1b6e020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fded1b501b0"/></to>
    </wire>
    <wire loc="58:/home/asis/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fded1b501b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7fded1d437d8"/></to>
    </wire>
    <wire loc="54:/home/asis/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fded1b3f6a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fded1b37db8"/></to>
    </wire>
    <wire loc="61:/home/asis/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fded1b37db8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fded19af5e0"/></to>
    </wire>
    <wire loc="59:/home/asis/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fded1b370c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fded1b2f8a8"/></to>
    </wire>
    <wire loc="65:/home/asis/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fded1b2d298"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fded19a0128"/></to>
    </wire>
    <wire loc="35:/home/asis/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fded1b2f8a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fded1a281f0"/></to>
    </wire>
    <wire loc="62:/home/asis/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fded19a9858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fded19fbab0"/></to>
    </wire>
    <wire loc="63:/home/asis/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fded19f6c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7fded1b281c8"/></to>
    </wire>
    <wire loc="36:/home/asis/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7fded1b281c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fded1a28998"/></to>
    </wire>
    <wire loc="66:/home/asis/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fded1997330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7fded1b1f3b8"/></to>
    </wire>
    <wire loc="37:/home/asis/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7fded1b1f3b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fded1a25a90"/></to>
    </wire>
    <wire loc="37:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fded1a25a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fded1666608"/></to>
    </wire>
    <wire loc="35:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fded1a281f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fded166bc70"/></to>
    </wire>
    <wire loc="36:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fded1a28998"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fded166a478"/></to>
    </wire>
    <wire loc="39:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fded1659710"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fded1aa0de8"/></to>
    </wire>
    <wire loc="60:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fded1aa0de8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fded1a8e0f8"/></to>
    </wire>
    <wire loc="40:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fded1654708"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fded1a98020"/></to>
    </wire>
    <wire loc="61:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fded1a98020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fded1a89160"/></to>
    </wire>
    <wire loc="41:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fded16536c0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fded1a96020"/></to>
    </wire>
    <wire loc="62:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fded1a96020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fded1a88190"/></to>
    </wire>
    <wire loc="42:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7fded164f8c0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7fded1a93228"/></to>
    </wire>
    <wire loc="63:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7fded1a93228"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7fded1a84968"/></to>
    </wire>
    <wire loc="74:/home/asis/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fded19f3cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fded1e4b728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/asis/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fded19a4930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fded1e4b728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/asis/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/home/asis/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/asis/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/asis/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/asis/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/asis/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/asis/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/asis/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/asis/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/asis/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/home/asis/tinyos-main/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/home/asis/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/asis/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/asis/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/asis/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/asis/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/home/asis/tinyos-main/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkC" loc="50:BlinkC.nc" safe="">
      <documentation loc="43:BlinkC.nc">
        <short>&#10; Implementation for Blink application.</short>
        <long>&#10; Implementation for Blink application.  Toggle the red LED when a&#10; Timer fires.&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/asis/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/asis/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/asis/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/asis/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/asis/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):/home/asis/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/asis/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/asis/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/asis/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/asis/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/asis/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fded1b153b0"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/asis/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/asis/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/asis/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/asis/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/asis/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer1" loc="44(BlinkAppC.Timer1):/home/asis/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/asis/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer2" loc="44(BlinkAppC.Timer2):/home/asis/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/asis/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fded1cf3748" loc="40:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fded1cf3a90" loc="40:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fded1cf3dd8" loc="40:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fded1ce4020" loc="41:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fded1ce4388" loc="42:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fded1ce46f0" loc="43:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fded1ce4a20" loc="44:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fded1c56020" loc="42:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fded1c56388" loc="43:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fded1c566f0" loc="44:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fded1c56a20" loc="45:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/asis/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/asis/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fded1b153b0" loc="23:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fded1b153b0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fded1b156a0" loc="23:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fded1b0c980" loc="23:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fded1b0c980"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fded1b0cc70" loc="23:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/asis/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/asis/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fded1b2bc60" loc="46:/home/asis/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fded1b2bc60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/asis/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/asis/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fded19f0cd0" loc="46:/home/asis/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fded19f0cd0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fded19ed020" loc="46:/home/asis/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/asis/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/asis/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fded19a29f8" loc="46:/home/asis/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fded19a29f8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fded1d560e0" loc="58:/home/asis/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fded1d560e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded1d56430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fded1d58ba8" loc="57:/home/asis/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fded1d58ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fded1d57020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fded1d51cf0" loc="52:/home/asis/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fded1d51cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded1d500a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fded1d52080" loc="46:/home/asis/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fded1d52080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded1d523d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fded1d51020" loc="50:/home/asis/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fded1d51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fded1d51370"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fded1d514f8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fded1d51680"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fded1d51808"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fded1d51990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fded1d496c0" loc="45:/home/asis/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7fded1d496c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded1d49a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fded1d49020" loc="44:/home/asis/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fded1d49020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded1d49370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7fded1d49d88" loc="46:/home/asis/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7fded1d49d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded1d48170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fded1d4bbf0" loc="41:/home/asis/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fded1d4bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded1d44020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fded1d4b560" loc="40:/home/asis/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fded1d4b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded1d4b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fded1d3f4f8" loc="45:/home/asis/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fded1d3f4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded1d3f848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7fded1d38388" loc="44:/home/asis/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7fded1d38388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d386d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d38860"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d389e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d38b70"/>
        <function-ref name="get" scoped="" ref="0x7fded1d38cf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d38e80"/>
        <function-ref name="set" scoped="" ref="0x7fded1d3f030"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d3f1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fded1d41020" loc="43:/home/asis/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fded1d41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded1d41370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7fded1cfc968" loc="100:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7fded1cfc968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1cfb0f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1cfb278"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1cfb400"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1cfb588"/>
        <function-ref name="get" scoped="" ref="0x7fded1cfb710"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1cfb898"/>
        <function-ref name="set" scoped="" ref="0x7fded1cfba20"/>
        <function-ref name="clr" scoped="" ref="0x7fded1cfbba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7fded1d164d0" loc="74:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7fded1d164d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d16820"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d169a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d16b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d16cb8"/>
        <function-ref name="get" scoped="" ref="0x7fded1d16e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d15020"/>
        <function-ref name="set" scoped="" ref="0x7fded1d151a8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d15330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7fded1d0b4d0" loc="85:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7fded1d0b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d0b820"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d0b9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d0bb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d0bcb8"/>
        <function-ref name="get" scoped="" ref="0x7fded1d0be40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d0a020"/>
        <function-ref name="set" scoped="" ref="0x7fded1d0a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d0a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7fded1d011a0" loc="94:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7fded1d011a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d014f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d01678"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d01800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d01988"/>
        <function-ref name="get" scoped="" ref="0x7fded1d01b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d01c98"/>
        <function-ref name="set" scoped="" ref="0x7fded1d01e20"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d00020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7fded1d2c1a0" loc="52:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7fded1d2c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d2c4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d2c678"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d2c800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d2c988"/>
        <function-ref name="get" scoped="" ref="0x7fded1d2cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d2cc98"/>
        <function-ref name="set" scoped="" ref="0x7fded1d2ce20"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7fded1d05e00" loc="92:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7fded1d05e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d031a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d03330"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d034b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d03640"/>
        <function-ref name="get" scoped="" ref="0x7fded1d037c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d03950"/>
        <function-ref name="set" scoped="" ref="0x7fded1d03ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d03c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7fded1d2a4d0" loc="55:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7fded1d2a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d2a820"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d2a9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d2ab30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d2acb8"/>
        <function-ref name="get" scoped="" ref="0x7fded1d2ae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d29020"/>
        <function-ref name="set" scoped="" ref="0x7fded1d291a8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d29330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7fded1d1f658" loc="66:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7fded1d1f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d1f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d1fb30"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d1fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d1fe40"/>
        <function-ref name="get" scoped="" ref="0x7fded1d1d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d1d1a8"/>
        <function-ref name="set" scoped="" ref="0x7fded1d1d330"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d1d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7fded1d13968" loc="77:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7fded1d13968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d13cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d13e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d12020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d121a8"/>
        <function-ref name="get" scoped="" ref="0x7fded1d12330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d124b8"/>
        <function-ref name="set" scoped="" ref="0x7fded1d12640"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d127c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7fded1d08968" loc="88:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7fded1d08968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d08cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d08e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d07020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d071a8"/>
        <function-ref name="get" scoped="" ref="0x7fded1d07330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d074b8"/>
        <function-ref name="set" scoped="" ref="0x7fded1d07640"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d077c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7fded1d32968" loc="47:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7fded1d32968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d32cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d32e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d31020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d311a8"/>
        <function-ref name="get" scoped="" ref="0x7fded1d31330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d314b8"/>
        <function-ref name="set" scoped="" ref="0x7fded1d31640"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d317c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7fded1d27968" loc="58:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7fded1d27968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d27cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d27e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d26020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d261a8"/>
        <function-ref name="get" scoped="" ref="0x7fded1d26330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d264b8"/>
        <function-ref name="set" scoped="" ref="0x7fded1d26640"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d267c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7fded1d1baf0" loc="69:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7fded1d1baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d1be40"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d1a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d1a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d1a330"/>
        <function-ref name="get" scoped="" ref="0x7fded1d1a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d1a640"/>
        <function-ref name="set" scoped="" ref="0x7fded1d1a7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d1a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7fded1d10e00" loc="80:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7fded1d10e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d0f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d0f330"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d0f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d0f640"/>
        <function-ref name="get" scoped="" ref="0x7fded1d0f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d0f950"/>
        <function-ref name="set" scoped="" ref="0x7fded1d0fad8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d0fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7fded1cfe658" loc="97:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7fded1cfe658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1cfe9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1cfeb30"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1cfecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1cfee40"/>
        <function-ref name="get" scoped="" ref="0x7fded1cfd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1cfd1a8"/>
        <function-ref name="set" scoped="" ref="0x7fded1cfd330"/>
        <function-ref name="clr" scoped="" ref="0x7fded1cfd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7fded1cf8348" loc="103:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7fded1cf8348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1cf8698"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1cf8820"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1cf89a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1cf8b30"/>
        <function-ref name="get" scoped="" ref="0x7fded1cf8cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1cf8e40"/>
        <function-ref name="set" scoped="" ref="0x7fded1cf7020"/>
        <function-ref name="clr" scoped="" ref="0x7fded1cf71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7fded1d0d1a0" loc="83:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7fded1d0d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d0d4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d0d678"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d0d800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d0d988"/>
        <function-ref name="get" scoped="" ref="0x7fded1d0db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d0dc98"/>
        <function-ref name="set" scoped="" ref="0x7fded1d0de20"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7fded1d2fe00" loc="50:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7fded1d2fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d2e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d2e330"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d2e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d2e640"/>
        <function-ref name="get" scoped="" ref="0x7fded1d2e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d2e950"/>
        <function-ref name="set" scoped="" ref="0x7fded1d2ead8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d2ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7fded1d23020" loc="61:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7fded1d23020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d23370"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d234f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d23680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d23808"/>
        <function-ref name="get" scoped="" ref="0x7fded1d23990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d23b18"/>
        <function-ref name="set" scoped="" ref="0x7fded1d23ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d23e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7fded1cfa020" loc="101:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7fded1cfa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1cfa370"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1cfa4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1cfa680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1cfa808"/>
        <function-ref name="get" scoped="" ref="0x7fded1cfa990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1cfab18"/>
        <function-ref name="set" scoped="" ref="0x7fded1cfaca0"/>
        <function-ref name="clr" scoped="" ref="0x7fded1cfae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7fded1d21348" loc="64:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7fded1d21348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d21698"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d21820"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d219a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d21b30"/>
        <function-ref name="get" scoped="" ref="0x7fded1d21cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d21e40"/>
        <function-ref name="set" scoped="" ref="0x7fded1d20020"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7fded1d15658" loc="75:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7fded1d15658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d159a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d15b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d15cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d15e40"/>
        <function-ref name="get" scoped="" ref="0x7fded1d14020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d141a8"/>
        <function-ref name="set" scoped="" ref="0x7fded1d14330"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d144b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7fded1d0a658" loc="86:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7fded1d0a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d0a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d0ab30"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d0acb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d0ae40"/>
        <function-ref name="get" scoped="" ref="0x7fded1d09020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d091a8"/>
        <function-ref name="set" scoped="" ref="0x7fded1d09330"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d094b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7fded1d00348" loc="95:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7fded1d00348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d00698"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d00820"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d009a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d00b30"/>
        <function-ref name="get" scoped="" ref="0x7fded1d00cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d00e40"/>
        <function-ref name="set" scoped="" ref="0x7fded1cff020"/>
        <function-ref name="clr" scoped="" ref="0x7fded1cff1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7fded1d2b348" loc="53:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7fded1d2b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d2b698"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d2b820"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d2b9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d2bb30"/>
        <function-ref name="get" scoped="" ref="0x7fded1d2bcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d2be40"/>
        <function-ref name="set" scoped="" ref="0x7fded1d2a020"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d2a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7fded1d29658" loc="56:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7fded1d29658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d299a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d29b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d29cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d29e40"/>
        <function-ref name="get" scoped="" ref="0x7fded1d28020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d281a8"/>
        <function-ref name="set" scoped="" ref="0x7fded1d28330"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d284b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7fded1d1d7e0" loc="67:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7fded1d1d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d1db30"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d1dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d1de40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d1c020"/>
        <function-ref name="get" scoped="" ref="0x7fded1d1c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d1c330"/>
        <function-ref name="set" scoped="" ref="0x7fded1d1c4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d1c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7fded1d12af0" loc="78:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7fded1d12af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d12e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d11020"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d111a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d11330"/>
        <function-ref name="get" scoped="" ref="0x7fded1d114b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d11640"/>
        <function-ref name="set" scoped="" ref="0x7fded1d117c8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d11950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7fded1d07af0" loc="89:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7fded1d07af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d07e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d06020"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d061a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d06330"/>
        <function-ref name="get" scoped="" ref="0x7fded1d064b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d06640"/>
        <function-ref name="set" scoped="" ref="0x7fded1d067c8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d06950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7fded1d31af0" loc="48:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7fded1d31af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d31e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d30020"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d301a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d30330"/>
        <function-ref name="get" scoped="" ref="0x7fded1d304b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d30640"/>
        <function-ref name="set" scoped="" ref="0x7fded1d307c8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d30950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7fded1d26af0" loc="59:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7fded1d26af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d25020"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d251a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d25330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d254b8"/>
        <function-ref name="get" scoped="" ref="0x7fded1d25640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d257c8"/>
        <function-ref name="set" scoped="" ref="0x7fded1d25950"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d25ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7fded1d1ac78" loc="70:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7fded1d1ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d19020"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d191a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d19330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d194b8"/>
        <function-ref name="get" scoped="" ref="0x7fded1d19640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d197c8"/>
        <function-ref name="set" scoped="" ref="0x7fded1d19950"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d19ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7fded1cfd7e0" loc="98:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7fded1cfd7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1cfdb30"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1cfdcb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1cfde40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1cfc020"/>
        <function-ref name="get" scoped="" ref="0x7fded1cfc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1cfc330"/>
        <function-ref name="set" scoped="" ref="0x7fded1cfc4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1cfc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7fded1d17020" loc="73:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7fded1d17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d17570"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d176f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d17880"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d17a08"/>
        <function-ref name="get" scoped="" ref="0x7fded1d17b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d17d18"/>
        <function-ref name="set" scoped="" ref="0x7fded1d16020"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d161a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7fded1d0c348" loc="84:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7fded1d0c348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d0c698"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d0c820"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d0c9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d0cb30"/>
        <function-ref name="get" scoped="" ref="0x7fded1d0ccb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d0ce40"/>
        <function-ref name="set" scoped="" ref="0x7fded1d0b020"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d0b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7fded1d02020" loc="93:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7fded1d02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d02370"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d024f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d02680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d02808"/>
        <function-ref name="get" scoped="" ref="0x7fded1d02990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d02b18"/>
        <function-ref name="set" scoped="" ref="0x7fded1d02ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d02e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7fded1cf74d0" loc="104:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7fded1cf74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1cf7820"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1cf79a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1cf7b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1cf7cb8"/>
        <function-ref name="get" scoped="" ref="0x7fded1cf7e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1cf6020"/>
        <function-ref name="set" scoped="" ref="0x7fded1cf61a8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1cf6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7fded1d2d020" loc="51:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7fded1d2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d2d370"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d2d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d2d680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d2d808"/>
        <function-ref name="get" scoped="" ref="0x7fded1d2d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d2db18"/>
        <function-ref name="set" scoped="" ref="0x7fded1d2dca0"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d2de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7fded1d221a0" loc="62:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7fded1d221a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d224f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d22678"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d22800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d22988"/>
        <function-ref name="get" scoped="" ref="0x7fded1d22b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d22c98"/>
        <function-ref name="set" scoped="" ref="0x7fded1d22e20"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d21020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7fded1d06c78" loc="91:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7fded1d06c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d05020"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d051a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d05330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d054b8"/>
        <function-ref name="get" scoped="" ref="0x7fded1d05640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d057c8"/>
        <function-ref name="set" scoped="" ref="0x7fded1d05950"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d05ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7fded1d204d0" loc="65:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7fded1d204d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d20820"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d209a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d20b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d20cb8"/>
        <function-ref name="get" scoped="" ref="0x7fded1d20e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d1f020"/>
        <function-ref name="set" scoped="" ref="0x7fded1d1f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d1f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7fded1d147e0" loc="76:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7fded1d147e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d14b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d14cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d14e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d13020"/>
        <function-ref name="get" scoped="" ref="0x7fded1d131a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d13330"/>
        <function-ref name="set" scoped="" ref="0x7fded1d134b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d13640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7fded1d097e0" loc="87:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7fded1d097e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d09b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d09cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d09e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d08020"/>
        <function-ref name="get" scoped="" ref="0x7fded1d081a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d08330"/>
        <function-ref name="set" scoped="" ref="0x7fded1d084b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d08640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7fded1cff4d0" loc="96:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7fded1cff4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1cff820"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1cff9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1cffb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1cffcb8"/>
        <function-ref name="get" scoped="" ref="0x7fded1cffe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1cfe020"/>
        <function-ref name="set" scoped="" ref="0x7fded1cfe1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1cfe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7fded1d437d8" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7fded1d437d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d43b28"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d43cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d43e38"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d32020"/>
        <function-ref name="get" scoped="" ref="0x7fded1d321a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d32330"/>
        <function-ref name="set" scoped="" ref="0x7fded1d324b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d32640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7fded1d287e0" loc="57:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7fded1d287e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d28b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d28cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d28e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d27020"/>
        <function-ref name="get" scoped="" ref="0x7fded1d271a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d27330"/>
        <function-ref name="set" scoped="" ref="0x7fded1d274b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d27640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7fded1d1c968" loc="68:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7fded1d1c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d1ccb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d1ce40"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d1b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d1b1a8"/>
        <function-ref name="get" scoped="" ref="0x7fded1d1b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d1b4b8"/>
        <function-ref name="set" scoped="" ref="0x7fded1d1b640"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d1b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7fded1d11c78" loc="79:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7fded1d11c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d10020"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d101a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d10330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d104b8"/>
        <function-ref name="get" scoped="" ref="0x7fded1d10640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d107c8"/>
        <function-ref name="set" scoped="" ref="0x7fded1d10950"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d10ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7fded1cf91a0" loc="102:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7fded1cf91a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1cf94f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1cf9678"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1cf9800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1cf9988"/>
        <function-ref name="get" scoped="" ref="0x7fded1cf9b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1cf9c98"/>
        <function-ref name="set" scoped="" ref="0x7fded1cf9e20"/>
        <function-ref name="clr" scoped="" ref="0x7fded1cf8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7fded1d0e020" loc="82:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7fded1d0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d0e370"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d0e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d0e680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d0e808"/>
        <function-ref name="get" scoped="" ref="0x7fded1d0e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d0eb18"/>
        <function-ref name="set" scoped="" ref="0x7fded1d0eca0"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d0ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7fded1d19e00" loc="71:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7fded1d19e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d181a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d18330"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d184b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d18640"/>
        <function-ref name="get" scoped="" ref="0x7fded1d187c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d18950"/>
        <function-ref name="set" scoped="" ref="0x7fded1d18ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d18c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7fded1d30c78" loc="49:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7fded1d30c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d2f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d2f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d2f330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d2f4b8"/>
        <function-ref name="get" scoped="" ref="0x7fded1d2f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d2f7c8"/>
        <function-ref name="set" scoped="" ref="0x7fded1d2f950"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d2fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7fded1d25e00" loc="60:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7fded1d25e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1d241a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1d24330"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1d244b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1d24640"/>
        <function-ref name="get" scoped="" ref="0x7fded1d247c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1d24950"/>
        <function-ref name="set" scoped="" ref="0x7fded1d24ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1d24c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fded1cae430" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fded1cae430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1cae780"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1cae908"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1caea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1caec18"/>
        <function-ref name="get" scoped="" ref="0x7fded1caeda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1cad020"/>
        <function-ref name="set" scoped="" ref="0x7fded1cad1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1cad330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fded1cab8c8" loc="49:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fded1cab8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1cabc18"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1cabda0"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1caa020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1caa1a8"/>
        <function-ref name="get" scoped="" ref="0x7fded1caa330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1caa4b8"/>
        <function-ref name="set" scoped="" ref="0x7fded1caa640"/>
        <function-ref name="clr" scoped="" ref="0x7fded1caa7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fded1cb01e8" loc="44:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fded1cb01e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1cb0538"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1cb06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1cb0848"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1cb09d0"/>
        <function-ref name="get" scoped="" ref="0x7fded1cb0b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1cb0ce0"/>
        <function-ref name="set" scoped="" ref="0x7fded1cb0e68"/>
        <function-ref name="clr" scoped="" ref="0x7fded1caf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fded1cad5b8" loc="47:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fded1cad5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1cad908"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1cada90"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1cadc18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1cadda0"/>
        <function-ref name="get" scoped="" ref="0x7fded1cac020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1cac1a8"/>
        <function-ref name="set" scoped="" ref="0x7fded1cac330"/>
        <function-ref name="clr" scoped="" ref="0x7fded1cac4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fded1caaa50" loc="50:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fded1caaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1caada0"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1ca9020"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1ca91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1ca9330"/>
        <function-ref name="get" scoped="" ref="0x7fded1ca94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1ca9640"/>
        <function-ref name="set" scoped="" ref="0x7fded1ca97c8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1ca9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fded1caf2a8" loc="45:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fded1caf2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1caf5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1caf780"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1caf908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1cafa90"/>
        <function-ref name="get" scoped="" ref="0x7fded1cafc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1cafda0"/>
        <function-ref name="set" scoped="" ref="0x7fded1cae020"/>
        <function-ref name="clr" scoped="" ref="0x7fded1cae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fded1cac740" loc="48:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fded1cac740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1caca90"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1cacc18"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1cacda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1cab020"/>
        <function-ref name="get" scoped="" ref="0x7fded1cab1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1cab330"/>
        <function-ref name="set" scoped="" ref="0x7fded1cab4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1cab640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fded1ca9bd8" loc="51:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fded1ca9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1ca8020"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1ca81a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1ca8330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1ca84b8"/>
        <function-ref name="get" scoped="" ref="0x7fded1ca8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1ca87c8"/>
        <function-ref name="set" scoped="" ref="0x7fded1ca8950"/>
        <function-ref name="clr" scoped="" ref="0x7fded1ca8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1947520" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1947520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1947870"/>
        <function-ref name="isInput" scoped="" ref="0x7fded19479f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1947b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1947d08"/>
        <function-ref name="get" scoped="" ref="0x7fded1946020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded19461a8"/>
        <function-ref name="set" scoped="" ref="0x7fded1946330"/>
        <function-ref name="clr" scoped="" ref="0x7fded19464b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded19446a8" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded19446a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded19449f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1944b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1944d08"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1943020"/>
        <function-ref name="get" scoped="" ref="0x7fded19431a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1943330"/>
        <function-ref name="set" scoped="" ref="0x7fded19434b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1943640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1941710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1941710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1941a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1941be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1941d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1940020"/>
        <function-ref name="get" scoped="" ref="0x7fded19401a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1940330"/>
        <function-ref name="set" scoped="" ref="0x7fded19404b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1940640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded193e710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded193e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded193ea60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded193ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded193ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded193d020"/>
        <function-ref name="get" scoped="" ref="0x7fded193d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded193d330"/>
        <function-ref name="set" scoped="" ref="0x7fded193d4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded193d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded193b710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded193b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded193ba60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded193bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded193bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1939020"/>
        <function-ref name="get" scoped="" ref="0x7fded19391a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1939330"/>
        <function-ref name="set" scoped="" ref="0x7fded19394b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1939640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1937710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1937710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1937a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1937be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1937d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1936020"/>
        <function-ref name="get" scoped="" ref="0x7fded19361a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1936330"/>
        <function-ref name="set" scoped="" ref="0x7fded19364b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1936640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1934710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1934710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1934a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1934be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1934d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1933020"/>
        <function-ref name="get" scoped="" ref="0x7fded19331a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1933330"/>
        <function-ref name="set" scoped="" ref="0x7fded19334b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1933640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1931710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1931710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1931a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1931be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1931d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1930020"/>
        <function-ref name="get" scoped="" ref="0x7fded19301a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1930330"/>
        <function-ref name="set" scoped="" ref="0x7fded19304b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1930640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fded1ca0e18" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fded1ca0e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c9f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c9f330"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c9f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c9f640"/>
        <function-ref name="get" scoped="" ref="0x7fded1c9f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c9f950"/>
        <function-ref name="set" scoped="" ref="0x7fded1c9fad8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c9fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fded1c9c2a8" loc="49:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fded1c9c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c9c5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c9c780"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c9c908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c9ca90"/>
        <function-ref name="get" scoped="" ref="0x7fded1c9cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c9cda0"/>
        <function-ref name="set" scoped="" ref="0x7fded1c9a020"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c9a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fded1ca2bd0" loc="44:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fded1ca2bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1ca1020"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1ca11a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1ca1330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1ca14b8"/>
        <function-ref name="get" scoped="" ref="0x7fded1ca1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1ca17c8"/>
        <function-ref name="set" scoped="" ref="0x7fded1ca1950"/>
        <function-ref name="clr" scoped="" ref="0x7fded1ca1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fded1c9e020" loc="47:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fded1c9e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c9e370"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c9e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c9e680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c9e808"/>
        <function-ref name="get" scoped="" ref="0x7fded1c9e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c9eb18"/>
        <function-ref name="set" scoped="" ref="0x7fded1c9eca0"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c9ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fded1c9a430" loc="50:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fded1c9a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c9a780"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c9a908"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c9aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c9ac18"/>
        <function-ref name="get" scoped="" ref="0x7fded1c9ada0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c99020"/>
        <function-ref name="set" scoped="" ref="0x7fded1c991a8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c99330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fded1ca1d60" loc="45:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fded1ca1d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1ca00d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1ca0260"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1ca03e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1ca0570"/>
        <function-ref name="get" scoped="" ref="0x7fded1ca06f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1ca0880"/>
        <function-ref name="set" scoped="" ref="0x7fded1ca0a08"/>
        <function-ref name="clr" scoped="" ref="0x7fded1ca0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fded1c9d120" loc="48:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fded1c9d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c9d470"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c9d5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c9d780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c9d908"/>
        <function-ref name="get" scoped="" ref="0x7fded1c9da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c9dc18"/>
        <function-ref name="set" scoped="" ref="0x7fded1c9dda0"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c9c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fded1c995b8" loc="51:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fded1c995b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c99908"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c99a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c99c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c99da0"/>
        <function-ref name="get" scoped="" ref="0x7fded1c98020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c981a8"/>
        <function-ref name="set" scoped="" ref="0x7fded1c98330"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c984b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded18e06a8" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded18e06a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded18e09f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded18e0b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fded18e0d08"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded18df020"/>
        <function-ref name="get" scoped="" ref="0x7fded18df1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded18df330"/>
        <function-ref name="set" scoped="" ref="0x7fded18df4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded18df640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded18dd710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded18dd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded18dda60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded18ddbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded18ddd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded18dc020"/>
        <function-ref name="get" scoped="" ref="0x7fded18dc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded18dc330"/>
        <function-ref name="set" scoped="" ref="0x7fded18dc4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded18dc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded18da710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded18da710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded18daa60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded18dabe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded18dad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded18d9020"/>
        <function-ref name="get" scoped="" ref="0x7fded18d91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded18d9330"/>
        <function-ref name="set" scoped="" ref="0x7fded18d94b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded18d9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded18d7710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded18d7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded18d7a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded18d7be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded18d7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded18d6020"/>
        <function-ref name="get" scoped="" ref="0x7fded18d61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded18d6330"/>
        <function-ref name="set" scoped="" ref="0x7fded18d64b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded18d6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded18d4710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded18d4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded18d4a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded18d4be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded18d4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded18d3020"/>
        <function-ref name="get" scoped="" ref="0x7fded18d31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded18d3330"/>
        <function-ref name="set" scoped="" ref="0x7fded18d34b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded18d3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded18d1710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded18d1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded18d1a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded18d1be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded18d1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded18cf020"/>
        <function-ref name="get" scoped="" ref="0x7fded18cf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded18cf330"/>
        <function-ref name="set" scoped="" ref="0x7fded18cf4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded18cf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded18cd710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded18cd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded18cda60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded18cdbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded18cdd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded18cc020"/>
        <function-ref name="get" scoped="" ref="0x7fded18cc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded18cc330"/>
        <function-ref name="set" scoped="" ref="0x7fded18cc4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded18cc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded18ca710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded18ca710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded18caa60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded18cabe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded18cad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded18c9020"/>
        <function-ref name="get" scoped="" ref="0x7fded18c91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded18c9330"/>
        <function-ref name="set" scoped="" ref="0x7fded18c94b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded18c9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fded1c91740" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fded1c91740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c91a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c91c18"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c91da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c8f020"/>
        <function-ref name="get" scoped="" ref="0x7fded1c8f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c8f330"/>
        <function-ref name="set" scoped="" ref="0x7fded1c8f4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c8f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fded1c8dbd8" loc="49:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fded1c8dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c8c020"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c8c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c8c330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c8c4b8"/>
        <function-ref name="get" scoped="" ref="0x7fded1c8c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c8c7c8"/>
        <function-ref name="set" scoped="" ref="0x7fded1c8c950"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c8cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fded1c93500" loc="44:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fded1c93500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c93850"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c939d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c93b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c93ce8"/>
        <function-ref name="get" scoped="" ref="0x7fded1c93e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c92020"/>
        <function-ref name="set" scoped="" ref="0x7fded1c921a8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c92330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fded1c8f8c8" loc="47:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fded1c8f8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c8fc18"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c8fda0"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c8e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c8e1a8"/>
        <function-ref name="get" scoped="" ref="0x7fded1c8e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c8e4b8"/>
        <function-ref name="set" scoped="" ref="0x7fded1c8e640"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c8e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fded1c8cd60" loc="50:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fded1c8cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c8b0d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c8b260"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c8b3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c8b570"/>
        <function-ref name="get" scoped="" ref="0x7fded1c8b6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c8b880"/>
        <function-ref name="set" scoped="" ref="0x7fded1c8ba08"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c8bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fded1c925b8" loc="45:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fded1c925b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c92908"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c92a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c92c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c92da0"/>
        <function-ref name="get" scoped="" ref="0x7fded1c91020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c911a8"/>
        <function-ref name="set" scoped="" ref="0x7fded1c91330"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c914b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fded1c8ea50" loc="48:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fded1c8ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c8eda0"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c8d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c8d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c8d330"/>
        <function-ref name="get" scoped="" ref="0x7fded1c8d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c8d640"/>
        <function-ref name="set" scoped="" ref="0x7fded1c8d7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c8d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fded1c8be18" loc="51:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fded1c8be18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c8a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c8a330"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c8a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c8a640"/>
        <function-ref name="get" scoped="" ref="0x7fded1c8a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c8a950"/>
        <function-ref name="set" scoped="" ref="0x7fded1c8aad8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c8ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded18796a8" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded18796a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded18799f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1879b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1879d08"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1878020"/>
        <function-ref name="get" scoped="" ref="0x7fded18781a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1878330"/>
        <function-ref name="set" scoped="" ref="0x7fded18784b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1878640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1876710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1876710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1876a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1876be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1876d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1875020"/>
        <function-ref name="get" scoped="" ref="0x7fded18751a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1875330"/>
        <function-ref name="set" scoped="" ref="0x7fded18754b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1875640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1873710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1873710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1873a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1873be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1873d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1872020"/>
        <function-ref name="get" scoped="" ref="0x7fded18721a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1872330"/>
        <function-ref name="set" scoped="" ref="0x7fded18724b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1872640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1870710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1870710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1870a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1870be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1870d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded186f020"/>
        <function-ref name="get" scoped="" ref="0x7fded186f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded186f330"/>
        <function-ref name="set" scoped="" ref="0x7fded186f4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded186f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded186d710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded186d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded186da60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded186dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded186dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded186c020"/>
        <function-ref name="get" scoped="" ref="0x7fded186c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded186c330"/>
        <function-ref name="set" scoped="" ref="0x7fded186c4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded186c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded186a710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded186a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded186aa60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded186abe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded186ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1868020"/>
        <function-ref name="get" scoped="" ref="0x7fded18681a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1868330"/>
        <function-ref name="set" scoped="" ref="0x7fded18684b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1868640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1866710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1866710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1866a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1866be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1866d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1865020"/>
        <function-ref name="get" scoped="" ref="0x7fded18651a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1865330"/>
        <function-ref name="set" scoped="" ref="0x7fded18654b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1865640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1863710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1863710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1863a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1863be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1863d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1862020"/>
        <function-ref name="get" scoped="" ref="0x7fded18621a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1862330"/>
        <function-ref name="set" scoped="" ref="0x7fded18624b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1862640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fded1c81120" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fded1c81120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c81470"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c815f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c81780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c81908"/>
        <function-ref name="get" scoped="" ref="0x7fded1c81a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c81c18"/>
        <function-ref name="set" scoped="" ref="0x7fded1c81da0"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fded1c7e5b8" loc="49:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fded1c7e5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c7e908"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c7ea90"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c7ec18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c7eda0"/>
        <function-ref name="get" scoped="" ref="0x7fded1c7d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c7d1a8"/>
        <function-ref name="set" scoped="" ref="0x7fded1c7d330"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c7d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fded1c84e40" loc="44:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fded1c84e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c831c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c83348"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c834d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c83658"/>
        <function-ref name="get" scoped="" ref="0x7fded1c837e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c83968"/>
        <function-ref name="set" scoped="" ref="0x7fded1c83af0"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c83c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fded1c802a8" loc="47:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fded1c802a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c805f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c80780"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c80908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c80a90"/>
        <function-ref name="get" scoped="" ref="0x7fded1c80c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c80da0"/>
        <function-ref name="set" scoped="" ref="0x7fded1c7f020"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c7f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fded1c7d740" loc="50:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fded1c7d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c7da90"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c7dc18"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c7dda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c7c020"/>
        <function-ref name="get" scoped="" ref="0x7fded1c7c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c7c330"/>
        <function-ref name="set" scoped="" ref="0x7fded1c7c4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c7c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fded1c82020" loc="45:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fded1c82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c82370"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c824f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c82680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c82808"/>
        <function-ref name="get" scoped="" ref="0x7fded1c82990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c82b18"/>
        <function-ref name="set" scoped="" ref="0x7fded1c82ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c82e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fded1c7f430" loc="48:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fded1c7f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c7f780"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c7f908"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c7fa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c7fc18"/>
        <function-ref name="get" scoped="" ref="0x7fded1c7fda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c7e020"/>
        <function-ref name="set" scoped="" ref="0x7fded1c7e1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c7e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fded1c7c8c8" loc="51:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fded1c7c8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c7cc18"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c7cda0"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c7b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c7b1a8"/>
        <function-ref name="get" scoped="" ref="0x7fded1c7b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c7b4b8"/>
        <function-ref name="set" scoped="" ref="0x7fded1c7b640"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c7b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded18126a8" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded18126a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded18129f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1812b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1812d08"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1811020"/>
        <function-ref name="get" scoped="" ref="0x7fded18111a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1811330"/>
        <function-ref name="set" scoped="" ref="0x7fded18114b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1811640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded180f710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded180f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded180fa60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded180fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded180fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded180e020"/>
        <function-ref name="get" scoped="" ref="0x7fded180e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded180e330"/>
        <function-ref name="set" scoped="" ref="0x7fded180e4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded180e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded180c710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded180c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded180ca60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded180cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded180cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded180b020"/>
        <function-ref name="get" scoped="" ref="0x7fded180b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded180b330"/>
        <function-ref name="set" scoped="" ref="0x7fded180b4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded180b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1809710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1809710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1809a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1809be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1809d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1808020"/>
        <function-ref name="get" scoped="" ref="0x7fded18081a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1808330"/>
        <function-ref name="set" scoped="" ref="0x7fded18084b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1808640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1806710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1806710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1806a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1806be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1806d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1805020"/>
        <function-ref name="get" scoped="" ref="0x7fded18051a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1805330"/>
        <function-ref name="set" scoped="" ref="0x7fded18054b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1805640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1803710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1803710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1803a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1803be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1803d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1802020"/>
        <function-ref name="get" scoped="" ref="0x7fded18021a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1802330"/>
        <function-ref name="set" scoped="" ref="0x7fded18024b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1802640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1800710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1800710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1800a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1800be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1800d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded17fe020"/>
        <function-ref name="get" scoped="" ref="0x7fded17fe1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded17fe330"/>
        <function-ref name="set" scoped="" ref="0x7fded17fe4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded17fe640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded17fc710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded17fc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded17fca60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded17fcbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded17fcd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded17fb020"/>
        <function-ref name="get" scoped="" ref="0x7fded17fb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded17fb330"/>
        <function-ref name="set" scoped="" ref="0x7fded17fb4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded17fb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fded1c73bd8" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fded1c73bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c72020"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c721a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c72330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c724b8"/>
        <function-ref name="get" scoped="" ref="0x7fded1c72640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c727c8"/>
        <function-ref name="set" scoped="" ref="0x7fded1c72950"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c72ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fded1c6f020" loc="49:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fded1c6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c6f370"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c6f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c6f680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c6f808"/>
        <function-ref name="get" scoped="" ref="0x7fded1c6f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c6fb18"/>
        <function-ref name="set" scoped="" ref="0x7fded1c6fca0"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c6fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fded1c75930" loc="44:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fded1c75930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c75c80"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c75e08"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c74020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c741a8"/>
        <function-ref name="get" scoped="" ref="0x7fded1c74330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c744b8"/>
        <function-ref name="set" scoped="" ref="0x7fded1c74640"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c747c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fded1c72d60" loc="47:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fded1c72d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c710d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c71260"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c713e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c71570"/>
        <function-ref name="get" scoped="" ref="0x7fded1c716f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c71880"/>
        <function-ref name="set" scoped="" ref="0x7fded1c71a08"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c71b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fded1c6e120" loc="50:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fded1c6e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c6e470"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c6e5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c6e780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c6e908"/>
        <function-ref name="get" scoped="" ref="0x7fded1c6ea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c6ec18"/>
        <function-ref name="set" scoped="" ref="0x7fded1c6eda0"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c6d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fded1c74a50" loc="45:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fded1c74a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c74da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c73020"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c731a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c73330"/>
        <function-ref name="get" scoped="" ref="0x7fded1c734b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c73640"/>
        <function-ref name="set" scoped="" ref="0x7fded1c737c8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c73950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fded1c71e18" loc="48:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fded1c71e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c701a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c70330"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c704b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c70640"/>
        <function-ref name="get" scoped="" ref="0x7fded1c707c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c70950"/>
        <function-ref name="set" scoped="" ref="0x7fded1c70ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c70c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fded1c6d2a8" loc="51:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fded1c6d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c6d5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c6d780"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c6d908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c6da90"/>
        <function-ref name="get" scoped="" ref="0x7fded1c6dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c6dda0"/>
        <function-ref name="set" scoped="" ref="0x7fded1c6c020"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c6c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded17ab6a8" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded17ab6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded17ab9f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded17abb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fded17abd08"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded17aa020"/>
        <function-ref name="get" scoped="" ref="0x7fded17aa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded17aa330"/>
        <function-ref name="set" scoped="" ref="0x7fded17aa4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded17aa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded17a8710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded17a8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded17a8a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded17a8be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded17a8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded17a7020"/>
        <function-ref name="get" scoped="" ref="0x7fded17a71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded17a7330"/>
        <function-ref name="set" scoped="" ref="0x7fded17a74b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded17a7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded17a5710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded17a5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded17a5a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded17a5be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded17a5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded17a4020"/>
        <function-ref name="get" scoped="" ref="0x7fded17a41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded17a4330"/>
        <function-ref name="set" scoped="" ref="0x7fded17a44b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded17a4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded17a2710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded17a2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded17a2a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded17a2be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded17a2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded17a1020"/>
        <function-ref name="get" scoped="" ref="0x7fded17a11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded17a1330"/>
        <function-ref name="set" scoped="" ref="0x7fded17a14b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded17a1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded179f710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded179f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded179fa60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded179fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded179fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded179e020"/>
        <function-ref name="get" scoped="" ref="0x7fded179e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded179e330"/>
        <function-ref name="set" scoped="" ref="0x7fded179e4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded179e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded179c710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded179c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded179ca60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded179cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded179cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded179b020"/>
        <function-ref name="get" scoped="" ref="0x7fded179b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded179b330"/>
        <function-ref name="set" scoped="" ref="0x7fded179b4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded179b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1799710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1799710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1799a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1799be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1799d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1797020"/>
        <function-ref name="get" scoped="" ref="0x7fded17971a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1797330"/>
        <function-ref name="set" scoped="" ref="0x7fded17974b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1797640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1795710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1795710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1795a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1795be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1795d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1794020"/>
        <function-ref name="get" scoped="" ref="0x7fded17941a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1794330"/>
        <function-ref name="set" scoped="" ref="0x7fded17944b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1794640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fded1c64430" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fded1c64430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c64780"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c64908"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c64a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c64c18"/>
        <function-ref name="get" scoped="" ref="0x7fded1c64da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c63020"/>
        <function-ref name="set" scoped="" ref="0x7fded1c631a8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c63330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fded1c618c8" loc="49:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fded1c618c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c61c18"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c61da0"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c5f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c5f1a8"/>
        <function-ref name="get" scoped="" ref="0x7fded1c5f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c5f4b8"/>
        <function-ref name="set" scoped="" ref="0x7fded1c5f640"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c5f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fded1c661e8" loc="44:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fded1c661e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c66538"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c666c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c66848"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c669d0"/>
        <function-ref name="get" scoped="" ref="0x7fded1c66b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c66ce0"/>
        <function-ref name="set" scoped="" ref="0x7fded1c66e68"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c65020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fded1c635b8" loc="47:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fded1c635b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c63908"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c63a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c63c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c63da0"/>
        <function-ref name="get" scoped="" ref="0x7fded1c62020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c621a8"/>
        <function-ref name="set" scoped="" ref="0x7fded1c62330"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c624b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fded1c5fa50" loc="50:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fded1c5fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c5fda0"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c5e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c5e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c5e330"/>
        <function-ref name="get" scoped="" ref="0x7fded1c5e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c5e640"/>
        <function-ref name="set" scoped="" ref="0x7fded1c5e7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c5e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fded1c652a8" loc="45:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fded1c652a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c655f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c65780"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c65908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c65a90"/>
        <function-ref name="get" scoped="" ref="0x7fded1c65c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c65da0"/>
        <function-ref name="set" scoped="" ref="0x7fded1c64020"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c641a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fded1c62740" loc="48:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fded1c62740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c62a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c62c18"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c62da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c61020"/>
        <function-ref name="get" scoped="" ref="0x7fded1c611a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c61330"/>
        <function-ref name="set" scoped="" ref="0x7fded1c614b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c61640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fded1c5ebd8" loc="51:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fded1c5ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c5d020"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c5d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c5d330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c5d4b8"/>
        <function-ref name="get" scoped="" ref="0x7fded1c5d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c5d7c8"/>
        <function-ref name="set" scoped="" ref="0x7fded1c5d950"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c5dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded17446a8" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded17446a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded17449f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1744b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1744d08"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1743020"/>
        <function-ref name="get" scoped="" ref="0x7fded17431a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1743330"/>
        <function-ref name="set" scoped="" ref="0x7fded17434b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1743640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1741710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1741710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1741a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1741be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1741d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1740020"/>
        <function-ref name="get" scoped="" ref="0x7fded17401a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1740330"/>
        <function-ref name="set" scoped="" ref="0x7fded17404b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1740640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded173e710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded173e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded173ea60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded173ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded173ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded173d020"/>
        <function-ref name="get" scoped="" ref="0x7fded173d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded173d330"/>
        <function-ref name="set" scoped="" ref="0x7fded173d4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded173d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded173b710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded173b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded173ba60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded173bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded173bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded173a020"/>
        <function-ref name="get" scoped="" ref="0x7fded173a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded173a330"/>
        <function-ref name="set" scoped="" ref="0x7fded173a4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded173a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1738710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1738710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1738a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1738be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1738d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1737020"/>
        <function-ref name="get" scoped="" ref="0x7fded17371a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1737330"/>
        <function-ref name="set" scoped="" ref="0x7fded17374b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1737640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1735710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1735710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1735a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1735be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1735d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1734020"/>
        <function-ref name="get" scoped="" ref="0x7fded17341a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1734330"/>
        <function-ref name="set" scoped="" ref="0x7fded17344b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1734640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1732710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1732710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1732a60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1732be8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1732d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1731020"/>
        <function-ref name="get" scoped="" ref="0x7fded17311a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1731330"/>
        <function-ref name="set" scoped="" ref="0x7fded17314b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1731640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded172f710" loc="46:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded172f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded172fa60"/>
        <function-ref name="isInput" scoped="" ref="0x7fded172fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded172fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded172d020"/>
        <function-ref name="get" scoped="" ref="0x7fded172d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded172d330"/>
        <function-ref name="set" scoped="" ref="0x7fded172d4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded172d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1c57ac0" loc="47:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1c57ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c57e10"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c41020"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c411a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c41330"/>
        <function-ref name="get" scoped="" ref="0x7fded1c414b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c41640"/>
        <function-ref name="set" scoped="" ref="0x7fded1c417c8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c41950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1c3ddb8" loc="47:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1c3ddb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c3c170"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c3c2f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c3c480"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c3c608"/>
        <function-ref name="get" scoped="" ref="0x7fded1c3c790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c3c918"/>
        <function-ref name="set" scoped="" ref="0x7fded1c3caa0"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c3cc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1c383e0" loc="47:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1c383e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c38730"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c388b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c38a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c38bc8"/>
        <function-ref name="get" scoped="" ref="0x7fded1c38d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c37020"/>
        <function-ref name="set" scoped="" ref="0x7fded1c371a8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c37330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1c337e8" loc="47:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1c337e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c33b38"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c33cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c33e48"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c32020"/>
        <function-ref name="get" scoped="" ref="0x7fded1c321a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c32330"/>
        <function-ref name="set" scoped="" ref="0x7fded1c324b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c32640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1c2ec38" loc="47:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1c2ec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c2d020"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c2d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c2d330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c2d4b8"/>
        <function-ref name="get" scoped="" ref="0x7fded1c2d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c2d7c8"/>
        <function-ref name="set" scoped="" ref="0x7fded1c2d950"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c2dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1c29020" loc="47:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1c29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c29370"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c294f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c29680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c29808"/>
        <function-ref name="get" scoped="" ref="0x7fded1c29990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c29b18"/>
        <function-ref name="set" scoped="" ref="0x7fded1c29ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c29e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1c24480" loc="47:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1c24480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c247d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c24958"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c24ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c24c68"/>
        <function-ref name="get" scoped="" ref="0x7fded1c24df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c23020"/>
        <function-ref name="set" scoped="" ref="0x7fded1c231a8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c23330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1c1f7e8" loc="47:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1c1f7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c1fb38"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c1fcc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c1fe48"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c1e020"/>
        <function-ref name="get" scoped="" ref="0x7fded1c1e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c1e330"/>
        <function-ref name="set" scoped="" ref="0x7fded1c1e4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c1e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1c1b970" loc="47:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1c1b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c1bcc0"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c1be48"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c1a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c1a1a8"/>
        <function-ref name="get" scoped="" ref="0x7fded1c1a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c1a4b8"/>
        <function-ref name="set" scoped="" ref="0x7fded1c1a640"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c1a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1c16ab0" loc="47:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1c16ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c16e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c15020"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c151a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c15330"/>
        <function-ref name="get" scoped="" ref="0x7fded1c154b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c15640"/>
        <function-ref name="set" scoped="" ref="0x7fded1c157c8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c15950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1c12c38" loc="47:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1c12c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c10020"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c101a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c10330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c104b8"/>
        <function-ref name="get" scoped="" ref="0x7fded1c10640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c107c8"/>
        <function-ref name="set" scoped="" ref="0x7fded1c10950"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c10ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1c0c020" loc="47:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1c0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c0c370"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c0c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c0c680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c0c808"/>
        <function-ref name="get" scoped="" ref="0x7fded1c0c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c0cb18"/>
        <function-ref name="set" scoped="" ref="0x7fded1c0cca0"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c0ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fded1c07180" loc="47:/home/asis/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fded1c07180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1c074d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1c07658"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1c077e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1c07968"/>
        <function-ref name="get" scoped="" ref="0x7fded1c07af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1c07c78"/>
        <function-ref name="set" scoped="" ref="0x7fded1c07e00"/>
        <function-ref name="clr" scoped="" ref="0x7fded1c06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fded1bce1b8" loc="27:/home/asis/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fded1bce1b8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fded1e576f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fded1e576f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded1bce508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fded1bce7e8" loc="28:/home/asis/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fded1bce7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fded1bceb38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fded1bcecc0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fded1bcee48"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fded1bcd020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fded1bcd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fded1bae560" loc="60:/home/asis/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fded1bae560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded1bae8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fded1d53e20" loc="57:/home/asis/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fded1d53e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fded1baf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fded1bafe68" loc="59:/home/asis/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fded1bafe68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded1bae1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fded1baf490" loc="58:/home/asis/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fded1baf490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded1baf7e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fded1baf968"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fded1bafaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fded1e4b728" loc="48:/home/asis/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fded1e4b728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fded1e4ba78"/>
        <function-ref name="runTask" scoped="" ref="0x7fded1e4bc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fded1e54be8" loc="47:/home/asis/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fded1e54be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded1e56020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fded1e561a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fded1e56330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fded1d95b08" loc="56:/home/asis/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fded1d95b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fded1d95e58"/>
        <function-ref name="runTask" scoped="" ref="0x7fded1d93020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fded1d92020" loc="57:/home/asis/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fded1d92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fded1d92370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fded1d96c00" loc="55:/home/asis/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fded1d96c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded1d95020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fded1d951a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fded1d95330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fded1d737f0" loc="54:/home/asis/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fded1d737f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fded1d73b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fded1e4add0" loc="50:/home/asis/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fded1e4add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fded1d77170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fded1d74240" loc="51:/home/asis/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fded1d74240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fded1d74590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x7fded1b98578" loc="52:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x7fded1b98578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fded1b968f0"/>
        <function-ref name="fired" scoped="" ref="0x7fded1ba2020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fded1ba2d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fded1ba28c0"/>
        <function-ref name="getdt" scoped="" ref="0x7fded1b951c0"/>
        <function-ref name="gett0" scoped="" ref="0x7fded1b96d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fded1ba2470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fded1ba30f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fded1b96320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fded1ba3598"/>
        <function-ref name="stop" scoped="" ref="0x7fded1ba3a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fded1b895e8" loc="56:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fded1b895e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fded1b89938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x7fded1b957d8" loc="53:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x7fded1b957d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fded1b91a18"/>
        <function-ref name="fired" scoped="" ref="0x7fded1b93158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fded1b93e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fded1b939f8"/>
        <function-ref name="getdt" scoped="" ref="0x7fded1b902e8"/>
        <function-ref name="gett0" scoped="" ref="0x7fded1b91e68"/>
        <function-ref name="isRunning" scoped="" ref="0x7fded1b935a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fded1b94370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fded1b91448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fded1b94810"/>
        <function-ref name="stop" scoped="" ref="0x7fded1b94cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fded1b8a020" loc="55:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fded1b8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fded1b8a370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fded1b8a4f8"/>
        <function-ref name="led1On" scoped="" ref="0x7fded1b8a680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fded1b8a808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fded1b8a990"/>
        <function-ref name="get" scoped="" ref="0x7fded1b8ab18"/>
        <function-ref name="led1Off" scoped="" ref="0x7fded1b8aca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fded1b89330"/>
        <function-ref name="set" scoped="" ref="0x7fded1b8ae28"/>
        <function-ref name="led0On" scoped="" ref="0x7fded1b89020"/>
        <function-ref name="led2On" scoped="" ref="0x7fded1b891a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x7fded1b90900" loc="54:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer2" scoped="" ref="0x7fded1b90900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fded1b8cbc0"/>
        <function-ref name="fired" scoped="" ref="0x7fded1b8e278"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fded1b8c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fded1b8eb18"/>
        <function-ref name="getdt" scoped="" ref="0x7fded1b8b4d8"/>
        <function-ref name="gett0" scoped="" ref="0x7fded1b8b088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fded1b8e6c8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fded1b8f490"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fded1b8c5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fded1b8f930"/>
        <function-ref name="stop" scoped="" ref="0x7fded1b8fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fded1ba4d20" loc="46:/home/asis/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fded1ba4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fded1b760a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fded1b76228"/>
        <function-ref name="led1On" scoped="" ref="0x7fded1b763b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fded1b76538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fded1b766c0"/>
        <function-ref name="get" scoped="" ref="0x7fded1b76848"/>
        <function-ref name="led1Off" scoped="" ref="0x7fded1b769d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fded1b75020"/>
        <function-ref name="set" scoped="" ref="0x7fded1b76b58"/>
        <function-ref name="led0On" scoped="" ref="0x7fded1b76ce0"/>
        <function-ref name="led2On" scoped="" ref="0x7fded1b76e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fded1b71ce8" loc="50:/home/asis/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fded1b71ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1b700a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1b70228"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1b703b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1b70538"/>
        <function-ref name="get" scoped="" ref="0x7fded1b706c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1b70848"/>
        <function-ref name="set" scoped="" ref="0x7fded1b709d0"/>
        <function-ref name="clr" scoped="" ref="0x7fded1b70b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fded1b72020" loc="46:/home/asis/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fded1b72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded1b72370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fded1b70e70" loc="51:/home/asis/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fded1b70e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1b6f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1b6f370"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1b6f4f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1b6f680"/>
        <function-ref name="get" scoped="" ref="0x7fded1b6f808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1b6f990"/>
        <function-ref name="set" scoped="" ref="0x7fded1b6fb18"/>
        <function-ref name="clr" scoped="" ref="0x7fded1b6fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fded1b725e8" loc="47:/home/asis/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fded1b725e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fded1b72938"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fded1b72ac0"/>
        <function-ref name="led1On" scoped="" ref="0x7fded1b72c48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fded1b72dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fded1b71020"/>
        <function-ref name="get" scoped="" ref="0x7fded1b711a8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fded1b71330"/>
        <function-ref name="led2Off" scoped="" ref="0x7fded1b71950"/>
        <function-ref name="set" scoped="" ref="0x7fded1b714b8"/>
        <function-ref name="led0On" scoped="" ref="0x7fded1b71640"/>
        <function-ref name="led2On" scoped="" ref="0x7fded1b717c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fded1b6e020" loc="52:/home/asis/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fded1b6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1b6e370"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1b6e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1b6e680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1b6e808"/>
        <function-ref name="get" scoped="" ref="0x7fded1b6e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1b6eb18"/>
        <function-ref name="set" scoped="" ref="0x7fded1b6eca0"/>
        <function-ref name="clr" scoped="" ref="0x7fded1b6ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fded1b73e18" loc="44:/home/asis/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fded1b73e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1b521a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1b52330"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1b524b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1b52640"/>
        <function-ref name="get" scoped="" ref="0x7fded1b527c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1b52950"/>
        <function-ref name="set" scoped="" ref="0x7fded1b52ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fded1b52c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fded1b51020" loc="45:/home/asis/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fded1b51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1b51370"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1b514f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1b51680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1b51808"/>
        <function-ref name="get" scoped="" ref="0x7fded1b51990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1b51b18"/>
        <function-ref name="set" scoped="" ref="0x7fded1b51ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fded1b51e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fded1b4f2d8" loc="47:/home/asis/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fded1b4f2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded1b4f628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fded1b501b0" loc="46:/home/asis/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fded1b501b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fded1b50500"/>
        <function-ref name="isInput" scoped="" ref="0x7fded1b50688"/>
        <function-ref name="toggle" scoped="" ref="0x7fded1b50810"/>
        <function-ref name="isOutput" scoped="" ref="0x7fded1b50998"/>
        <function-ref name="get" scoped="" ref="0x7fded1b50b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fded1b50ca8"/>
        <function-ref name="set" scoped="" ref="0x7fded1b50e30"/>
        <function-ref name="clr" scoped="" ref="0x7fded1b4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fded1b49a60" loc="45:/home/asis/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fded1b49a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fded198dd60"/>
        <function-ref name="fired" scoped="" ref="0x7fded198e470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fded198d1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fded198ed10"/>
        <function-ref name="getdt" scoped="" ref="0x7fded198c648"/>
        <function-ref name="gett0" scoped="" ref="0x7fded198c1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fded198e8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fded1990620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fded198d790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fded1990ac0"/>
        <function-ref name="stop" scoped="" ref="0x7fded198e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fded1b3f6a0" loc="49:/home/asis/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fded1b3f6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fded1b3ca18"/>
        <function-ref name="fired" scoped="" ref="0x7fded1b3d158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fded1b3de48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fded1b3d9f8"/>
        <function-ref name="getdt" scoped="" ref="0x7fded1b3b2e8"/>
        <function-ref name="gett0" scoped="" ref="0x7fded1b3ce68"/>
        <function-ref name="isRunning" scoped="" ref="0x7fded1b3d5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fded1b3e370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fded1b3c448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fded1b3e810"/>
        <function-ref name="stop" scoped="" ref="0x7fded1b3ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fded1b37db8" loc="46:/home/asis/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fded1b37db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fded1b32088"/>
        <function-ref name="fired" scoped="" ref="0x7fded1b35708"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fded1b33470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fded1b33020"/>
        <function-ref name="getdt" scoped="" ref="0x7fded1b32928"/>
        <function-ref name="gett0" scoped="" ref="0x7fded1b324d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fded1b35b58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fded1b36930"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fded1b33a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fded1b36dd0"/>
        <function-ref name="stop" scoped="" ref="0x7fded1b352b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fded1b2d298" loc="47:/home/asis/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fded1b2d298"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fded1b2de18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fded1b370c0" loc="45:/home/asis/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fded1b370c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded1b37410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7fded1b1f3b8" loc="29:/home/asis/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7fded1b1f3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fded1b1d130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fded1b1da40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fded1b1d5b8"/>
        <function-ref name="overflow" scoped="" ref="0x7fded1b18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fded1b2f8a8" loc="27:/home/asis/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fded1b2f8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded1b2fbf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7fded1b281c8" loc="28:/home/asis/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7fded1b281c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fded1b21918"/>
        <function-ref name="fired" scoped="" ref="0x7fded1b22980"/>
        <function-ref name="startAt" scoped="" ref="0x7fded1b21310"/>
        <function-ref name="isRunning" scoped="" ref="0x7fded1b22e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fded1b21da0"/>
        <function-ref name="start" scoped="" ref="0x7fded1b22020"/>
        <function-ref name="stop" scoped="" ref="0x7fded1b224f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fded1a28998" loc="26:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fded1a28998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fded1a25020"/>
        <function-ref name="fired" scoped="" ref="0x7fded1a260c0"/>
        <function-ref name="startAt" scoped="" ref="0x7fded1a269d0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fded1a26548"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fded1a254a8"/>
        <function-ref name="start" scoped="" ref="0x7fded1a27730"/>
        <function-ref name="stop" scoped="" ref="0x7fded1a27c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fded1a281f0" loc="25:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fded1a281f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fded1e57388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fded1e57388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded1a28540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fded1a25a90" loc="27:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fded1a25a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fded1a23828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fded1a22190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fded1a23cb0"/>
        <function-ref name="overflow" scoped="" ref="0x7fded1a22618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7fded1654708" loc="31:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fded1654708"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7fded1654a58"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fded1654be0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fded1654d68"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fded1653020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fded16531a8"/>
        <function-ref name="setControl" scoped="" ref="0x7fded1653330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fded166a478" loc="26:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fded166a478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fded1668b18"/>
        <function-ref name="fired" scoped="" ref="0x7fded1669b80"/>
        <function-ref name="startAt" scoped="" ref="0x7fded1668510"/>
        <function-ref name="isRunning" scoped="" ref="0x7fded1668088"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fded1666020"/>
        <function-ref name="start" scoped="" ref="0x7fded1669220"/>
        <function-ref name="stop" scoped="" ref="0x7fded16696f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fded166bc70" loc="25:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fded166bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fded166a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fded1666608" loc="27:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fded1666608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fded16653a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fded1665cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fded1665830"/>
        <function-ref name="overflow" scoped="" ref="0x7fded1659190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7fded164f8c0" loc="33:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fded164f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7fded164fc10"/>
        <function-ref name="compareBusy" scoped="" ref="0x7fded164fd98"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7fded164e020"/>
        <function-ref name="countBusy" scoped="" ref="0x7fded164e1a8"/>
        <function-ref name="getAssr" scoped="" ref="0x7fded164e330"/>
        <function-ref name="setAssr" scoped="" ref="0x7fded164e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7fded16536c0" loc="32:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fded16536c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fded164f020"/>
        <function-ref name="fired" scoped="" ref="0x7fded1652d08"/>
        <function-ref name="get" scoped="" ref="0x7fded16523a8"/>
        <function-ref name="reset" scoped="" ref="0x7fded16501f8"/>
        <function-ref name="isOn" scoped="" ref="0x7fded164f4a8"/>
        <function-ref name="set" scoped="" ref="0x7fded1652830"/>
        <function-ref name="start" scoped="" ref="0x7fded1650680"/>
        <function-ref name="stop" scoped="" ref="0x7fded1650b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fded1659710" loc="30:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fded1659710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fded1655930"/>
        <function-ref name="test" scoped="" ref="0x7fded1655020"/>
        <function-ref name="get" scoped="" ref="0x7fded16583a8"/>
        <function-ref name="setScale" scoped="" ref="0x7fded1655db8"/>
        <function-ref name="getScale" scoped="" ref="0x7fded16542f0"/>
        <function-ref name="reset" scoped="" ref="0x7fded16561f8"/>
        <function-ref name="overflow" scoped="" ref="0x7fded1658d08"/>
        <function-ref name="isOn" scoped="" ref="0x7fded16554a8"/>
        <function-ref name="set" scoped="" ref="0x7fded1658830"/>
        <function-ref name="start" scoped="" ref="0x7fded1656680"/>
        <function-ref name="stop" scoped="" ref="0x7fded1656b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fded1a98020" loc="48:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fded1a98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7fded1a98370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fded1a984f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fded1a98680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fded1a98808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fded1a98990"/>
        <function-ref name="setControl" scoped="" ref="0x7fded1a98b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7fded1a93228" loc="50:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fded1a93228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7fded1a93578"/>
        <function-ref name="compareBusy" scoped="" ref="0x7fded1a93700"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7fded1a93888"/>
        <function-ref name="countBusy" scoped="" ref="0x7fded1a93a10"/>
        <function-ref name="getAssr" scoped="" ref="0x7fded1a93b98"/>
        <function-ref name="setAssr" scoped="" ref="0x7fded1a93d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fded1a96020" loc="49:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fded1a96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fded1a947a8"/>
        <function-ref name="fired" scoped="" ref="0x7fded1a95560"/>
        <function-ref name="get" scoped="" ref="0x7fded1a96ba0"/>
        <function-ref name="reset" scoped="" ref="0x7fded1a959e8"/>
        <function-ref name="isOn" scoped="" ref="0x7fded1a94c30"/>
        <function-ref name="set" scoped="" ref="0x7fded1a95088"/>
        <function-ref name="start" scoped="" ref="0x7fded1a95e70"/>
        <function-ref name="stop" scoped="" ref="0x7fded1a94320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fded1aa0de8" loc="47:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fded1aa0de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fded1a990f8"/>
        <function-ref name="test" scoped="" ref="0x7fded1a9a798"/>
        <function-ref name="get" scoped="" ref="0x7fded1a9da18"/>
        <function-ref name="setScale" scoped="" ref="0x7fded1a99580"/>
        <function-ref name="getScale" scoped="" ref="0x7fded1a99a58"/>
        <function-ref name="reset" scoped="" ref="0x7fded1a9c980"/>
        <function-ref name="overflow" scoped="" ref="0x7fded1a9c4f8"/>
        <function-ref name="isOn" scoped="" ref="0x7fded1a9ac20"/>
        <function-ref name="set" scoped="" ref="0x7fded1a9c020"/>
        <function-ref name="start" scoped="" ref="0x7fded1a9ce08"/>
        <function-ref name="stop" scoped="" ref="0x7fded1a9a310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fded1a89160" loc="50:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fded1a89160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7fded1a894b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fded1a89638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fded1a897c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fded1a89948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fded1a89ad0"/>
        <function-ref name="setControl" scoped="" ref="0x7fded1a89c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fded1a84268" loc="52:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fded1a84268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fded1a845b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7fded1a84968" loc="53:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fded1a84968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7fded1a84cb8"/>
        <function-ref name="compareBusy" scoped="" ref="0x7fded1a84e40"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7fded1a83020"/>
        <function-ref name="countBusy" scoped="" ref="0x7fded1a831a8"/>
        <function-ref name="getAssr" scoped="" ref="0x7fded1a83330"/>
        <function-ref name="setAssr" scoped="" ref="0x7fded1a834b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fded1a88190" loc="51:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fded1a88190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fded1a86930"/>
        <function-ref name="fired" scoped="" ref="0x7fded1a876d0"/>
        <function-ref name="get" scoped="" ref="0x7fded1a88d10"/>
        <function-ref name="reset" scoped="" ref="0x7fded1a87b58"/>
        <function-ref name="isOn" scoped="" ref="0x7fded1a86db8"/>
        <function-ref name="set" scoped="" ref="0x7fded1a871f8"/>
        <function-ref name="start" scoped="" ref="0x7fded1a86020"/>
        <function-ref name="stop" scoped="" ref="0x7fded1a864a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fded1a8e0f8" loc="49:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fded1a8e0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fded1a8b270"/>
        <function-ref name="test" scoped="" ref="0x7fded1a8c930"/>
        <function-ref name="get" scoped="" ref="0x7fded1a8ec78"/>
        <function-ref name="setScale" scoped="" ref="0x7fded1a8b6f8"/>
        <function-ref name="getScale" scoped="" ref="0x7fded1a8bbd0"/>
        <function-ref name="reset" scoped="" ref="0x7fded1a8da90"/>
        <function-ref name="overflow" scoped="" ref="0x7fded1a8d608"/>
        <function-ref name="isOn" scoped="" ref="0x7fded1a8cdb8"/>
        <function-ref name="set" scoped="" ref="0x7fded1a8d130"/>
        <function-ref name="start" scoped="" ref="0x7fded1a8c020"/>
        <function-ref name="stop" scoped="" ref="0x7fded1a8c4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fded19f3cf0" loc="74:/home/asis/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7fded19f3cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fded19f10a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fded19f1228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fded19f6c70" loc="49:/home/asis/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fded19f6c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fded19f3410"/>
        <function-ref name="fired" scoped="" ref="0x7fded19f44a8"/>
        <function-ref name="startAt" scoped="" ref="0x7fded19f4db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fded19f4930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fded19f3898"/>
        <function-ref name="start" scoped="" ref="0x7fded19f59f0"/>
        <function-ref name="stop" scoped="" ref="0x7fded19f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fded19fbab0" loc="48:/home/asis/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fded19fbab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fded19f8d60"/>
        <function-ref name="fired" scoped="" ref="0x7fded19f9470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fded19f81c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fded19f9d10"/>
        <function-ref name="getdt" scoped="" ref="0x7fded19f6648"/>
        <function-ref name="gett0" scoped="" ref="0x7fded19f61f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fded19f98c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fded19fa620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fded19f8790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fded19faac0"/>
        <function-ref name="stop" scoped="" ref="0x7fded19f9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fded19a4930" loc="71:/home/asis/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7fded19a4930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fded19a4c80"/>
        <function-ref name="runTask" scoped="" ref="0x7fded19a4e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fded19a9858" loc="49:/home/asis/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7fded19a9858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fded19a6bc0"/>
        <function-ref name="fired" scoped="" ref="0x7fded19a71c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fded19a6020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fded19a7a60"/>
        <function-ref name="getdt" scoped="" ref="0x7fded19a44d8"/>
        <function-ref name="gett0" scoped="" ref="0x7fded19a4088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fded19a7610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fded19a83d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fded19a65f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fded19a8878"/>
        <function-ref name="stop" scoped="" ref="0x7fded19a8d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fded19af5e0" loc="48:/home/asis/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fded19af5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fded19ab988"/>
        <function-ref name="fired" scoped="" ref="0x7fded19ad020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fded19add70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fded19ad900"/>
        <function-ref name="getdt" scoped="" ref="0x7fded19a92d8"/>
        <function-ref name="gett0" scoped="" ref="0x7fded19abdf8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fded19ad490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fded19ae198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fded19ab398"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fded19ae658"/>
        <function-ref name="stop" scoped="" ref="0x7fded19aeb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fded19a0128" loc="48:/home/asis/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fded19a0128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fded19a0ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fded1997330" loc="49:/home/asis/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fded1997330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fded19960c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fded19969d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fded1996548"/>
        <function-ref name="overflow" scoped="" ref="0x7fded1996e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fded198a020" loc="45:/home/asis/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fded198a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fded19862b8"/>
        <function-ref name="fired" scoped="" ref="0x7fded1988978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fded19876c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fded1987278"/>
        <function-ref name="getdt" scoped="" ref="0x7fded1986b58"/>
        <function-ref name="gett0" scoped="" ref="0x7fded1986708"/>
        <function-ref name="isRunning" scoped="" ref="0x7fded1988dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fded198ab68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fded1987c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fded1988088"/>
        <function-ref name="stop" scoped="" ref="0x7fded1988528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fded1984550" loc="45:/home/asis/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fded1984550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fded1dd0608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fded1dd0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fded1980768"/>
        <function-ref name="fired" scoped="" ref="0x7fded1982e50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fded1981b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fded1981728"/>
        <function-ref name="getdt" scoped="" ref="0x7fded197f088"/>
        <function-ref name="gett0" scoped="" ref="0x7fded1980bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fded19812d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fded19820c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fded1980198"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fded1982560"/>
        <function-ref name="stop" scoped="" ref="0x7fded1982a00"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/asis/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fded1d57bf0" loc="62:/home/asis/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/asis/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fded1e4f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/asis/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/asis/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fded1d587e8" loc="60:/home/asis/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/asis/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7fded1d4db30" loc="60:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fded2767b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7fded1d4d8c0" loc="60:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7fded1d4f328" loc="31:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fded2767b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7fded1d4fd20" loc="39:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fded1d4fab0" loc="39:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7fded1d4e7d0" loc="46:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fded1d4e560" loc="46:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7fded1d4d070" loc="53:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/asis/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/asis/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fded1d3bab0" loc="44:/home/asis/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fded1d3a1d8" loc="45:/home/asis/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fded1e5a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fded1d3cd20" loc="42:/home/asis/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fded1d38020" loc="47:/home/asis/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fded1e5a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fded1d3b400" loc="43:/home/asis/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fded1e5a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fded1d3a890" loc="46:/home/asis/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fded1d3c020" loc="40:/home/asis/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fded1d3c690" loc="41:/home/asis/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/asis/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/asis/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fded1e5c970" loc="57:/home/asis/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/asis/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fded1e54878" loc="72:/home/asis/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/asis/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fded1e540d8" loc="65:/home/asis/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/asis/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fded1e5a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/asis/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fded1e4c608" loc="67:/home/asis/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/asis/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fded1e4f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fded1e4cdf8" loc="75:/home/asis/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/asis/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/asis/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/asis/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7fded1d93ca8" loc="76:/home/asis/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/asis/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/asis/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/asis/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fded1d73360" loc="62:/home/asis/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/asis/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fded1df2940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/asis/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/asis/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fded1d77e60" loc="52:/home/asis/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/asis/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fded1ba1370" loc="53:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fded1ba1370"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fded1b99020" loc="136:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fded1b9e710" loc="83:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fded1b9c5b8" loc="114:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fded1b9c020" loc="114:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fded1b9c338" loc="114:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fded1b9d7b8" loc="98:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fded1e5a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fded1b98020" loc="151:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fded1b99740" loc="144:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fded1b9d020" loc="92:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fded1e5a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fded1ba1e40" loc="64:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fded1ba1bd0" loc="64:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fded1b9b5b8" loc="129:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fded1b9b020" loc="129:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fded1b9b338" loc="129:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fded1ba08a0" loc="73:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fded1ba0630" loc="73:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fded1b9e070" loc="78:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/asis/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/asis/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fded1b85428" loc="61:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fded1b85b60" loc="67:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fded1b83328" loc="72:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fded1b821d8" loc="83:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fded1b81810" loc="100:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fded1b80020" loc="117:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fded1b83a40" loc="77:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fded1b80b20" loc="134:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fded1b808b0" loc="134:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fded1b86cd8" loc="56:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fded1b82948" loc="89:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fded1b810d8" loc="94:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/asis/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/asis/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/asis/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fded1b2e518" loc="53:/home/asis/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fded1b2e518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fded1b2eda8" loc="61:/home/asis/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/asis/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fded2766608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/asis/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/asis/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fded1b20a50" loc="57:/home/asis/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fded1b20a50"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fded1b20c80" loc="57:/home/asis/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fded1b20c80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fded1b1b548" loc="64:/home/asis/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/asis/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fded1b20c80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fded1b1a590" loc="76:/home/asis/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/asis/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fded1b1bd60" loc="71:/home/asis/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/asis/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fded1e5a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fded1b1ac80" loc="82:/home/asis/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/asis/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/asis/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/asis/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fded1b2a738" loc="56:/home/asis/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fded1b2a738"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fded1b2a968" loc="56:/home/asis/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fded1b2a968"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fded1b23290" loc="109:/home/asis/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/asis/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fded1b2a968"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fded1b25418" loc="78:/home/asis/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/asis/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fded1b24920" loc="103:/home/asis/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/asis/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fded1b2a968"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fded1b2a968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fded1b24380" loc="103:/home/asis/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fded1b2a968"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fded1b246a0" loc="103:/home/asis/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fded1b2a968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fded1b25b88" loc="88:/home/asis/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/asis/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fded1e5a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fded1b23a10" loc="116:/home/asis/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/asis/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fded1b2a968"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fded1b274a8" loc="66:/home/asis/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/asis/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fded1b2a968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fded1b27238" loc="66:/home/asis/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fded1b2a968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fded1b27c78" loc="73:/home/asis/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/asis/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7fded1af2110" loc="45:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fded1dc5a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7fded1dc5e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7fded1aef4c0" loc="53:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fded1dba100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7fded1dba508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7fded1af0328" loc="49:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fded1dbe980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7fded1dbed88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7fded1af0ce0" loc="50:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fded1dbe980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7fded1dbed88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fded1af0a70" loc="50:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fded1dbe980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7fded1dbed88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7fded1aefe78" loc="54:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fded1dba100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7fded1dba508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fded1aefc08" loc="54:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fded1dba100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7fded1dba508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fded1af2ae0" loc="46:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fded1dc5a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7fded1dc5e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fded1af2870" loc="46:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fded1dc5a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7fded1dc5e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x7fded1ae1c30" loc="38:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x7fded1ae0450" loc="44:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x7fded1ae1528" loc="32:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7fded1ae0c00" loc="50:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7fded1ae3378" loc="21:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fded1dc0118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x7fded1dc0520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7fded1ae3d28" loc="27:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fded1dc0118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7fded1dc0520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fded1ae3ab8" loc="27:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fded1dc0118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7fded1dc0520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7fded1af45c0" loc="41:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fded1af45c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7fded1ae9c50" loc="74:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fded1e5a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fded1aea020" loc="58:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fded1af4e78" loc="48:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fded1af45c0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fded1aea728" loc="62:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fded1ae83e0" loc="80:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fded1e5a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fded1aec7f0" loc="54:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fded1af45c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fded1aec580" loc="54:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fded1af45c0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fded1aeae20" loc="65:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fded1ae9538" loc="68:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7fded1b01870" loc="55:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fded1b01870"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7fded1af9020" loc="98:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7fded1afa020" loc="87:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fded1e5a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fded1afe178" loc="61:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fded1b01870"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7fded1af9970" loc="104:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7fded1af9700" loc="104:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7fded1af8178" loc="110:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fded2767160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fded1afd978" loc="75:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fded1afd258" loc="70:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fded1afa778" loc="93:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fded1e5a9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fded1afeab0" loc="67:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fded1b01870"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fded1afe840" loc="67:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fded1b01870"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fded1afc0d8" loc="78:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fded1afc7c0" loc="81:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/asis/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
