<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="34:OscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f426c614cf0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f426c555080"/></to>
    </wire>
    <wire loc="72:/home/punit/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f426c555080"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f426c551a00"/></to>
    </wire>
    <wire loc="35:OscilloscopeAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f426c60d710"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f426c556d00"/></to>
    </wire>
    <wire loc="76:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f426c556d00"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f426c345880"/></to>
    </wire>
    <wire loc="36:OscilloscopeAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f426c5b35a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f426b0c5020"/></to>
    </wire>
    <wire loc="64:/home/punit/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f426b0c5020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f426a7a7100"/></to>
    </wire>
    <wire loc="37:OscilloscopeAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f426c5afdf0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f426b0b9910"/></to>
    </wire>
    <wire loc="54:/home/punit/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f426b0b9910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f426c388020"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:OscilloscopeAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f426c5b4020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f426b5f6c10"/></to>
    </wire>
    <wire loc="52:/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f426b5f6c10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f426b85cd90"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:OscilloscopeAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f426c59e620"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f426b5ee4b0"/></to>
    </wire>
    <wire loc="29:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelXC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f426b5ee4b0"/></from>
      <to><interface-ref name="ReadX" scoped="" ref="0x7f426b5eadc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:OscilloscopeAppC.nc">
      <from><interface-ref name="Sensor1" scoped="" ref="0x7f426c59b300"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f426b3c51e0"/></to>
    </wire>
    <wire loc="24:/home/punit/tinyos-main/tos/sensorboards/mts300/TempC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f426b3c51e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f426b3bf210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:OscilloscopeAppC.nc">
      <from><interface-ref name="Sensor2" scoped="" ref="0x7f426c590c80"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f426b150680"/></to>
    </wire>
    <wire loc="50:/home/punit/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f426b150680"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f426b3211d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:OscilloscopeAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f426c592a80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f426bc67110"/></to>
    </wire>
    <wire loc="51:/home/punit/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f426bc67110"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f426bc62a70"/></to>
    </wire>
    <wire loc="43:OscilloscopeAppC.nc">
      <from><interface-ref name="Mts300Sounder" scoped="" ref="0x7f426c58b140"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x7f426b6605a0"/></to>
    </wire>
    <wire loc="9:/home/punit/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="Mts300Sounder" scoped="" ref="0x7f426b6605a0"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x7f426b65d440"/></to>
    </wire>
    <wire loc="103:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c552590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426a814770"/></to>
    </wire>
    <wire loc="103:/home/punit/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c552590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426a8a5a00"/></to>
    </wire>
    <wire loc="103:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c552590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426a952080"/></to>
    </wire>
    <wire loc="103:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c552590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426a98f4c0"/></to>
    </wire>
    <wire loc="103:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c552590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426a9cd480"/></to>
    </wire>
    <wire loc="103:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c552590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426aa25460"/></to>
    </wire>
    <wire loc="103:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c552590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426aa93420"/></to>
    </wire>
    <wire loc="104:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c552590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426b737dd0"/></to>
    </wire>
    <wire loc="60:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c552590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426b7c0b70"/></to>
    </wire>
    <wire loc="58:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c552590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426b7df750"/></to>
    </wire>
    <wire loc="52:/home/punit/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c552590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426b7fc080"/></to>
    </wire>
    <wire loc="53:/home/punit/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c552590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426b978200"/></to>
    </wire>
    <wire loc="66:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c552590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426ba7c810"/></to>
    </wire>
    <wire loc="62:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c552590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426bb5e450"/></to>
    </wire>
    <wire loc="63:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c552590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426c1c17f0"/></to>
    </wire>
    <wire loc="96:/home/punit/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c552590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426ac62d70"/></to>
    </wire>
    <wire loc="74:/home/punit/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c552590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426bdde020"/></to>
    </wire>
    <wire loc="60:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c552590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426c275cd0"/></to>
    </wire>
    <wire loc="67:/home/punit/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f426c3960c0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f426c71b0d0"/></to>
    </wire>
    <wire loc="53:/home/punit/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f426c71b0d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f426c6550c0"/></to>
    </wire>
    <wire loc="68:/home/punit/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f426c396ae0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426c554d60"/></to>
    </wire>
    <wire loc="58:/home/punit/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f426c554d60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426c5450c0"/></to>
    </wire>
    <wire loc="71:/home/punit/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c395210"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c552590"/></to>
    </wire>
    <wire loc="71:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f426c54fd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426b4b10c0"/></to>
    </wire>
    <wire loc="26:/home/punit/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f426c54fd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426c043e80"/></to>
    </wire>
    <wire loc="59:/home/punit/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f426c54f020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f426c3b7020"/></to>
    </wire>
    <wire loc="61:/home/punit/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f426c544020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426c3b8910"/></to>
    </wire>
    <wire loc="54:/home/punit/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f426c5457a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426bc3f600"/></to>
    </wire>
    <wire loc="62:/home/punit/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f426c5457a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f426c5499e0"/></to>
    </wire>
    <wire loc="46:/home/punit/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f426c5499e0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f426c53c780"/></to>
    </wire>
    <wire loc="63:/home/punit/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f426c53f110"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f426c54fd50"/></to>
    </wire>
    <wire loc="48:/home/punit/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f426c535d20"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f426c52a350"/></to>
    </wire>
    <wire loc="141:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f426c52a350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f426c49fda0"/></to>
    </wire>
    <wire loc="49:/home/punit/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f426c539020"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f426c53f110"/></to>
    </wire>
    <wire loc="191:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f426c4f3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426c407120"/></to>
    </wire>
    <wire loc="165:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f426c510800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f426c4742b0"/></to>
    </wire>
    <wire loc="67:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f426c4742b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426af33e20"/></to>
    </wire>
    <wire loc="176:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f426c503670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f426c4638f0"/></to>
    </wire>
    <wire loc="69:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f426c4638f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426aec13f0"/></to>
    </wire>
    <wire loc="185:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f426c4f9020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f426c4538f0"/></to>
    </wire>
    <wire loc="69:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f426c4538f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426ae563f0"/></to>
    </wire>
    <wire loc="143:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f426c528990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f426c49c2b0"/></to>
    </wire>
    <wire loc="72:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f426c49c2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426b0640a0"/></to>
    </wire>
    <wire loc="183:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f426c4fc990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f426c4555d0"/></to>
    </wire>
    <wire loc="67:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f426c4555d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426ae5ee20"/></to>
    </wire>
    <wire loc="146:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f426c524020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f426c495a20"/></to>
    </wire>
    <wire loc="66:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f426c495a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426b00c060"/></to>
    </wire>
    <wire loc="157:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f426c518020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f426c482020"/></to>
    </wire>
    <wire loc="68:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f426c482020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426af9a0a0"/></to>
    </wire>
    <wire loc="168:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f426c50c060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f426c471760"/></to>
    </wire>
    <wire loc="70:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f426c471760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426af296d0"/></to>
    </wire>
    <wire loc="179:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f426c4ff020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f426c45fda0"/></to>
    </wire>
    <wire loc="72:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f426c45fda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426aeb8e20"/></to>
    </wire>
    <wire loc="138:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f426c52e990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f426c4a38f0"/></to>
    </wire>
    <wire loc="67:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f426c4a38f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426b07c0a0"/></to>
    </wire>
    <wire loc="149:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f426c521990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f426c490020"/></to>
    </wire>
    <wire loc="69:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f426c490020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426b0039b0"/></to>
    </wire>
    <wire loc="160:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f426c515990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f426c47f5d0"/></to>
    </wire>
    <wire loc="71:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f426c47f5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426af919b0"/></to>
    </wire>
    <wire loc="171:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f426c509990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f426c46dc10"/></to>
    </wire>
    <wire loc="73:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f426c46dc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426af1f0a0"/></to>
    </wire>
    <wire loc="188:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f426c4f6990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f426c450da0"/></to>
    </wire>
    <wire loc="72:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f426c450da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426ae4de20"/></to>
    </wire>
    <wire loc="194:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f426c4f0cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426c3f8120"/></to>
    </wire>
    <wire loc="174:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f426c505020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f426c4655d0"/></to>
    </wire>
    <wire loc="67:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f426c4655d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426aec9e20"/></to>
    </wire>
    <wire loc="70:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f426c49fda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426b0739b0"/></to>
    </wire>
    <wire loc="152:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f426c51d350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f426c48d5d0"/></to>
    </wire>
    <wire loc="72:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f426c48d5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426aff93f0"/></to>
    </wire>
    <wire loc="192:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f426c4f2670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426c4036d0"/></to>
    </wire>
    <wire loc="155:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f426c51b990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f426c485d30"/></to>
    </wire>
    <wire loc="66:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f426c485d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426afa2a60"/></to>
    </wire>
    <wire loc="166:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f426c50fb20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f426c473440"/></to>
    </wire>
    <wire loc="68:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f426c473440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426af2f0a0"/></to>
    </wire>
    <wire loc="177:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f426c502990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f426c461a80"/></to>
    </wire>
    <wire loc="70:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f426c461a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426aebe6d0"/></to>
    </wire>
    <wire loc="186:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f426c4f8350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f426c452a80"/></to>
    </wire>
    <wire loc="70:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f426c452a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426ae536d0"/></to>
    </wire>
    <wire loc="144:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f426c527cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f426c49b440"/></to>
    </wire>
    <wire loc="73:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f426c49b440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426b0613f0"/></to>
    </wire>
    <wire loc="147:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f426c523350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f426c493c10"/></to>
    </wire>
    <wire loc="67:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f426c493c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426b0093f0"/></to>
    </wire>
    <wire loc="158:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f426c517350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f426c4812b0"/></to>
    </wire>
    <wire loc="69:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f426c4812b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426af973f0"/></to>
    </wire>
    <wire loc="169:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f426c50b350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f426c4708f0"/></to>
    </wire>
    <wire loc="71:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f426c4708f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426af269b0"/></to>
    </wire>
    <wire loc="180:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f426c4fe350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f426c45d020"/></to>
    </wire>
    <wire loc="73:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f426c45d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426aeb40a0"/></to>
    </wire>
    <wire loc="139:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f426c52dcb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f426c4a2a80"/></to>
    </wire>
    <wire loc="68:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f426c4a2a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426b0793f0"/></to>
    </wire>
    <wire loc="150:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f426c520cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f426c48f2b0"/></to>
    </wire>
    <wire loc="70:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f426c48f2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426b000e20"/></to>
    </wire>
    <wire loc="161:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f426c514cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f426c47e760"/></to>
    </wire>
    <wire loc="72:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f426c47e760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426af8ee20"/></to>
    </wire>
    <wire loc="189:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f426c4f5cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f426c44e020"/></to>
    </wire>
    <wire loc="73:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f426c44e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426ae490a0"/></to>
    </wire>
    <wire loc="164:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f426c511350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f426c475020"/></to>
    </wire>
    <wire loc="66:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f426c475020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426af37c90"/></to>
    </wire>
    <wire loc="175:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f426c504350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f426c464760"/></to>
    </wire>
    <wire loc="68:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f426c464760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426aec40a0"/></to>
    </wire>
    <wire loc="184:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f426c4fbcb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f426c454760"/></to>
    </wire>
    <wire loc="68:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f426c454760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426ae590a0"/></to>
    </wire>
    <wire loc="195:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f426c4ee020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426c3f46d0"/></to>
    </wire>
    <wire loc="142:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f426c529670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f426c49d020"/></to>
    </wire>
    <wire loc="71:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f426c49d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426b068e20"/></to>
    </wire>
    <wire loc="153:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f426c51c670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f426c48c760"/></to>
    </wire>
    <wire loc="73:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f426c48c760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426aff66d0"/></to>
    </wire>
    <wire loc="182:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f426c4fd670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f426c457460"/></to>
    </wire>
    <wire loc="66:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f426c457460"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426ae61c90"/></to>
    </wire>
    <wire loc="156:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f426c51acb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f426c484e60"/></to>
    </wire>
    <wire loc="67:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f426c484e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426af9ee20"/></to>
    </wire>
    <wire loc="167:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f426c50ee40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f426c4725d0"/></to>
    </wire>
    <wire loc="69:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f426c4725d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426af2c3f0"/></to>
    </wire>
    <wire loc="178:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f426c501cb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f426c460c10"/></to>
    </wire>
    <wire loc="71:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f426c460c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426aebb9b0"/></to>
    </wire>
    <wire loc="187:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f426c4f7670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f426c451c10"/></to>
    </wire>
    <wire loc="71:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f426c451c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426ae509b0"/></to>
    </wire>
    <wire loc="137:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f426c53e670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f426c4a46b0"/></to>
    </wire>
    <wire loc="66:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f426c4a46b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426b080e20"/></to>
    </wire>
    <wire loc="148:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f426c522670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f426c492da0"/></to>
    </wire>
    <wire loc="68:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f426c492da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426b0066d0"/></to>
    </wire>
    <wire loc="159:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f426c516670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f426c480440"/></to>
    </wire>
    <wire loc="70:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f426c480440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426af946d0"/></to>
    </wire>
    <wire loc="170:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f426c50a670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f426c46fa80"/></to>
    </wire>
    <wire loc="72:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f426c46fa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426af23e20"/></to>
    </wire>
    <wire loc="193:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f426c4f1990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426c3fec90"/></to>
    </wire>
    <wire loc="173:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f426c507cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f426c4663f0"/></to>
    </wire>
    <wire loc="66:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f426c4663f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426aeccc90"/></to>
    </wire>
    <wire loc="162:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f426c512020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f426c47d8f0"/></to>
    </wire>
    <wire loc="73:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f426c47d8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426af8a0a0"/></to>
    </wire>
    <wire loc="140:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f426c52b020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f426c4a1c10"/></to>
    </wire>
    <wire loc="69:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f426c4a1c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426b0766d0"/></to>
    </wire>
    <wire loc="151:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f426c51e020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f426c48e440"/></to>
    </wire>
    <wire loc="71:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f426c48e440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f426affc0a0"/></to>
    </wire>
    <wire loc="54:/home/punit/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c654020"/></to>
    </wire>
    <wire loc="55:/home/punit/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f426c6515d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f426c6452d0"/></to>
    </wire>
    <wire loc="58:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f426c632750"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f426c14d4c0"/></to>
    </wire>
    <wire loc="82:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f426c345880"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f426c31fb80"/></to>
    </wire>
    <wire loc="78:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f426c38ad20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f426c344980"/></to>
    </wire>
    <wire loc="85:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f426c344980"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f426b6f8020"/></to>
    </wire>
    <wire loc="80:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f426c388c00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f426c341900"/></to>
    </wire>
    <wire loc="88:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f426c341900"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f426b6f7df0"/></to>
    </wire>
    <wire loc="81:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f426c37c5f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f426c33f760"/></to>
    </wire>
    <wire loc="84:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f426c33f760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f426b6f5a80"/></to>
    </wire>
    <wire loc="91:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f426c35fcd0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f426b9f5550"/></to>
    </wire>
    <wire loc="59:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f426b9f5550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f426b9e7a80"/></to>
    </wire>
    <wire loc="84:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f426c351b20"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f426c331bb0"/></to>
    </wire>
    <wire loc="91:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f426c331bb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f426c305080"/></to>
    </wire>
    <wire loc="79:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f426c388020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f426c343cb0"/></to>
    </wire>
    <wire loc="87:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f426c343cb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f426b6f7210"/></to>
    </wire>
    <wire loc="83:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f426c3669f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f426c33d810"/></to>
    </wire>
    <wire loc="93:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f426c33d810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f426c306020"/></to>
    </wire>
    <wire loc="82:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f426c36c4e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f426c340020"/></to>
    </wire>
    <wire loc="89:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f426c340020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f426b6f6470"/></to>
    </wire>
    <wire loc="92:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f426c35cdc0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f426b9f1660"/></to>
    </wire>
    <wire loc="60:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f426b9f1660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f426b9e3af0"/></to>
    </wire>
    <wire loc="97:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f426c31fb80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f426b72ab80"/></to>
    </wire>
    <wire loc="83:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f426c32bd40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f426b6f38b0"/></to>
    </wire>
    <wire loc="86:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f426c31dd20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f426b6f4ce0"/></to>
    </wire>
    <wire loc="92:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f426c336970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f426c307020"/></to>
    </wire>
    <wire loc="84:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f426c307020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f426b9fa680"/></to>
    </wire>
    <wire loc="83:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f426c305080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f426b72a080"/></to>
    </wire>
    <wire loc="85:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f426c306020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f426b9f76e0"/></to>
    </wire>
    <wire loc="90:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f426c329020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f426c305b70"/></to>
    </wire>
    <wire loc="82:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f426c305b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f426b715020"/></to>
    </wire>
    <wire loc="94:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f426c332a80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f426c3069d0"/></to>
    </wire>
    <wire loc="86:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f426c3069d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f426b9f6a70"/></to>
    </wire>
    <wire loc="97:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f426b6ea0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426c318210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f426b6f1860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f426c312990"/></to>
    </wire>
    <wire loc="93:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f426c312990"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f426b793ca0"/></to>
    </wire>
    <wire loc="99:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f426b6f0690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f426c30a840"/></to>
    </wire>
    <wire loc="94:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f426c30a840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f426b792a50"/></to>
    </wire>
    <wire loc="101:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f426b6ec4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f426bbabb90"/></to>
    </wire>
    <wire loc="102:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f426b6f0ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f426b9fa680"/></to>
    </wire>
    <wire loc="55:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f426b9fa680"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f426b9ecd30"/></to>
    </wire>
    <wire loc="103:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426b6efb70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426b9f60c0"/></to>
    </wire>
    <wire loc="57:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426b9f60c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426b9e8640"/></to>
    </wire>
    <wire loc="104:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f426b6ee610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f426c279550"/></to>
    </wire>
    <wire loc="55:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f426c279550"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f426c2700c0"/></to>
    </wire>
    <wire loc="106:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f426b6eb1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f426c2ff330"/></to>
    </wire>
    <wire loc="54:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f426c2ff330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f426c2faad0"/></to>
    </wire>
    <wire loc="109:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f426b6ead30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f426bc67110"/></to>
    </wire>
    <wire loc="63:/home/punit/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f426b72ab80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f426b726d90"/></to>
    </wire>
    <wire loc="58:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f426b9f6a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f426b9e7020"/></to>
    </wire>
    <wire loc="53:/home/punit/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f426b715020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f426b713420"/></to>
    </wire>
    <wire loc="97:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f426b793ca0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f426b789a20"/></to>
    </wire>
    <wire loc="64:/home/punit/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f426b72a080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f426b7222d0"/></to>
    </wire>
    <wire loc="90:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f426c313500"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f426b7935f0"/></to>
    </wire>
    <wire loc="92:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f426b7935f0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f426b789370"/></to>
    </wire>
    <wire loc="56:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f426b9f76e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f426b9e9c50"/></to>
    </wire>
    <wire loc="88:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426c318210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426b796cb0"/></to>
    </wire>
    <wire loc="96:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b796cb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426b78b7b0"/></to>
    </wire>
    <wire loc="89:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f426c3096f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f426b795960"/></to>
    </wire>
    <wire loc="91:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f426b795960"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f426b78a4d0"/></to>
    </wire>
    <wire loc="91:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f426c313bc0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f426b791170"/></to>
    </wire>
    <wire loc="93:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f426b791170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f426b786020"/></to>
    </wire>
    <wire loc="98:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f426b792a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f426b788840"/></to>
    </wire>
    <wire loc="98:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f426b726d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f426c301390"/></to>
    </wire>
    <wire loc="55:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f426c301390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f426c2fb2d0"/></to>
    </wire>
    <wire loc="101:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f426b7906b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f426b7e4220"/></to>
    </wire>
    <wire loc="55:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f426b7e4220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f426b7e2a20"/></to>
    </wire>
    <wire loc="102:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f426b7e3020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f426b718360"/></to>
    </wire>
    <wire loc="54:/home/punit/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f426b718360"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f426b715d70"/></to>
    </wire>
    <wire loc="103:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f426b715d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f426b72fcf0"/></to>
    </wire>
    <wire loc="61:/home/punit/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f426b72fcf0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f426b727860"/></to>
    </wire>
    <wire loc="104:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f426b727860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f426c301e80"/></to>
    </wire>
    <wire loc="56:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f426c301e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f426c2fbdc0"/></to>
    </wire>
    <wire loc="107:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f426b790020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f426b72b980"/></to>
    </wire>
    <wire loc="62:/home/punit/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f426b72b980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f426b726690"/></to>
    </wire>
    <wire loc="108:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f426b726690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f426b7c7ab0"/></to>
    </wire>
    <wire loc="56:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f426b7c7ab0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f426b7c3e40"/></to>
    </wire>
    <wire loc="109:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f426b7c4950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f426c300b40"/></to>
    </wire>
    <wire loc="68:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f426c300b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f426ba7e9a0"/></to>
    </wire>
    <wire loc="63:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f426ba7e9a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f426ba78300"/></to>
    </wire>
    <wire loc="59:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426c2f9950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426c287020"/></to>
    </wire>
    <wire loc="54:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426c287020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426c271390"/></to>
    </wire>
    <wire loc="60:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f426c2f1e30"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f426c2854b0"/></to>
    </wire>
    <wire loc="56:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f426c2854b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f426c26e020"/></to>
    </wire>
    <wire loc="63:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f426c2ed9d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f426bb896d0"/></to>
    </wire>
    <wire loc="69:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f426c2ed9d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f426ba81680"/></to>
    </wire>
    <wire loc="61:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f426ba81680"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f426ba79020"/></to>
    </wire>
    <wire loc="55:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f426bb896d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f426bb5ead0"/></to>
    </wire>
    <wire loc="64:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f426c2e6770"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f426bb86020"/></to>
    </wire>
    <wire loc="56:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f426bb86020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f426bb5d3b0"/></to>
    </wire>
    <wire loc="65:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f426c2ef570"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f426bb86cb0"/></to>
    </wire>
    <wire loc="57:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f426bb86cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f426bb5c0c0"/></to>
    </wire>
    <wire loc="72:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f426c2e2970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f426b9fa680"/></to>
    </wire>
    <wire loc="73:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426c2e0020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426b9f60c0"/></to>
    </wire>
    <wire loc="76:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f426c2e39d0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f426b801a20"/></to>
    </wire>
    <wire loc="56:/home/punit/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f426b801a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f426b7faa20"/></to>
    </wire>
    <wire loc="79:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f426c2d5720"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f426b803aa0"/></to>
    </wire>
    <wire loc="74:/home/punit/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f426b803aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f426bde21d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f426c2e52e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f426bc67110"/></to>
    </wire>
    <wire loc="76:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f426c2d12a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f426c2d22a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f426c2d32b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f426c278830"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f426c26d500"/></to>
    </wire>
    <wire loc="63:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f426c261790"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f426c1be220"/></to>
    </wire>
    <wire loc="55:/home/punit/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f426c1be220"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f426c1b8690"/></to>
    </wire>
    <wire loc="66:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f426c2609d0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f426bf5a330"/></to>
    </wire>
    <wire loc="100:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f426bf5a330"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f426c524020"/></to>
    </wire>
    <wire loc="67:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f426c25ece0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f426bf57b10"/></to>
    </wire>
    <wire loc="103:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f426bf57b10"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7f426c528990"/></to>
    </wire>
    <wire loc="68:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f426c25c020"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f426bf54020"/></to>
    </wire>
    <wire loc="105:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f426bf54020"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x7f426c529670"/></to>
    </wire>
    <wire loc="71:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f426c257c00"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f426bf44e10"/></to>
    </wire>
    <wire loc="59:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f426bf44e10"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f426bea5020"/></to>
    </wire>
    <wire loc="74:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f426c245b60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426bc19250"/></to>
    </wire>
    <wire loc="112:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426bc19250"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426be62600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f426c244bb0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f426bc16cc0"/></to>
    </wire>
    <wire loc="118:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f426bc16cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f426c2463b0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f426bc14060"/></to>
    </wire>
    <wire loc="121:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f426bc14060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f426c245440"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f426bc16020"/></to>
    </wire>
    <wire loc="116:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f426bc16020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f426c246ae0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f426bc146b0"/></to>
    </wire>
    <wire loc="122:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f426bc146b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f426c24a420"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f426bc0ccd0"/></to>
    </wire>
    <wire loc="140:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f426bc0ccd0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f426c24acd0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f426bc09ce0"/></to>
    </wire>
    <wire loc="144:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f426bc09ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f426c2515d0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f426bc08500"/></to>
    </wire>
    <wire loc="145:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f426bc08500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f426c24c020"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f426bc0f2f0"/></to>
    </wire>
    <wire loc="133:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f426bc0f2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f426c24c8f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f426bc0fad0"/></to>
    </wire>
    <wire loc="134:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f426bc0fad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f426c24de20"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f426bc03ce0"/></to>
    </wire>
    <wire loc="156:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f426bc03ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f426c24d4a0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f426bc03500"/></to>
    </wire>
    <wire loc="155:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f426bc03500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f426c2491e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f426bc0c2f0"/></to>
    </wire>
    <wire loc="139:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f426bc0c2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f426c249a80"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f426bc0e2f0"/></to>
    </wire>
    <wire loc="135:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f426bc0e2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f426c2483c0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f426bc0d2f0"/></to>
    </wire>
    <wire loc="137:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f426bc0d2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f426c242880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426bbf29e0"/></to>
    </wire>
    <wire loc="112:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426bbf29e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426be62600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f426c243a10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426bbcfaa0"/></to>
    </wire>
    <wire loc="112:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426bbcfaa0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426be62600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f426c252390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f426bbabb90"/></to>
    </wire>
    <wire loc="100:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f426c269970"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f426bb98020"/></to>
    </wire>
    <wire loc="126:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f426c2372f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f426c238410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/punit/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f426c1c17f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426bf5f910"/></to>
    </wire>
    <wire loc="93:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f426bf5f910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426bf63380"/></to>
    </wire>
    <wire loc="94:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f426c1b8690"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f426ad68aa0"/></to>
    </wire>
    <wire loc="36:/home/punit/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f426ad68aa0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f426ad5b5f0"/></to>
    </wire>
    <wire loc="37:/home/punit/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f426ad55d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f426ad613f0"/></to>
    </wire>
    <wire loc="41:/home/punit/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f426ad613f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f426ad3fa40"/></to>
    </wire>
    <wire loc="38:/home/punit/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f426ad589b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f426bff1020"/></to>
    </wire>
    <wire loc="33:/home/punit/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f426bff1020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f426bfc6cf0"/></to>
    </wire>
    <wire loc="43:/home/punit/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f426ad3bcb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f426c1977b0"/></to>
    </wire>
    <wire loc="55:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f426c1977b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f426c0ee0a0"/></to>
    </wire>
    <wire loc="44:/home/punit/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f426ad35020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f426c176c10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f426c1930c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f426c0e9580"/></to>
    </wire>
    <wire loc="57:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f426c189020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f426c0e8d00"/></to>
    </wire>
    <wire loc="59:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f426c176c10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f426c0e37e0"/></to>
    </wire>
    <wire loc="60:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f426c176c10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f426c0dfd30"/></to>
    </wire>
    <wire loc="61:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f426c176c10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f426c0da2a0"/></to>
    </wire>
    <wire loc="63:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x7f426c0d7910"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f426c165dd0"/></to>
    </wire>
    <wire loc="61:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f426c165dd0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f426c152020"/></to>
    </wire>
    <wire loc="63:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f426c15bcb0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f426c14dc00"/></to>
    </wire>
    <wire loc="62:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f426c169e50"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f426c1510b0"/></to>
    </wire>
    <wire loc="60:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f426c172c70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f426c15acf0"/></to>
    </wire>
    <wire loc="27:/home/punit/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f426c042610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f426c1977b0"/></to>
    </wire>
    <wire loc="34:/home/punit/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f426bfa80f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f426bfe8020"/></to>
    </wire>
    <wire loc="31:/home/punit/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f426bfe8020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f426bfe2cc0"/></to>
    </wire>
    <wire loc="32:/home/punit/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f426bfcf020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f426c1977b0"/></to>
    </wire>
    <wire loc="101:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f426bf594e0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7f426c51c670"/></to>
    </wire>
    <wire loc="102:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f426bf58800"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f426c4ff020"/></to>
    </wire>
    <wire loc="99:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f426bf5b020"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7f426c50a670"/></to>
    </wire>
    <wire loc="104:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f426bf56e20"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7f426c50c060"/></to>
    </wire>
    <wire loc="49:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f426bf44200"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f426bf43c60"/></to>
    </wire>
    <wire loc="54:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f426bf48a60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f426bf2b680"/></to>
    </wire>
    <wire loc="50:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x7f426bf428c0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f426c189020"/></to>
    </wire>
    <wire loc="55:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f426bf2a2f0"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7f426bf0d530"/></to>
    </wire>
    <wire loc="77:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7f426bf0d530"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f426beb7d40"/></to>
    </wire>
    <wire loc="60:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x7f426bea5c00"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f426bf5b020"/></to>
    </wire>
    <wire loc="72:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f426bf12530"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f426becd6d0"/></to>
    </wire>
    <wire loc="75:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7f426bf0f530"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f426bec09b0"/></to>
    </wire>
    <wire loc="78:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7f426bf0c530"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f426beb3d40"/></to>
    </wire>
    <wire loc="73:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f426bf11530"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f426bec96d0"/></to>
    </wire>
    <wire loc="76:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7f426bf0e530"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f426bebcc90"/></to>
    </wire>
    <wire loc="71:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f426bf134e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f426bee5780"/></to>
    </wire>
    <wire loc="74:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f426bf10530"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f426bec56d0"/></to>
    </wire>
    <wire loc="80:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f426bed1610"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7f426bf060b0"/></to>
    </wire>
    <wire loc="81:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f426becc610"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7f426bf06830"/></to>
    </wire>
    <wire loc="82:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f426bec8610"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7f426bf04020"/></to>
    </wire>
    <wire loc="83:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f426bec4610"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7f426bf047a0"/></to>
    </wire>
    <wire loc="84:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f426bebf930"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7f426bf03020"/></to>
    </wire>
    <wire loc="85:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f426bebbb40"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7f426bf037a0"/></to>
    </wire>
    <wire loc="86:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f426beb6b80"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7f426bf02020"/></to>
    </wire>
    <wire loc="87:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f426beb2b80"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7f426bf027a0"/></to>
    </wire>
    <wire loc="69:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x7f426bea2720"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f426bc16670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f426bc0ace0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f426bc09500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f426bbffce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f426bc01ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f426bc159c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f426bc02ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f426bc06500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426bc18020"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426be61350"/></to>
    </wire>
    <wire loc="56:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426be61350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426be59660"/></to>
    </wire>
    <wire loc="124:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f426bc13370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f426bc139c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f426bc12160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f426bc01500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f426bc0ead0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f426bbff500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f426bc00500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f426bc06ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f426bc02500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f426bc08ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f426bbfd500"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f426be5f2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f426bc18990"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f426bc10ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f426bc0dad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f426bc0a500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f426bc127b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f426bc10490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f426bc14d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f426bc05ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f426bc00ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f426bc05500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f426bc15370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f426bc07ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f426bc07500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f426bc12e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f426bbfc610"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f426be5f2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f426be5f2c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f426be57890"/></to>
    </wire>
    <wire loc="53:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be55ba0"/></to>
    </wire>
    <wire loc="54:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be54a30"/></to>
    </wire>
    <wire loc="51:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426be62600"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426be58510"/></to>
    </wire>
    <wire loc="55:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be538b0"/></to>
    </wire>
    <wire loc="59:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f426be46b40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f426bde7770"/></to>
    </wire>
    <wire loc="74:/home/punit/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f426bde7770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f426bde21d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f426be52060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426bc6d9e0"/></to>
    </wire>
    <wire loc="52:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426bc6d9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426bc7c3b0"/></to>
    </wire>
    <wire loc="63:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f426be4ec70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f426bc6c760"/></to>
    </wire>
    <wire loc="55:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f426bc6c760"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f426bdc0bc0"/></to>
    </wire>
    <wire loc="64:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f426be462e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f426bc6cd70"/></to>
    </wire>
    <wire loc="56:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f426bc6cd70"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f426bdbc310"/></to>
    </wire>
    <wire loc="67:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f426be4fa70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f426bc67110"/></to>
    </wire>
    <wire loc="88:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f426be42bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/punit/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f426bde21d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f426bddeb70"/></to>
    </wire>
    <wire loc="96:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f426bdbc310"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f426bdb1800"/></to>
    </wire>
    <wire loc="94:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f426bdc0bc0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f426bdb3640"/></to>
    </wire>
    <wire loc="51:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f426bc6d3d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426bdc0560"/></to>
    </wire>
    <wire loc="92:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f426bdc0560"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426bdb3020"/></to>
    </wire>
    <wire loc="53:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f426bc7b170"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426bdbb1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f426bc7be40"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f426c524020"/></to>
    </wire>
    <wire loc="95:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f426bdb7680"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f426bdb3c80"/></to>
    </wire>
    <wire loc="97:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426bdbb1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426bdb0530"/></to>
    </wire>
    <wire loc="99:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f426bd93c10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426bc88390"/></to>
    </wire>
    <wire loc="98:/home/punit/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426bc88390"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426ac5e490"/></to>
    </wire>
    <wire loc="100:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426bd8d1e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426bc868d0"/></to>
    </wire>
    <wire loc="100:/home/punit/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426bc868d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426ac5d9a0"/></to>
    </wire>
    <wire loc="101:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f426bd94800"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f426bd44610"/></to>
    </wire>
    <wire loc="83:/home/punit/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f426bd44610"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f426bd3b4e0"/></to>
    </wire>
    <wire loc="102:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f426bd8d9d0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f426c6347d0"/></to>
    </wire>
    <wire loc="296:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f426bd6e820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/punit/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f426bd31020"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f426c6347d0"/></to>
    </wire>
    <wire loc="86:/home/punit/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f426bd375a0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f426c524020"/></to>
    </wire>
    <wire loc="87:/home/punit/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f426bd367e0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f426c523350"/></to>
    </wire>
    <wire loc="88:/home/punit/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f426bd34990"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f426c522670"/></to>
    </wire>
    <wire loc="89:/home/punit/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f426bd33ca0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f426c521990"/></to>
    </wire>
    <wire loc="99:/home/punit/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f426bc86150"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f426ac5d220"/></to>
    </wire>
    <wire loc="101:/home/punit/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426ac5c400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426bc851f0"/></to>
    </wire>
    <wire loc="103:/home/punit/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f426ac5cbc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f426ac61410"/></to>
    </wire>
    <wire loc="69:/home/punit/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f426ac597a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/punit/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f426bc3f600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426bc62470"/></to>
    </wire>
    <wire loc="54:/home/punit/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f426bc60210"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f426bc63e00"/></to>
    </wire>
    <wire loc="56:/home/punit/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f426bc63e00"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f426c52dcb0"/></to>
    </wire>
    <wire loc="55:/home/punit/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f426bc5f4d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f426bc41060"/></to>
    </wire>
    <wire loc="57:/home/punit/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f426bc41060"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f426c52e990"/></to>
    </wire>
    <wire loc="56:/home/punit/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f426bc5e7f0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f426bc40380"/></to>
    </wire>
    <wire loc="58:/home/punit/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f426bc40380"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f426c53e670"/></to>
    </wire>
    <wire loc="139:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f426bbe5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f426bbf0da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f426bbe9b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f426bbe3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f426bbe3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f426bbd7670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f426bbda670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f426bbee120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f426bbdb670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f426bbe8c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f426bbe6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f426bbdfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f426bbe2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426bbf1760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426be61350"/></to>
    </wire>
    <wire loc="124:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f426bbecaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f426bbeb120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f426bbeb870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f426bbdbe50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f426bbeedc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f426bbe6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f426bbe8480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f426bbf0750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f426bbd8e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f426bbdae50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f426bbde670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f426bbdce50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f426bbe1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f426bbd7e50"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f426be5f2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f426bbf0100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f426bbe9370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f426bbe5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f426bbe2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f426bbe4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f426bbef450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f426bbe4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f426bbea020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f426bbeacc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f426bbdc670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f426bbdde50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f426bbec450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f426bbdd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f426bbd8670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f426bbdee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f426bbefaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f426bbdf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f426bbee770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f426bbe1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f426bbea670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f426bbd5020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f426be5f2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f426bbc2c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f426bbcdda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f426bbc5b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f426bbc0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f426bbc0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f426bbb4670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f426bbb6670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f426bbca120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f426bbb7670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f426bbc4c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f426bbc3c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f426bbbce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f426bbbe670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426bbce760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426be61350"/></to>
    </wire>
    <wire loc="124:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f426bbc9aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f426bbc8120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f426bbc8870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f426bbb7e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f426bbcadc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f426bbc3480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f426bbc4480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f426bbcd750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f426bbb5e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f426bbb6e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f426bbbb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f426bbb8e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f426bbbd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f426bbb4e50"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f426be5f2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f426bbcd100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f426bbc5370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f426bbc2480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f426bbbee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f426bbc1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f426bbcb450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f426bbc1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f426bbc7020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f426bbc7cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f426bbb8670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f426bbbae50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f426bbc9450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f426bbba670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f426bbb5670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f426bbbbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f426bbcbaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f426bbbc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f426bbca770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f426bbbde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f426bbc7670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f426bbb2020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f426be5f2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f426bb809f0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f426bb5b060"/></to>
    </wire>
    <wire loc="59:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f426bb83190"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f426bb5b7f0"/></to>
    </wire>
    <wire loc="66:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f426bb5a220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f426c1be220"/></to>
    </wire>
    <wire loc="69:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f426bb4fd60"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f426bf5b020"/></to>
    </wire>
    <wire loc="70:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f426bb4c080"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f426bf5a330"/></to>
    </wire>
    <wire loc="71:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f426bb46370"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f426bf56e20"/></to>
    </wire>
    <wire loc="74:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f426bb4f1e0"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f426bf44200"/></to>
    </wire>
    <wire loc="77:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f426bb456e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426baa8c30"/></to>
    </wire>
    <wire loc="112:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426baa8c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426be62600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426bb444e0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426baa78f0"/></to>
    </wire>
    <wire loc="111:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426baa78f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426be61350"/></to>
    </wire>
    <wire loc="79:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f426bb41020"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f426baa62f0"/></to>
    </wire>
    <wire loc="115:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f426baa62f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f426bb41730"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f426baa5cc0"/></to>
    </wire>
    <wire loc="119:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f426baa5cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f426bb41e60"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f426baa4370"/></to>
    </wire>
    <wire loc="120:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f426baa4370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f426bb3f5c0"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f426baa3d00"/></to>
    </wire>
    <wire loc="124:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f426baa3d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f426bb426b0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f426ba9dc60"/></to>
    </wire>
    <wire loc="137:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f426ba9dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f426bb43020"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f426ba8b020"/></to>
    </wire>
    <wire loc="168:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f426ba8b020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f426be5f2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f426bb43d80"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f426ba91670"/></to>
    </wire>
    <wire loc="158:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f426ba91670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f426bb3fd00"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f426ba9e480"/></to>
    </wire>
    <wire loc="134:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f426ba9e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f426bb3d0c0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f426ba9ae50"/></to>
    </wire>
    <wire loc="141:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f426ba9ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f426bb3d990"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f426ba99670"/></to>
    </wire>
    <wire loc="142:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f426ba99670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f426bb3e930"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f426baa07b0"/></to>
    </wire>
    <wire loc="128:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f426baa07b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f426bb3b530"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f426ba8ee50"/></to>
    </wire>
    <wire loc="163:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f426ba8ee50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f426bb3c380"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f426ba90670"/></to>
    </wire>
    <wire loc="160:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f426ba90670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f426bb3cbf0"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f426ba90e50"/></to>
    </wire>
    <wire loc="161:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f426ba90e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f426bb36780"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f426ba7e020"/></to>
    </wire>
    <wire loc="62:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f426ba7e020"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f426ba79850"/></to>
    </wire>
    <wire loc="98:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f426bb564d0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f426b9fa680"/></to>
    </wire>
    <wire loc="99:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426bb554f0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426b9f60c0"/></to>
    </wire>
    <wire loc="100:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f426bb54200"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f426b9f5550"/></to>
    </wire>
    <wire loc="101:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f426bb47570"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f426b9ed480"/></to>
    </wire>
    <wire loc="61:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f426b9ed480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f426b9df8b0"/></to>
    </wire>
    <wire loc="104:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f426bb3a110"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f426bc67110"/></to>
    </wire>
    <wire loc="139:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f426ba9bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f426baa5020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f426ba9fc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f426ba99e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f426ba8d670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f426ba9ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f426ba95e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f426ba98670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f426baa1370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f426baa1ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f426ba91e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f426baa3060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f426ba9d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f426baa6940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f426ba94670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f426ba92e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f426ba97670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f426ba8de50"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f426be5f2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f426ba9f490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f426ba9b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f426ba98e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f426ba9a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f426baa5670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f426baa0160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f426baa0e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f426ba92670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f426ba93e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f426baa36b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f426ba93670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f426ba8e670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f426ba94e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f426ba95670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f426baa49c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f426ba97e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f426ba7d1a0"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f426ba78aa0"/></to>
    </wire>
    <wire loc="59:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f426ba63150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f426bc67110"/></to>
    </wire>
    <wire loc="68:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f426ba761a0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f426bf5a330"/></to>
    </wire>
    <wire loc="69:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f426ba75390"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f426bf594e0"/></to>
    </wire>
    <wire loc="70:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f426ba746b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f426bf58800"/></to>
    </wire>
    <wire loc="71:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f426ba73a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f426bf48a60"/></to>
    </wire>
    <wire loc="72:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f426ba726e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426b84a710"/></to>
    </wire>
    <wire loc="112:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b84a710"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426be62600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f426ba71530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f426b82fad0"/></to>
    </wire>
    <wire loc="167:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f426b82fad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f426be5f2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f426ba70ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f426b844120"/></to>
    </wire>
    <wire loc="123:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f426b844120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f426ba703a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f426b844dc0"/></to>
    </wire>
    <wire loc="125:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f426b844dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f426ba6f330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f426b9fa680"/></to>
    </wire>
    <wire loc="77:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426ba6e1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426b9f60c0"/></to>
    </wire>
    <wire loc="78:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f426ba6cd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f426b9f5550"/></to>
    </wire>
    <wire loc="79:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f426ba6eb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f426c279550"/></to>
    </wire>
    <wire loc="81:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f426ba673e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f426b83cad0"/></to>
    </wire>
    <wire loc="141:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f426b83cad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f426ba67cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f426b83b2f0"/></to>
    </wire>
    <wire loc="142:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f426b83b2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f426ba68b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f426b843c30"/></to>
    </wire>
    <wire loc="127:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f426b843c30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f426ba656d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f426b82f2f0"/></to>
    </wire>
    <wire loc="164:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f426b82f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f426ba66590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f426b8312f0"/></to>
    </wire>
    <wire loc="160:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f426b8312f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f426ba66e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f426b831ad0"/></to>
    </wire>
    <wire loc="161:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f426b831ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f426ba64020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f426b832ad0"/></to>
    </wire>
    <wire loc="159:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f426b832ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f426ba648b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f426b849db0"/></to>
    </wire>
    <wire loc="115:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f426b849db0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f426ba579d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f426b97f7c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f426bff1020"/></to>
    </wire>
    <wire loc="65:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f426b9da820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f426b9884e0"/></to>
    </wire>
    <wire loc="69:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f426b9dcb80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f426b972610"/></to>
    </wire>
    <wire loc="65:/home/punit/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f426b972610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f426b86c2b0"/></to>
    </wire>
    <wire loc="61:/home/punit/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f426b977020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f426b87b150"/></to>
    </wire>
    <wire loc="59:/home/punit/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f426b978200"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426b96c020"/></to>
    </wire>
    <wire loc="35:/home/punit/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f426b96c020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426b8fac80"/></to>
    </wire>
    <wire loc="62:/home/punit/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f426b875640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f426b8ca830"/></to>
    </wire>
    <wire loc="63:/home/punit/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f426b8c5cd0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f426b96ca10"/></to>
    </wire>
    <wire loc="36:/home/punit/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f426b96ca10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f426b8f9530"/></to>
    </wire>
    <wire loc="66:/home/punit/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f426b86b690"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f426b967020"/></to>
    </wire>
    <wire loc="37:/home/punit/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f426b967020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f426b8f58d0"/></to>
    </wire>
    <wire loc="37:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f426b8f58d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f426ab7a650"/></to>
    </wire>
    <wire loc="35:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f426b8fac80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426ab7f9f0"/></to>
    </wire>
    <wire loc="36:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f426b8f9530"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f426ab7e260"/></to>
    </wire>
    <wire loc="39:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f426ab77a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f426c172c70"/></to>
    </wire>
    <wire loc="40:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f426ab72c90"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f426c165dd0"/></to>
    </wire>
    <wire loc="41:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f426ab71c20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f426c169e50"/></to>
    </wire>
    <wire loc="42:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f426ab6c020"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f426c15bcb0"/></to>
    </wire>
    <wire loc="74:/home/punit/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f426b8c0020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/punit/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f426b870a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f426b852370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f426b85cd90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/punit/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f426b85cd90"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f426b977020"/></to>
    </wire>
    <wire loc="139:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f426b83d800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f426b848aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f426b840800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f426b83bad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f426b847dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f426b8322f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f426b83f800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f426b83e800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f426b837ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f426b8392f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426b849440"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426be61350"/></to>
    </wire>
    <wire loc="124:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f426b844770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f426b8435e0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f426b845aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f426b83e020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f426b83f020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f426b848450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f426b830ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f426b8362f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f426b834ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f426b8382f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f426b840020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f426b83d020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f426b839ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f426b83c2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f426b847120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f426b842940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f426b8342f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f426b835ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f426b8352f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f426b8302f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f426b836ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f426b847770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f426b8372f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f426b845450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f426b838ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f426b8422f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f426b82d020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f426be5f2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/punit/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f426b7ff920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f426b7fc940"/></to>
    </wire>
    <wire loc="54:/home/punit/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f426b8059a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f426b7fc080"/></to>
    </wire>
    <wire loc="56:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f426b7dfe60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f426b7e3020"/></to>
    </wire>
    <wire loc="60:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f426b7deae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f426b7cb690"/></to>
    </wire>
    <wire loc="74:/home/punit/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f426b7cb690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f426bde21d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f426b7dd8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f426b801a20"/></to>
    </wire>
    <wire loc="62:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426b7db170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426b9f60c0"/></to>
    </wire>
    <wire loc="57:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f426b7c4200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f426b7c0570"/></to>
    </wire>
    <wire loc="58:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f426b7bf3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f426b7c4950"/></to>
    </wire>
    <wire loc="62:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426b7bfa70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426b9f60c0"/></to>
    </wire>
    <wire loc="94:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f426b786d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f426b7906b0"/></to>
    </wire>
    <wire loc="95:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f426b785b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f426b790020"/></to>
    </wire>
    <wire loc="100:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f426b7842f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f426b9fa680"/></to>
    </wire>
    <wire loc="101:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426b783170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426b9f60c0"/></to>
    </wire>
    <wire loc="102:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f426b783b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f426b736410"/></to>
    </wire>
    <wire loc="180:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f426b757db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/punit/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f426b729800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f426b724580"/></to>
    </wire>
    <wire loc="74:/home/punit/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f426b724580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f426bde21d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/punit/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f426b7101c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f426c306020"/></to>
    </wire>
    <wire loc="10:/home/punit/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f426b65dc10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f426b65cdc0"/></to>
    </wire>
    <wire loc="52:/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f426b65cdc0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f426b85cd90"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:/home/punit/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="SounderPin" scoped="" ref="0x7f426b655020"/></from>
      <to><interface-ref name="PW2" scoped="" ref="0x7f426b642660"/></to>
    </wire>
    <wire loc="61:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x7f426b642660"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x7f426c518020"/></to>
    </wire>
    <wire loc="82:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1_Interrupt" scoped="" ref="0x7f426b635dd0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f426b6117a0"/></to>
    </wire>
    <wire loc="92:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x7f426b62cae0"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x7f426b6261a0"/></to>
    </wire>
    <wire loc="62:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x7f426b641970"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x7f426c517350"/></to>
    </wire>
    <wire loc="65:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x7f426b63c020"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x7f426c514cb0"/></to>
    </wire>
    <wire loc="95:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x7f426b62d020"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x7f426b6256d0"/></to>
    </wire>
    <wire loc="97:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x7f426b62dd80"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x7f426b6244b0"/></to>
    </wire>
    <wire loc="68:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f426b6397f0"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7f426c501cb0"/></to>
    </wire>
    <wire loc="74:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_TXD" scoped="" ref="0x7f426b6309c0"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x7f426c50ee40"/></to>
    </wire>
    <wire loc="60:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x7f426b6434c0"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x7f426c51acb0"/></to>
    </wire>
    <wire loc="63:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x7f426b640b10"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x7f426c516670"/></to>
    </wire>
    <wire loc="90:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3_Interrupt" scoped="" ref="0x7f426b6336f0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f426b609b50"/></to>
    </wire>
    <wire loc="93:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x7f426b62e1c0"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7f426b626850"/></to>
    </wire>
    <wire loc="73:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_RXD" scoped="" ref="0x7f426b6316a0"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7f426c50fb20"/></to>
    </wire>
    <wire loc="66:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x7f426b63b330"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x7f426c512020"/></to>
    </wire>
    <wire loc="78:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0_Interrupt" scoped="" ref="0x7f426b6350f0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f426b615da0"/></to>
    </wire>
    <wire loc="98:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x7f426b62b740"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x7f426b624b60"/></to>
    </wire>
    <wire loc="69:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f426b638b10"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f426c4ff020"/></to>
    </wire>
    <wire loc="64:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x7f426b63fe20"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x7f426c515990"/></to>
    </wire>
    <wire loc="94:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x7f426b62e870"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x7f426b625020"/></to>
    </wire>
    <wire loc="96:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x7f426b62d6d0"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x7f426b625d80"/></to>
    </wire>
    <wire loc="67:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f426b63a4e0"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7f426c502990"/></to>
    </wire>
    <wire loc="86:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2_Interrupt" scoped="" ref="0x7f426b6349e0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f426b60d120"/></to>
    </wire>
    <wire loc="72:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_CLK" scoped="" ref="0x7f426b632380"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x7f426c50b350"/></to>
    </wire>
    <wire loc="99:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x7f426b62bdf0"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x7f426b623350"/></to>
    </wire>
    <wire loc="59:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x7f426b6442a0"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x7f426c51b990"/></to>
    </wire>
    <wire loc="70:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f426b637e30"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7f426c4fe350"/></to>
    </wire>
    <wire loc="77:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f426b614900"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x7f426bf0f530"/></to>
    </wire>
    <wire loc="81:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f426b6102f0"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x7f426bf0e530"/></to>
    </wire>
    <wire loc="85:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f426b60dc20"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7f426bf0d530"/></to>
    </wire>
    <wire loc="89:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f426b6087a0"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x7f426bf0c530"/></to>
    </wire>
    <wire loc="30:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelXC.nc">
      <from><interface-ref name="ActualX" scoped="" ref="0x7f426b5e3bc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x7f426aaa44a0"/></to>
    </wire>
    <wire loc="36:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f426aaa44a0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f426b4cfe40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelXC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f426aaa3b30"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x7f426b5d4d30"/></to>
    </wire>
    <wire loc="30:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ConfigX" scoped="" ref="0x7f426b5d4d30"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x7f426b5d16c0"/></to>
    </wire>
    <wire loc="24:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="ReadX" scoped="" ref="0x7f426b5eadc0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f426b4fb150"/></to>
    </wire>
    <wire loc="29:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="ReadY" scoped="" ref="0x7f426b5e5d30"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f426b4debe0"/></to>
    </wire>
    <wire loc="25:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b4e0300"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426b5d9020"/></to>
    </wire>
    <wire loc="29:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b5d9020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426b5397f0"/></to>
    </wire>
    <wire loc="26:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f426b4e3af0"/></from>
      <to><interface-ref name="ActualX" scoped="" ref="0x7f426b5e3bc0"/></to>
    </wire>
    <wire loc="30:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b4dad70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426b5d9020"/></to>
    </wire>
    <wire loc="31:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f426b4db5b0"/></from>
      <to><interface-ref name="ActualY" scoped="" ref="0x7f426b5e09b0"/></to>
    </wire>
    <wire loc="31:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ConfigY" scoped="" ref="0x7f426b5d7780"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x7f426b5d0110"/></to>
    </wire>
    <wire loc="105:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b5397f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426aa90c80"/></to>
    </wire>
    <wire loc="33:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b505b60"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b538e40"/></to>
    </wire>
    <wire loc="107:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b538e40"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426aa8e270"/></to>
    </wire>
    <wire loc="34:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b5048b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b537a70"/></to>
    </wire>
    <wire loc="108:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b537a70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426aa8ee80"/></to>
    </wire>
    <wire loc="35:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f426b532a10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f426b5d6a10"/></to>
    </wire>
    <wire loc="37:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f426b5d0c20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f426b5b6c50"/></to>
    </wire>
    <wire loc="52:/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f426b5b6c50"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f426b85cd90"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelPin" scoped="" ref="0x7f426b5ca020"/></from>
      <to><interface-ref name="PW4" scoped="" ref="0x7f426b640b10"/></to>
    </wire>
    <wire loc="39:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelAdcX" scoped="" ref="0x7f426b5c9380"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x7f426b62d020"/></to>
    </wire>
    <wire loc="40:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelAdcY" scoped="" ref="0x7f426b5c9a60"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x7f426b62d6d0"/></to>
    </wire>
    <wire loc="67:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x7f426b5bb7c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f426b5386c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f426aa8fa60"/></to>
    </wire>
    <wire loc="109:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426aa8d790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b5363e0"/></to>
    </wire>
    <wire loc="111:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f426aa8c020"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f426aa93a30"/></to>
    </wire>
    <wire loc="75:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f426aa8a160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f426aa57400"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f426b532a10"/></to>
    </wire>
    <wire loc="81:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f426aa57e80"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f426b505590"/></to>
    </wire>
    <wire loc="83:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426aa56470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b505b60"/></to>
    </wire>
    <wire loc="84:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426aa540e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b5048b0"/></to>
    </wire>
    <wire loc="78:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f426aa548c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f426aa53100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f426b4c6c20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f426aaa3b30"/></to>
    </wire>
    <wire loc="38:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b4c5b50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426b4c1860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b4bdaf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426aaa1590"/></to>
    </wire>
    <wire loc="30:/home/punit/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f426b4cfe40"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f426b3d9420"/></to>
    </wire>
    <wire loc="31:/home/punit/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f426b4c7e60"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f426b4007f0"/></to>
    </wire>
    <wire loc="32:/home/punit/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b3d56f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426b4c5b50"/></to>
    </wire>
    <wire loc="33:/home/punit/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f426b3fc020"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f426b4c6c20"/></to>
    </wire>
    <wire loc="35:/home/punit/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f426b3d8dc0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f426b402a60"/></to>
    </wire>
    <wire loc="36:/home/punit/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f426b3fd080"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f426b4badd0"/></to>
    </wire>
    <wire loc="68:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f426b4badd0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f426b4af020"/></to>
    </wire>
    <wire loc="69:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f426b4b4c90"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f426b4af9c0"/></to>
    </wire>
    <wire loc="66:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b4c1860"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426b430bb0"/></to>
    </wire>
    <wire loc="105:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b430bb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426aa22c80"/></to>
    </wire>
    <wire loc="67:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b42d770"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b4bdaf0"/></to>
    </wire>
    <wire loc="73:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f426b4ad020"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f426b46c3f0"/></to>
    </wire>
    <wire loc="50:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f426b46c3f0"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f426b467730"/></to>
    </wire>
    <wire loc="74:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f426b49f630"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f426c54f020"/></to>
    </wire>
    <wire loc="76:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f426b429880"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f426b4b1730"/></to>
    </wire>
    <wire loc="77:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b40d5f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b42e270"/></to>
    </wire>
    <wire loc="107:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b42e270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426aa20270"/></to>
    </wire>
    <wire loc="51:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f426b465c10"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f426c6347d0"/></to>
    </wire>
    <wire loc="106:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f426b42f9e0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f426aa21a60"/></to>
    </wire>
    <wire loc="108:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b42ee80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426aa20e80"/></to>
    </wire>
    <wire loc="109:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426aa1f790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b42d770"/></to>
    </wire>
    <wire loc="111:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f426aa1e020"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f426aa25a70"/></to>
    </wire>
    <wire loc="75:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f426aa1c160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/punit/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f426a9eaad0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f426b429880"/></to>
    </wire>
    <wire loc="82:/home/punit/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f426a9e9270"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f426b40d020"/></to>
    </wire>
    <wire loc="84:/home/punit/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426a9e9840"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b40d5f0"/></to>
    </wire>
    <wire loc="85:/home/punit/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426a9e7590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b40c270"/></to>
    </wire>
    <wire loc="103:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7f426b3ec510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="10:/home/punit/tinyos-main/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f426b3bf210"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f426b339610"/></to>
    </wire>
    <wire loc="11:/home/punit/tinyos-main/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f426b336110"/></from>
      <to><interface-ref name="ReadTemp" scoped="" ref="0x7f426b3b5040"/></to>
    </wire>
    <wire loc="46:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadTemp" scoped="" ref="0x7f426b3b5040"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f426b3607e0"/></to>
    </wire>
    <wire loc="12:/home/punit/tinyos-main/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b3358b0"/></from>
      <to><interface-ref name="TempResource" scoped="" ref="0x7f426b3bac50"/></to>
    </wire>
    <wire loc="33:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7f426b3bac50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426b39f8a0"/></to>
    </wire>
    <wire loc="23:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoResource" scoped="" ref="0x7f426b3bb8e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426b3a43a0"/></to>
    </wire>
    <wire loc="105:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b3a43a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426a98dc80"/></to>
    </wire>
    <wire loc="105:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b39f8a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426a94f970"/></to>
    </wire>
    <wire loc="30:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadPhoto" scoped="" ref="0x7f426b3b71d0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f426b36fcf0"/></to>
    </wire>
    <wire loc="24:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b3986b0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b3a38d0"/></to>
    </wire>
    <wire loc="107:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b3a38d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426a98b270"/></to>
    </wire>
    <wire loc="25:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b397400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b3a2590"/></to>
    </wire>
    <wire loc="108:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b3a2590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426a98be80"/></to>
    </wire>
    <wire loc="26:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f426b3995e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f426b36f020"/></to>
    </wire>
    <wire loc="27:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x7f426b36d480"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426b3b1e40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f426b36c200"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f426b352640"/></to>
    </wire>
    <wire loc="52:/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f426b352640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f426b85cd90"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x7f426b367450"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x7f426b6397f0"/></to>
    </wire>
    <wire loc="31:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x7f426b3666f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f426b34b060"/></to>
    </wire>
    <wire loc="36:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f426b34b060"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f426b4cfe40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b394410"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b39ee40"/></to>
    </wire>
    <wire loc="107:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b39ee40"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426a94d020"/></to>
    </wire>
    <wire loc="35:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b393060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b39ca70"/></to>
    </wire>
    <wire loc="108:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b39ca70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426a94dc30"/></to>
    </wire>
    <wire loc="36:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f426b3953a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f426b361990"/></to>
    </wire>
    <wire loc="37:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x7f426b35e020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426b3b1e40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f426b35ed50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f426b352640"/></to>
    </wire>
    <wire loc="42:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x7f426b357020"/></from>
      <to><interface-ref name="PW0" scoped="" ref="0x7f426b6442a0"/></to>
    </wire>
    <wire loc="47:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x7f426b3563d0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f426b34b060"/></to>
    </wire>
    <wire loc="49:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f426b34a6f0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f426b3b02f0"/></to>
    </wire>
    <wire loc="50:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempAdc" scoped="" ref="0x7f426b3b0d50"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7f426b62e1c0"/></to>
    </wire>
    <wire loc="106:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f426b3aabd0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f426a9c9a60"/></to>
    </wire>
    <wire loc="107:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b3a9400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426a9c8270"/></to>
    </wire>
    <wire loc="105:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b3b1e40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426a9cac80"/></to>
    </wire>
    <wire loc="108:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b3a8060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426a9c8e80"/></to>
    </wire>
    <wire loc="109:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426a9c7790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b3a8930"/></to>
    </wire>
    <wire loc="111:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f426a9c6020"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f426a9cda90"/></to>
    </wire>
    <wire loc="75:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f426a9c4160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f426b3a3150"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f426a98ca60"/></to>
    </wire>
    <wire loc="109:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426a98a790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b3a2e60"/></to>
    </wire>
    <wire loc="111:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f426a988020"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f426a98fad0"/></to>
    </wire>
    <wire loc="75:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f426a986160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f426b39e6c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f426a94e850"/></to>
    </wire>
    <wire loc="109:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426a94c590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b39b3e0"/></to>
    </wire>
    <wire loc="111:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f426a94cd50"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f426a952690"/></to>
    </wire>
    <wire loc="75:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f426a949020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f426a916400"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f426b3995e0"/></to>
    </wire>
    <wire loc="81:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f426a916e80"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f426b3980e0"/></to>
    </wire>
    <wire loc="83:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426a915470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b3986b0"/></to>
    </wire>
    <wire loc="84:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426a9130e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b397400"/></to>
    </wire>
    <wire loc="78:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f426a9138c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f426a912100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f426a8fe400"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f426b3953a0"/></to>
    </wire>
    <wire loc="81:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f426a8fee80"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f426b395e20"/></to>
    </wire>
    <wire loc="83:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426a8fd470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b394410"/></to>
    </wire>
    <wire loc="84:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426a8fc0e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b393060"/></to>
    </wire>
    <wire loc="78:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f426a8fc8c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f426a8fb100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x7f426b364e10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x7f426b355aa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f426b4c6c20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f426b34a6f0"/></to>
    </wire>
    <wire loc="38:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b4c5b50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426b4c1860"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b4bdaf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b349020"/></to>
    </wire>
    <wire loc="53:/home/punit/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="MicSetting" scoped="" ref="0x7f426b14fdd0"/></from>
      <to><interface-ref name="MicSetting" scoped="" ref="0x7f426b316ac0"/></to>
    </wire>
    <wire loc="55:/home/punit/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicSetting" scoped="" ref="0x7f426b316ac0"/></from>
      <to><interface-ref name="MicSetting" scoped="" ref="0x7f426b3110c0"/></to>
    </wire>
    <wire loc="51:/home/punit/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x7f426b31f1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x7f426a8bd5d0"/></to>
    </wire>
    <wire loc="36:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f426a8bd5d0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f426b4cfe40"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/punit/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f426a8bcc60"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f426b316160"/></to>
    </wire>
    <wire loc="54:/home/punit/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f426b316160"/></from>
      <to><interface-ref name="MicAtm128AdcConfig" scoped="" ref="0x7f426b310450"/></to>
    </wire>
    <wire loc="17:/home/punit/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f426b3211d0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f426b15c5a0"/></to>
    </wire>
    <wire loc="18:/home/punit/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b1587e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426b318450"/></to>
    </wire>
    <wire loc="53:/home/punit/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b318450"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426b170cb0"/></to>
    </wire>
    <wire loc="19:/home/punit/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f426b159020"/></from>
      <to><interface-ref name="ActualRead" scoped="" ref="0x7f426b31f1d0"/></to>
    </wire>
    <wire loc="105:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b170cb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426a810020"/></to>
    </wire>
    <wire loc="57:/home/punit/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b169b60"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b16d270"/></to>
    </wire>
    <wire loc="107:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b16d270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426a80f560"/></to>
    </wire>
    <wire loc="58:/home/punit/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b1688b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b16de80"/></to>
    </wire>
    <wire loc="108:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b16de80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426a80e270"/></to>
    </wire>
    <wire loc="59:/home/punit/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f426b16aad0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f426b314550"/></to>
    </wire>
    <wire loc="61:/home/punit/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f426b30f020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f426b177bb0"/></to>
    </wire>
    <wire loc="52:/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f426b177bb0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f426b85cd90"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/punit/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicPower" scoped="" ref="0x7f426b30a550"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x7f426b641970"/></to>
    </wire>
    <wire loc="63:/home/punit/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicMuxSel" scoped="" ref="0x7f426b309860"/></from>
      <to><interface-ref name="PW6" scoped="" ref="0x7f426b63c020"/></to>
    </wire>
    <wire loc="64:/home/punit/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="InterruptPin" scoped="" ref="0x7f426b308ba0"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7f426b637e30"/></to>
    </wire>
    <wire loc="65:/home/punit/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicAdc" scoped="" ref="0x7f426b306020"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x7f426b62e870"/></to>
    </wire>
    <wire loc="66:/home/punit/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f426b2f99c0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f426b17d880"/></to>
    </wire>
    <wire loc="54:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f426b17d880"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f426b2bd5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/punit/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7f426b2f7900"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426b2cb9f0"/></to>
    </wire>
    <wire loc="53:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b2cb9f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426b2be1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/punit/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="AlertInterrupt" scoped="" ref="0x7f426b2f6730"/></from>
      <to><interface-ref name="Int3_Interrupt" scoped="" ref="0x7f426b6336f0"/></to>
    </wire>
    <wire loc="60:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b2be1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426b293150"/></to>
    </wire>
    <wire loc="61:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f426b2bd5e0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f426b25c060"/></to>
    </wire>
    <wire loc="63:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f426b257020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426b29fe60"/></to>
    </wire>
    <wire loc="105:/home/punit/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b29fe60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426a8a1230"/></to>
    </wire>
    <wire loc="64:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f426b257df0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f426b1e9e30"/></to>
    </wire>
    <wire loc="65:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7f426b252ba0"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7f426b1e4ba0"/></to>
    </wire>
    <wire loc="67:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f426b299af0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f426b1e9570"/></to>
    </wire>
    <wire loc="68:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b298850"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b29c400"/></to>
    </wire>
    <wire loc="107:/home/punit/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b29c400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426a8a07a0"/></to>
    </wire>
    <wire loc="70:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f426b1e32f0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f426b1d9500"/></to>
    </wire>
    <wire loc="53:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f426b1d9500"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f426b1d3020"/></to>
    </wire>
    <wire loc="71:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f426b1e1c50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f426b196870"/></to>
    </wire>
    <wire loc="72:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f426b1df2f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f426b196870"/></to>
    </wire>
    <wire loc="106:/home/punit/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f426b29ebf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f426a8a0020"/></to>
    </wire>
    <wire loc="108:/home/punit/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b29b060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426a89f400"/></to>
    </wire>
    <wire loc="109:/home/punit/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426a89fcf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b29b930"/></to>
    </wire>
    <wire loc="111:/home/punit/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f426a89e500"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f426a8a4060"/></to>
    </wire>
    <wire loc="75:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f426a89c7a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7f426b1d1b80"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7f426c511350"/></to>
    </wire>
    <wire loc="55:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7f426b1d0e50"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f426c510800"/></to>
    </wire>
    <wire loc="106:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f426b16fa60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f426a810d80"/></to>
    </wire>
    <wire loc="109:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426a80eb60"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b16c770"/></to>
    </wire>
    <wire loc="111:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f426a80d440"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f426a814d80"/></to>
    </wire>
    <wire loc="75:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f426a80b7a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f426a7d7b20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f426b16aad0"/></to>
    </wire>
    <wire loc="81:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f426a7cd720"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f426b169590"/></to>
    </wire>
    <wire loc="83:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426a7cdcf0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b169b60"/></to>
    </wire>
    <wire loc="84:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426a7cc930"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b1688b0"/></to>
    </wire>
    <wire loc="78:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f426a7cb160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f426a7cb940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f426b4c6c20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f426a8bcc60"/></to>
    </wire>
    <wire loc="38:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f426b4c5b50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f426b4c1860"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b4bdaf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426a8bb590"/></to>
    </wire>
    <wire loc="63:/home/punit/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f426a7a7100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f426a799200"/></to>
    </wire>
    <wire loc="65:/home/punit/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f426b0c5c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f426a7a7d10"/></to>
    </wire>
    <wire loc="64:/home/punit/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f426a7a7d10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f426c37c5f0"/></to>
    </wire>
    <wire loc="66:/home/punit/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f426b0c48b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f426a7a6970"/></to>
    </wire>
    <wire loc="65:/home/punit/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f426a7a6970"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f426c36c4e0"/></to>
    </wire>
    <wire loc="67:/home/punit/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f426b0c2020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f426a7a4020"/></to>
    </wire>
    <wire loc="66:/home/punit/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f426a7a4020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f426c3669f0"/></to>
    </wire>
    <wire loc="60:/home/punit/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f426a799e70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f426b127940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/punit/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f426a798ab0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f426c36c4e0"/></to>
    </wire>
    <wire loc="53:/home/punit/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f426b127940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f426b0db4b0"/></to>
    </wire>
    <wire loc="54:/home/punit/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f426b0da400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f426c38ad20"/></to>
    </wire>
    <wire loc="55:/home/punit/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f426b0d9060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f426c36c4e0"/></to>
    </wire>
    <wire loc="56:/home/punit/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f426b0d8720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f426c37c5f0"/></to>
    </wire>
    <wire loc="169:/home/punit/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f426b0d7480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/punit/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f426b0d7c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/punit/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f426b0b8020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f426c37c5f0"/></to>
    </wire>
    <wire loc="56:/home/punit/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f426b0b8c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f426c36c4e0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="OscilloscopeC" loc="19:OscilloscopeC.nc" safe="">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/punit/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/home/punit/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/punit/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/punit/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/punit/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/punit/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/punit/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/punit/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/punit/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/home/punit/tinyos-main/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/home/punit/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/punit/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/punit/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/punit/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/punit/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/home/punit/tinyos-main/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="53:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/punit/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/punit/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/home/punit/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/home/punit/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/punit/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="TOne" ref="0x7f426c65ba90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/home/punit/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/home/punit/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/punit/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/punit/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="TOne" ref="0x7f426c65ba90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/home/punit/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f426c695d50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="TOne" ref="0x7f426c65ba90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x7f426c65a2f0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/home/punit/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f426c695d50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="TOne" ref="0x7f426c65ba90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/home/punit/tinyos-main/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/home/punit/tinyos-main/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/punit/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/punit/tinyos-main/tos/system/StateImplC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/punit/tinyos-main/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/punit/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/punit/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/punit/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/punit/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/punit/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/punit/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/punit/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/punit/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/punit/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/punit/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/punit/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/punit/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/punit/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/punit/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/punit/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/punit/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/punit/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/home/punit/tinyos-main/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/punit/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/punit/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f426c695d50"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/punit/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/punit/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/punit/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f426b961020"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/punit/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/punit/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/punit/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/punit/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/punit/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/punit/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/punit/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/punit/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/punit/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/punit/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/punit/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/punit/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/punit/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/punit/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/punit/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/home/punit/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/home/punit/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SounderC" loc="1:/home/punit/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <configuration/>
    </component>
    <component qname="SounderP" loc="1:/home/punit/tinyos-main/tos/sensorboards/mts300/SounderP.nc">
      <module/>
    </component>
    <component qname="SounderC.TimerMilliC" loc="44(SounderC.TimerMilliC):/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/home/punit/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/home/punit/tinyos-main/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt0C" loc="6(MicaBusC.Atm128GpioInterrupt0C):/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt1C" loc="6(MicaBusC.Atm128GpioInterrupt1C):/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt2C" loc="6(MicaBusC.Atm128GpioInterrupt2C):/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt3C" loc="6(MicaBusC.Atm128GpioInterrupt3C):/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.TimerMilliC" loc="44(OscilloscopeAppC.TimerMilliC):/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Sensor" loc="18(OscilloscopeAppC.Sensor):/home/punit/tinyos-main/tos/sensorboards/mts300/AccelXC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AccelXC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelReadP" loc="1:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <configuration/>
    </component>
    <component qname="AccelConfigP" loc="17:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <documentation loc="10:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
        <short>&#10; Internal component for basicsb photodiode.</short>
        <long>&#10; Internal component for basicsb photodiode. Arbitrates access to the photo&#10; diode and automatically turns it on or off based on user requests.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AccelP" loc="14:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <documentation loc="10:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
        <short>&#10; ADXL202JE accelerometer ADC configuration and power management.</short>
        <long>&#10; ADXL202JE accelerometer ADC configuration and power management.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AccelConfigP.WarmupTimer" loc="44(AccelConfigP.WarmupTimer):/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.Arbiter" loc="89(AccelConfigP.Arbiter):/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.accel">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.Arbiter.Queue" loc="42(AccelConfigP.Arbiter.Queue):/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelConfigP.Arbiter.Arbiter" loc="52(AccelConfigP.Arbiter.Arbiter):/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelConfigP.PowerManager" loc="67(AccelConfigP.PowerManager):/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.PowerManager.PowerManager" loc="58(AccelConfigP.PowerManager.PowerManager):/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AccelReadP.MultiplexX" loc="23(AccelReadP.MultiplexX):/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelReadP.MultiplexY" loc="23(AccelReadP.MultiplexY):/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.Sensor.AdcX" loc="21(OscilloscopeAppC.Sensor.AdcX):/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/home/punit/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/home/punit/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/home/punit/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/punit/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/home/punit/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/punit/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.Sensor1" loc="18(OscilloscopeAppC.Sensor1):/home/punit/tinyos-main/tos/sensorboards/mts300/TempC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TempC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedTempDeviceP" loc="1:/home/punit/tinyos-main/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC" loc="3:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoTempP" loc="14:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <documentation loc="10:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
        <short>&#10; MTS300 photo and temp sensor ADC configuration.</short>
        <long>&#10; MTS300 photo and temp sensor ADC configuration.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter" loc="89(PhotoTempDeviceC.SharingArbiter):/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.phototemp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Queue" loc="42(PhotoTempDeviceC.SharingArbiter.Queue):/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Arbiter" loc="52(PhotoTempDeviceC.SharingArbiter.Arbiter):/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter" loc="89(PhotoTempDeviceC.PhotoArbiter):/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.photo">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Queue" loc="42(PhotoTempDeviceC.PhotoArbiter.Queue):/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Arbiter" loc="52(PhotoTempDeviceC.PhotoArbiter.Arbiter):/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter" loc="89(PhotoTempDeviceC.TempArbiter):/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.temp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Queue" loc="42(PhotoTempDeviceC.TempArbiter.Queue):/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Arbiter" loc="52(PhotoTempDeviceC.TempArbiter.Arbiter):/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower" loc="67(PhotoTempDeviceC.PhotoPower):/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower.PowerManager" loc="58(PhotoTempDeviceC.PhotoPower.PowerManager):/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower" loc="67(PhotoTempDeviceC.TempPower):/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower.PowerManager" loc="58(PhotoTempDeviceC.TempPower.PowerManager):/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoControl" loc="1(PhotoTempDeviceC.PhotoControl):/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="0">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempControl" loc="1(PhotoTempDeviceC.TempControl):/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="1">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.WarmupTimer" loc="44(PhotoTempDeviceC.WarmupTimer):/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.Adc" loc="21(PhotoTempDeviceC.Adc):/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedTempDeviceP.ArbitrateRead" loc="23(ArbitratedTempDeviceP.ArbitrateRead):/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.Sensor2" loc="40(OscilloscopeAppC.Sensor2):/home/punit/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MicC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicReadP" loc="1:/home/punit/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <configuration/>
    </component>
    <component qname="MicDeviceP" loc="39:/home/punit/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <configuration/>
    </component>
    <component qname="MicP" loc="45:/home/punit/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicDeviceP.I2CPot" loc="43(MicDeviceP.I2CPot):/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):/home/punit/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/punit/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):/home/punit/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):/home/punit/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/punit/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:/home/punit/tinyos-main/tos/system/NoLedsC.nc">
      <documentation loc="35:/home/punit/tinyos-main/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicDeviceP.WarmupTimer" loc="44(MicDeviceP.WarmupTimer):/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.Arbiter" loc="89(MicDeviceP.Arbiter):/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.microphone">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.Arbiter.Queue" loc="42(MicDeviceP.Arbiter.Queue):/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicDeviceP.Arbiter.Arbiter" loc="52(MicDeviceP.Arbiter.Arbiter):/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicDeviceP.PowerManager" loc="67(MicDeviceP.PowerManager):/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.PowerManager.PowerManager" loc="58(MicDeviceP.PowerManager.PowerManager):/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="MicReadP.ArbitratedReadC" loc="23(MicReadP.ArbitratedReadC):/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.Sensor2.AdcReadClientC" loc="21(OscilloscopeAppC.Sensor2.AdcReadClientC):/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC" loc="47(OscilloscopeAppC.AMSenderC):/home/punit/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.SenderC" loc="47(OscilloscopeAppC.AMSenderC.SenderC):/home/punit/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP):/home/punit/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/punit/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/punit/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AMReceiverC" loc="43(OscilloscopeAppC.AMReceiverC):/home/punit/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f426c4ea5a0" loc="40:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f426c4ea910" loc="40:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f426c4eac80" loc="40:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f426c4dd9f0" loc="41:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f426c4ddd80" loc="42:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f426c4d9170" loc="43:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f426c4d94c0" loc="44:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f426c448aa0" loc="42:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f426c448e30" loc="43:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f426c445200" loc="44:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f426c445550" loc="45:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/home/punit/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/home/punit/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/punit/tinyos-main/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/punit/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f426c0415f0" loc="44:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f426c0415f0"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f426c041960" loc="44:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f426c02c1f0" loc="51:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f426c02c1f0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f426c02c9b0" loc="52:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f426c02c9b0"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7f426c02ccd0" loc="53:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f426bfe45b0" loc="42:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f426bfe45b0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f426bfe4d70" loc="43:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f426bfe4d70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/punit/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/punit/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f426bfc5570" loc="55:/home/punit/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f426bfc5570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f426bfc5d40" loc="56:/home/punit/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f426bfc5d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f426bfc4160" loc="57:/home/punit/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f426bfc4160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f426bfc4940" loc="58:/home/punit/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f426bfc4940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f426bfc4d10" loc="59:/home/punit/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f426bfc3540" loc="60:/home/punit/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f426bfc3540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/punit/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/punit/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f426bff2770" loc="52:/home/punit/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f426bff2770"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f426bfa1020" loc="53:/home/punit/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f426bfa1020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f426bfa1410" loc="54:/home/punit/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f426bfa1410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f426bfa1bf0" loc="55:/home/punit/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f426bfa1bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f426bfa0020" loc="56:/home/punit/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7f426bf08ad0" loc="39:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7f426bf08e60" loc="40:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7f426bee4220" loc="41:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f426bee4570" loc="42:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/punit/tinyos-main/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/punit/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/punit/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/punit/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f426bce5690" loc="83:/home/punit/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/punit/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f426bcdd920" loc="42:/home/punit/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/punit/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/punit/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/punit/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/punit/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f426b98aa60" loc="46:/home/punit/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f426b98aa60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f426b961020" loc="23:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f426b961020"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f426b961330" loc="23:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f426b958a30" loc="23:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f426b958a30"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f426b958d40" loc="23:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/punit/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/punit/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f426b8ee160" loc="46:/home/punit/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f426b8ee160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/punit/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/punit/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f426b8bc230" loc="46:/home/punit/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f426b8bc230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f426b8bc560" loc="46:/home/punit/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/punit/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AccelXC" loc="18:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelXC.nc" abstract="">
      <documentation loc="32:/home/punit/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f426b5af970" loc="89:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f426b5a2700" loc="42:/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/punit/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f426b5845e0" loc="52:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7f426b4fa0b0" loc="23:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7f426b4fa0b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/punit/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/punit/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/punit/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/punit/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TempC" loc="18:/home/punit/tinyos-main/tos/sensorboards/mts300/TempC.nc" abstract="">
      <documentation loc="32:/home/punit/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoTempControlP" loc="1:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MicC" loc="40:/home/punit/tinyos-main/tos/sensorboards/mts300/MicC.nc" abstract="">
      <documentation loc="32:/home/punit/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/punit/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/punit/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f426b2b4150" loc="89:/home/punit/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/punit/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f426b149440" loc="47:/home/punit/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/punit/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f426b142140" loc="47:/home/punit/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/punit/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f426b13b020" loc="43:/home/punit/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/punit/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f426b123c90" loc="45:/home/punit/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/punit/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/punit/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f426b0be330" loc="43:/home/punit/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Sensor1" ref="0x7f426c59b300" loc="29:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sensor1" scoped="" ref="0x7f426c59b300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426c590020"/>
        <function-ref name="readDone" scoped="" ref="0x7f426c5904a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f426c614cf0" loc="22:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f426c614cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f426c6130a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f426c5b35a0" loc="24:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f426c5b35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426c5b3920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426c5b3ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426c5b3c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f426c5b3dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426c611020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f426c60d710" loc="23:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f426c60d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f426c60da90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f426c60dc20"/>
        <function-ref name="start" scoped="" ref="0x7f426c60ddb0"/>
        <function-ref name="stop" scoped="" ref="0x7f426c612020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x7f426c59e620" loc="27:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f426c59e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426c5a1390"/>
        <function-ref name="readDone" scoped="" ref="0x7f426c5a1810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mts300Sounder" ref="0x7f426c58b140" loc="31:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x7f426c58b140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x7f426c58b4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sensor2" ref="0x7f426c590c80" loc="30:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sensor2" scoped="" ref="0x7f426c590c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426c58f8a0"/>
        <function-ref name="readDone" scoped="" ref="0x7f426c58fd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f426c5afdf0" loc="25:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f426c5afdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426c60c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f426c592a80" loc="28:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f426c592a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f426c592e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f426c59c020"/>
        <function-ref name="led1On" scoped="" ref="0x7f426c59c1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f426c59c340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f426c59c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f426c59c660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f426c59c7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f426c59ce30"/>
        <function-ref name="set" scoped="" ref="0x7f426c59c980"/>
        <function-ref name="led0On" scoped="" ref="0x7f426c59cb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f426c59cca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f426c5b4020" loc="26:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f426c5b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426c5a3630"/>
        <function-ref name="fired" scoped="" ref="0x7f426c5b0a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f426c5a4920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f426c5a44a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f426c5a2020"/>
        <function-ref name="gett0" scoped="" ref="0x7f426c5a3ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426c5a4020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f426c5b4c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f426c5a3020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f426c5b0110"/>
        <function-ref name="stop" scoped="" ref="0x7f426c5b05e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f426c552590" loc="58:/home/punit/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c552590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426c552910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f426c555080" loc="57:/home/punit/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f426c555080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f426c555400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f426c54fd50" loc="52:/home/punit/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f426c54fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426c54e100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426c554d60" loc="46:/home/punit/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426c554d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426c550180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f426c54f020" loc="50:/home/punit/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f426c54f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f426c54f3a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f426c54f530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f426c54f6c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f426c54f850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f426c54f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f426c5457a0" loc="45:/home/punit/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f426c5457a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426c545b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426c5450c0" loc="44:/home/punit/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426c5450c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426c545440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f426c544020" loc="46:/home/punit/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f426c544020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426c5443a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f426c53f110" loc="41:/home/punit/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f426c53f110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426c53f490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f426c5499e0" loc="40:/home/punit/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f426c5499e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426c549d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f426c539020" loc="45:/home/punit/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f426c539020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426c5393a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f426c535d20" loc="44:/home/punit/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f426c535d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c53a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c53a270"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c53a400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c53a590"/>
        <function-ref name="get" scoped="" ref="0x7f426c53a720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c53a8b0"/>
        <function-ref name="set" scoped="" ref="0x7f426c53aa40"/>
        <function-ref name="clr" scoped="" ref="0x7f426c53abd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f426c53c780" loc="43:/home/punit/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f426c53c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426c53cb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f426c4f3020" loc="100:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f426c4f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4f37a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4f3930"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4f3ac0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4f3c50"/>
        <function-ref name="get" scoped="" ref="0x7f426c4f3de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4f2020"/>
        <function-ref name="set" scoped="" ref="0x7f426c4f21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4f2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f426c510800" loc="74:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f426c510800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c510b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c510d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c50f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c50f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f426c50f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c50f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f426c50f660"/>
        <function-ref name="clr" scoped="" ref="0x7f426c50f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f426c503670" loc="85:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f426c503670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c5039f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c503b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c503d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c502020"/>
        <function-ref name="get" scoped="" ref="0x7f426c5021b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c502340"/>
        <function-ref name="set" scoped="" ref="0x7f426c5024d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c502660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f426c4f9020" loc="94:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f426c4f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4f93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4f9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4f96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4f9850"/>
        <function-ref name="get" scoped="" ref="0x7f426c4f99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4f9b70"/>
        <function-ref name="set" scoped="" ref="0x7f426c4f9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f426c528990" loc="52:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f426c528990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c528d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c527020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c5271b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c527340"/>
        <function-ref name="get" scoped="" ref="0x7f426c5274d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c527660"/>
        <function-ref name="set" scoped="" ref="0x7f426c5277f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c527980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f426c4fc990" loc="92:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f426c4fc990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4fcd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4fb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4fb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4fb340"/>
        <function-ref name="get" scoped="" ref="0x7f426c4fb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4fb660"/>
        <function-ref name="set" scoped="" ref="0x7f426c4fb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4fb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f426c524020" loc="55:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f426c524020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c5243a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c524530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c5246c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c524850"/>
        <function-ref name="get" scoped="" ref="0x7f426c5249e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c524b70"/>
        <function-ref name="set" scoped="" ref="0x7f426c524d00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c523020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f426c518020" loc="66:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f426c518020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c5183a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c518530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c5186c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c518850"/>
        <function-ref name="get" scoped="" ref="0x7f426c5189e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c518b70"/>
        <function-ref name="set" scoped="" ref="0x7f426c518d00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c517020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f426c50c060" loc="77:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f426c50c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c50c3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c50c570"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c50c700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c50c890"/>
        <function-ref name="get" scoped="" ref="0x7f426c50ca20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c50cbb0"/>
        <function-ref name="set" scoped="" ref="0x7f426c50cd40"/>
        <function-ref name="clr" scoped="" ref="0x7f426c50b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f426c4ff020" loc="88:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f426c4ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4ff3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4ff530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4ff6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4ff850"/>
        <function-ref name="get" scoped="" ref="0x7f426c4ff9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4ffb70"/>
        <function-ref name="set" scoped="" ref="0x7f426c4ffd00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f426c52e990" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f426c52e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c52ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c52d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c52d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c52d340"/>
        <function-ref name="get" scoped="" ref="0x7f426c52d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c52d660"/>
        <function-ref name="set" scoped="" ref="0x7f426c52d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c52d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f426c521990" loc="58:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f426c521990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c521d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c520020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c5201b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c520340"/>
        <function-ref name="get" scoped="" ref="0x7f426c5204d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c520660"/>
        <function-ref name="set" scoped="" ref="0x7f426c5207f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c520980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f426c515990" loc="69:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f426c515990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c515d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c514020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c5141b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c514340"/>
        <function-ref name="get" scoped="" ref="0x7f426c5144d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c514660"/>
        <function-ref name="set" scoped="" ref="0x7f426c5147f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c514980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f426c509990" loc="80:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f426c509990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c509d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c507020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c5071b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c507340"/>
        <function-ref name="get" scoped="" ref="0x7f426c5074d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c507660"/>
        <function-ref name="set" scoped="" ref="0x7f426c5077f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c507980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f426c4f6990" loc="97:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f426c4f6990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4f6d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4f5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4f51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4f5340"/>
        <function-ref name="get" scoped="" ref="0x7f426c4f54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4f5660"/>
        <function-ref name="set" scoped="" ref="0x7f426c4f57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4f5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f426c4f0cb0" loc="103:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f426c4f0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4ef0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4ef230"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4ef3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4ef550"/>
        <function-ref name="get" scoped="" ref="0x7f426c4ef6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4ef870"/>
        <function-ref name="set" scoped="" ref="0x7f426c4efa00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4efb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f426c505020" loc="83:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f426c505020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c5053a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c505530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c5056c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c505850"/>
        <function-ref name="get" scoped="" ref="0x7f426c5059e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c505b70"/>
        <function-ref name="set" scoped="" ref="0x7f426c505d00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c504020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f426c52a350" loc="50:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f426c52a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c52a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c52a860"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c52a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c52ab80"/>
        <function-ref name="get" scoped="" ref="0x7f426c52ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c529020"/>
        <function-ref name="set" scoped="" ref="0x7f426c5291b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c529340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f426c51d350" loc="61:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f426c51d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c51d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c51d860"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c51d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c51db80"/>
        <function-ref name="get" scoped="" ref="0x7f426c51dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c51c020"/>
        <function-ref name="set" scoped="" ref="0x7f426c51c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c51c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f426c4f2670" loc="101:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f426c4f2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4f29f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4f2b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4f2d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4f1020"/>
        <function-ref name="get" scoped="" ref="0x7f426c4f11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4f1340"/>
        <function-ref name="set" scoped="" ref="0x7f426c4f14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4f1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f426c51b990" loc="64:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f426c51b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c51bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c51a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c51a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c51a340"/>
        <function-ref name="get" scoped="" ref="0x7f426c51a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c51a660"/>
        <function-ref name="set" scoped="" ref="0x7f426c51a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c51a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f426c50fb20" loc="75:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f426c50fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c50e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c50e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c50e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c50e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f426c50e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c50e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f426c50e980"/>
        <function-ref name="clr" scoped="" ref="0x7f426c50eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f426c502990" loc="86:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f426c502990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c502d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c501020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c5011b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c501340"/>
        <function-ref name="get" scoped="" ref="0x7f426c5014d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c501660"/>
        <function-ref name="set" scoped="" ref="0x7f426c5017f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c501980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f426c4f8350" loc="95:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f426c4f8350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4f86d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4f8860"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4f89f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4f8b80"/>
        <function-ref name="get" scoped="" ref="0x7f426c4f8d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4f7020"/>
        <function-ref name="set" scoped="" ref="0x7f426c4f71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4f7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f426c527cb0" loc="53:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f426c527cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c5260a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c526230"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c5263c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c526550"/>
        <function-ref name="get" scoped="" ref="0x7f426c5266e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c526870"/>
        <function-ref name="set" scoped="" ref="0x7f426c526a00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c526b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f426c523350" loc="56:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f426c523350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c5236d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c523860"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c5239f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c523b80"/>
        <function-ref name="get" scoped="" ref="0x7f426c523d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c522020"/>
        <function-ref name="set" scoped="" ref="0x7f426c5221b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c522340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f426c517350" loc="67:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f426c517350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c5176d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c517860"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c5179f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c517b80"/>
        <function-ref name="get" scoped="" ref="0x7f426c517d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c516020"/>
        <function-ref name="set" scoped="" ref="0x7f426c5161b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c516340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f426c50b350" loc="78:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f426c50b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c50b6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c50b860"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c50b9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c50bb80"/>
        <function-ref name="get" scoped="" ref="0x7f426c50bd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c50a020"/>
        <function-ref name="set" scoped="" ref="0x7f426c50a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c50a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f426c4fe350" loc="89:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f426c4fe350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4fe6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4fe860"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4fe9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4feb80"/>
        <function-ref name="get" scoped="" ref="0x7f426c4fed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4fd020"/>
        <function-ref name="set" scoped="" ref="0x7f426c4fd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4fd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f426c52dcb0" loc="48:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f426c52dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c52c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c52c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c52c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c52c550"/>
        <function-ref name="get" scoped="" ref="0x7f426c52c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c52c870"/>
        <function-ref name="set" scoped="" ref="0x7f426c52ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c52cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f426c520cb0" loc="59:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f426c520cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c51f180"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c51f310"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c51f4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c51f630"/>
        <function-ref name="get" scoped="" ref="0x7f426c51f7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c51f950"/>
        <function-ref name="set" scoped="" ref="0x7f426c51fae0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c51fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f426c514cb0" loc="70:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f426c514cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c5130a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c513230"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c5133c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c513550"/>
        <function-ref name="get" scoped="" ref="0x7f426c5136e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c513870"/>
        <function-ref name="set" scoped="" ref="0x7f426c513a00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c513b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f426c4f5cb0" loc="98:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f426c4f5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4f40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4f4230"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4f43c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4f4550"/>
        <function-ref name="get" scoped="" ref="0x7f426c4f46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4f4870"/>
        <function-ref name="set" scoped="" ref="0x7f426c4f4a00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4f4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f426c511350" loc="73:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f426c511350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c5118d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c511a60"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c511bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c511d80"/>
        <function-ref name="get" scoped="" ref="0x7f426c510020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c5101b0"/>
        <function-ref name="set" scoped="" ref="0x7f426c510340"/>
        <function-ref name="clr" scoped="" ref="0x7f426c5104d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f426c504350" loc="84:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f426c504350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c5046d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c504860"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c5049f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c504b80"/>
        <function-ref name="get" scoped="" ref="0x7f426c504d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c503020"/>
        <function-ref name="set" scoped="" ref="0x7f426c5031b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c503340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f426c4fbcb0" loc="93:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f426c4fbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4fa0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4fa230"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4fa3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4fa550"/>
        <function-ref name="get" scoped="" ref="0x7f426c4fa6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4fa870"/>
        <function-ref name="set" scoped="" ref="0x7f426c4faa00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4fab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f426c4ee020" loc="104:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f426c4ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4ee3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4ee530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4ee6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4ee850"/>
        <function-ref name="get" scoped="" ref="0x7f426c4ee9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4eeb70"/>
        <function-ref name="set" scoped="" ref="0x7f426c4eed00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f426c529670" loc="51:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f426c529670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c5299f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c529b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c529d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c528020"/>
        <function-ref name="get" scoped="" ref="0x7f426c5281b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c528340"/>
        <function-ref name="set" scoped="" ref="0x7f426c5284d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c528660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f426c51c670" loc="62:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f426c51c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c51c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c51cb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c51cd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c51b020"/>
        <function-ref name="get" scoped="" ref="0x7f426c51b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c51b340"/>
        <function-ref name="set" scoped="" ref="0x7f426c51b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c51b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f426c4fd670" loc="91:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f426c4fd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4fd9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4fdb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4fdd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4fc020"/>
        <function-ref name="get" scoped="" ref="0x7f426c4fc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4fc340"/>
        <function-ref name="set" scoped="" ref="0x7f426c4fc4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4fc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f426c51acb0" loc="65:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f426c51acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c5190a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c519230"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c5193c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c519550"/>
        <function-ref name="get" scoped="" ref="0x7f426c5196e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c519870"/>
        <function-ref name="set" scoped="" ref="0x7f426c519a00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c519b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f426c50ee40" loc="76:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f426c50ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c50d1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c50d370"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c50d500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c50d690"/>
        <function-ref name="get" scoped="" ref="0x7f426c50d820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c50d9b0"/>
        <function-ref name="set" scoped="" ref="0x7f426c50db40"/>
        <function-ref name="clr" scoped="" ref="0x7f426c50dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f426c501cb0" loc="87:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f426c501cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c5000a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c500230"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c5003c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c500550"/>
        <function-ref name="get" scoped="" ref="0x7f426c5006e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c500870"/>
        <function-ref name="set" scoped="" ref="0x7f426c500a00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c500b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f426c4f7670" loc="96:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f426c4f7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4f79f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4f7b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4f7d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4f6020"/>
        <function-ref name="get" scoped="" ref="0x7f426c4f61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4f6340"/>
        <function-ref name="set" scoped="" ref="0x7f426c4f64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4f6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f426c53e670" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f426c53e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c53e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c53eb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c53ed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c52e020"/>
        <function-ref name="get" scoped="" ref="0x7f426c52e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c52e340"/>
        <function-ref name="set" scoped="" ref="0x7f426c52e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c52e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f426c522670" loc="57:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f426c522670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c5229f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c522b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c522d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c521020"/>
        <function-ref name="get" scoped="" ref="0x7f426c5211b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c521340"/>
        <function-ref name="set" scoped="" ref="0x7f426c5214d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c521660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f426c516670" loc="68:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f426c516670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c5169f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c516b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c516d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c515020"/>
        <function-ref name="get" scoped="" ref="0x7f426c5151b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c515340"/>
        <function-ref name="set" scoped="" ref="0x7f426c5154d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c515660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f426c50a670" loc="79:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f426c50a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c50a9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c50ab80"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c50ad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c509020"/>
        <function-ref name="get" scoped="" ref="0x7f426c5091b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c509340"/>
        <function-ref name="set" scoped="" ref="0x7f426c5094d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c509660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f426c4f1990" loc="102:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f426c4f1990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4f1d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4f0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4f01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4f0340"/>
        <function-ref name="get" scoped="" ref="0x7f426c4f04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4f0660"/>
        <function-ref name="set" scoped="" ref="0x7f426c4f07f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4f0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f426c507cb0" loc="82:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f426c507cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c5060a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c506230"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c5063c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c506550"/>
        <function-ref name="get" scoped="" ref="0x7f426c5066e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c506870"/>
        <function-ref name="set" scoped="" ref="0x7f426c506a00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c506b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f426c512020" loc="71:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f426c512020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c5123a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c512530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c5126c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c512850"/>
        <function-ref name="get" scoped="" ref="0x7f426c5129e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c512b70"/>
        <function-ref name="set" scoped="" ref="0x7f426c512d00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c511020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f426c52b020" loc="49:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f426c52b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c52b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c52b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c52b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c52b850"/>
        <function-ref name="get" scoped="" ref="0x7f426c52b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c52bb70"/>
        <function-ref name="set" scoped="" ref="0x7f426c52bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c52a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f426c51e020" loc="60:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f426c51e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c51e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c51e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c51e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c51e850"/>
        <function-ref name="get" scoped="" ref="0x7f426c51e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c51eb70"/>
        <function-ref name="set" scoped="" ref="0x7f426c51ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c51d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f426c4a2a80" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f426c4a2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4a2e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4a1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4a11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4a1340"/>
        <function-ref name="get" scoped="" ref="0x7f426c4a14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4a1660"/>
        <function-ref name="set" scoped="" ref="0x7f426c4a17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4a1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f426c49d020" loc="49:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f426c49d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c49d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c49d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c49d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c49d850"/>
        <function-ref name="get" scoped="" ref="0x7f426c49d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c49db70"/>
        <function-ref name="set" scoped="" ref="0x7f426c49dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c49c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f426c4a46b0" loc="44:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f426c4a46b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4a4a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4a4bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4a4d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4a3020"/>
        <function-ref name="get" scoped="" ref="0x7f426c4a31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4a3340"/>
        <function-ref name="set" scoped="" ref="0x7f426c4a34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4a3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f426c4a1c10" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f426c4a1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c49f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c49f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c49f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c49f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f426c49f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c49f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f426c49f980"/>
        <function-ref name="clr" scoped="" ref="0x7f426c49fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f426c49c2b0" loc="50:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f426c49c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c49c630"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c49c7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c49c950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c49cae0"/>
        <function-ref name="get" scoped="" ref="0x7f426c49cc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c49ce00"/>
        <function-ref name="set" scoped="" ref="0x7f426c49b020"/>
        <function-ref name="clr" scoped="" ref="0x7f426c49b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f426c4a38f0" loc="45:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f426c4a38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4a3c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4a3e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4a2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4a21b0"/>
        <function-ref name="get" scoped="" ref="0x7f426c4a2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4a24d0"/>
        <function-ref name="set" scoped="" ref="0x7f426c4a2660"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4a27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f426c49fda0" loc="48:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f426c49fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c49e180"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c49e310"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c49e4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c49e630"/>
        <function-ref name="get" scoped="" ref="0x7f426c49e7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c49e950"/>
        <function-ref name="set" scoped="" ref="0x7f426c49eae0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c49ec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f426c49b440" loc="51:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f426c49b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c49b7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c49b950"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c49bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c49bc70"/>
        <function-ref name="get" scoped="" ref="0x7f426c49be00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c49a020"/>
        <function-ref name="set" scoped="" ref="0x7f426c49a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c49a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426b080e20" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426b080e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b07f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b07f350"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b07f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b07f670"/>
        <function-ref name="get" scoped="" ref="0x7f426b07f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b07f990"/>
        <function-ref name="set" scoped="" ref="0x7f426b07fb20"/>
        <function-ref name="clr" scoped="" ref="0x7f426b07fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426b07c0a0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426b07c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b07c420"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b07c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b07c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b07c8d0"/>
        <function-ref name="get" scoped="" ref="0x7f426b07ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b07cbf0"/>
        <function-ref name="set" scoped="" ref="0x7f426b07cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f426b07b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426b0793f0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426b0793f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b079770"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b079900"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b079a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b079c20"/>
        <function-ref name="get" scoped="" ref="0x7f426b079db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b078020"/>
        <function-ref name="set" scoped="" ref="0x7f426b0781b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426b078340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426b0766d0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426b0766d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b076a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b076be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b076d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b075020"/>
        <function-ref name="get" scoped="" ref="0x7f426b0751b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b075340"/>
        <function-ref name="set" scoped="" ref="0x7f426b0754d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426b075660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426b0739b0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426b0739b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b073d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b06a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b06a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b06a340"/>
        <function-ref name="get" scoped="" ref="0x7f426b06a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b06a660"/>
        <function-ref name="set" scoped="" ref="0x7f426b06a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426b06a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426b068e20" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426b068e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b0671c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b067350"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b0674e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b067670"/>
        <function-ref name="get" scoped="" ref="0x7f426b067800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b067990"/>
        <function-ref name="set" scoped="" ref="0x7f426b067b20"/>
        <function-ref name="clr" scoped="" ref="0x7f426b067cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426b0640a0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426b0640a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b064420"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b0645b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b064740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b0648d0"/>
        <function-ref name="get" scoped="" ref="0x7f426b064a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b064bf0"/>
        <function-ref name="set" scoped="" ref="0x7f426b064d80"/>
        <function-ref name="clr" scoped="" ref="0x7f426b063020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426b0613f0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426b0613f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b061770"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b061900"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b061a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b061c20"/>
        <function-ref name="get" scoped="" ref="0x7f426b061db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b060020"/>
        <function-ref name="set" scoped="" ref="0x7f426b0601b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426b060340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f426c492da0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f426c492da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c491180"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c491310"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4914a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c491630"/>
        <function-ref name="get" scoped="" ref="0x7f426c4917c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c491950"/>
        <function-ref name="set" scoped="" ref="0x7f426c491ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c491c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f426c48e440" loc="49:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f426c48e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c48e7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c48e950"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c48eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c48ec70"/>
        <function-ref name="get" scoped="" ref="0x7f426c48ee00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c48d020"/>
        <function-ref name="set" scoped="" ref="0x7f426c48d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c48d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f426c495a20" loc="44:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f426c495a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c495da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c493020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4931b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c493340"/>
        <function-ref name="get" scoped="" ref="0x7f426c4934d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c493660"/>
        <function-ref name="set" scoped="" ref="0x7f426c4937f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c493980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f426c490020" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f426c490020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4903a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c490530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4906c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c490850"/>
        <function-ref name="get" scoped="" ref="0x7f426c4909e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c490b70"/>
        <function-ref name="set" scoped="" ref="0x7f426c490d00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c48f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f426c48d5d0" loc="50:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f426c48d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c48d950"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c48dae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c48dc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c48de00"/>
        <function-ref name="get" scoped="" ref="0x7f426c48c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c48c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f426c48c340"/>
        <function-ref name="clr" scoped="" ref="0x7f426c48c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f426c493c10" loc="45:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f426c493c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c492020"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4921b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c492340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4924d0"/>
        <function-ref name="get" scoped="" ref="0x7f426c492660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4927f0"/>
        <function-ref name="set" scoped="" ref="0x7f426c492980"/>
        <function-ref name="clr" scoped="" ref="0x7f426c492b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f426c48f2b0" loc="48:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f426c48f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c48f630"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c48f7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c48f950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c48fae0"/>
        <function-ref name="get" scoped="" ref="0x7f426c48fc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c48fe00"/>
        <function-ref name="set" scoped="" ref="0x7f426c48e020"/>
        <function-ref name="clr" scoped="" ref="0x7f426c48e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f426c48c760" loc="51:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f426c48c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c48cae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c48cc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c48ce00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c48b020"/>
        <function-ref name="get" scoped="" ref="0x7f426c48b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c48b340"/>
        <function-ref name="set" scoped="" ref="0x7f426c48b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c48b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426b00c060" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426b00c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b00c3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b00c570"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b00c700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b00c890"/>
        <function-ref name="get" scoped="" ref="0x7f426b00ca20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b00cbb0"/>
        <function-ref name="set" scoped="" ref="0x7f426b00cd40"/>
        <function-ref name="clr" scoped="" ref="0x7f426b00b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426b0093f0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426b0093f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b009770"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b009900"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b009a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b009c20"/>
        <function-ref name="get" scoped="" ref="0x7f426b009db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b008020"/>
        <function-ref name="set" scoped="" ref="0x7f426b0081b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426b008340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426b0066d0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426b0066d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b006a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b006be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b006d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b005020"/>
        <function-ref name="get" scoped="" ref="0x7f426b0051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b005340"/>
        <function-ref name="set" scoped="" ref="0x7f426b0054d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426b005660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426b0039b0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426b0039b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b003d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b002020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b0021b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b002340"/>
        <function-ref name="get" scoped="" ref="0x7f426b0024d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b002660"/>
        <function-ref name="set" scoped="" ref="0x7f426b0027f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426b002980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426b000e20" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426b000e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426afff1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426afff350"/>
        <function-ref name="toggle" scoped="" ref="0x7f426afff4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426afff670"/>
        <function-ref name="get" scoped="" ref="0x7f426afff800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426afff990"/>
        <function-ref name="set" scoped="" ref="0x7f426afffb20"/>
        <function-ref name="clr" scoped="" ref="0x7f426afffcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426affc0a0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426affc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426affc420"/>
        <function-ref name="isInput" scoped="" ref="0x7f426affc5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426affc740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426affc8d0"/>
        <function-ref name="get" scoped="" ref="0x7f426affca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426affcbf0"/>
        <function-ref name="set" scoped="" ref="0x7f426affcd80"/>
        <function-ref name="clr" scoped="" ref="0x7f426affb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426aff93f0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426aff93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426aff9770"/>
        <function-ref name="isInput" scoped="" ref="0x7f426aff9900"/>
        <function-ref name="toggle" scoped="" ref="0x7f426aff9a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426aff9c20"/>
        <function-ref name="get" scoped="" ref="0x7f426aff9db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426aff8020"/>
        <function-ref name="set" scoped="" ref="0x7f426aff81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426aff8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426aff66d0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426aff66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426aff6a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f426aff6be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426aff6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426aff5020"/>
        <function-ref name="get" scoped="" ref="0x7f426aff51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426aff5340"/>
        <function-ref name="set" scoped="" ref="0x7f426aff54d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426aff5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f426c482020" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f426c482020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4823a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c482530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4826c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c482850"/>
        <function-ref name="get" scoped="" ref="0x7f426c4829e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c482b70"/>
        <function-ref name="set" scoped="" ref="0x7f426c482d00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c481020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f426c47f5d0" loc="49:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f426c47f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c47f950"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c47fae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c47fc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c47fe00"/>
        <function-ref name="get" scoped="" ref="0x7f426c47e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c47e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f426c47e340"/>
        <function-ref name="clr" scoped="" ref="0x7f426c47e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f426c485d30" loc="44:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f426c485d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4840e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c484270"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c484400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c484590"/>
        <function-ref name="get" scoped="" ref="0x7f426c484720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4848b0"/>
        <function-ref name="set" scoped="" ref="0x7f426c484a40"/>
        <function-ref name="clr" scoped="" ref="0x7f426c484bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f426c4812b0" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f426c4812b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c481630"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4817c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c481950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c481ae0"/>
        <function-ref name="get" scoped="" ref="0x7f426c481c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c481e00"/>
        <function-ref name="set" scoped="" ref="0x7f426c480020"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4801b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f426c47e760" loc="50:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f426c47e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c47eae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c47ec70"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c47ee00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c47d020"/>
        <function-ref name="get" scoped="" ref="0x7f426c47d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c47d340"/>
        <function-ref name="set" scoped="" ref="0x7f426c47d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c47d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f426c484e60" loc="45:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f426c484e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c483210"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4833a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c483530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4836c0"/>
        <function-ref name="get" scoped="" ref="0x7f426c483850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4839e0"/>
        <function-ref name="set" scoped="" ref="0x7f426c483b70"/>
        <function-ref name="clr" scoped="" ref="0x7f426c483d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f426c480440" loc="48:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f426c480440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4807c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c480950"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c480ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c480c70"/>
        <function-ref name="get" scoped="" ref="0x7f426c480e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c47f020"/>
        <function-ref name="set" scoped="" ref="0x7f426c47f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c47f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f426c47d8f0" loc="51:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f426c47d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c47dc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c47de00"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c47c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c47c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f426c47c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c47c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f426c47c660"/>
        <function-ref name="clr" scoped="" ref="0x7f426c47c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426afa2a60" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426afa2a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426afa2de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426afa0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426afa01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426afa0340"/>
        <function-ref name="get" scoped="" ref="0x7f426afa04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426afa0660"/>
        <function-ref name="set" scoped="" ref="0x7f426afa07f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426afa0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426af9ee20" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426af9ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426af9d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426af9d350"/>
        <function-ref name="toggle" scoped="" ref="0x7f426af9d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426af9d670"/>
        <function-ref name="get" scoped="" ref="0x7f426af9d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426af9d990"/>
        <function-ref name="set" scoped="" ref="0x7f426af9db20"/>
        <function-ref name="clr" scoped="" ref="0x7f426af9dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426af9a0a0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426af9a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426af9a420"/>
        <function-ref name="isInput" scoped="" ref="0x7f426af9a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426af9a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426af9a8d0"/>
        <function-ref name="get" scoped="" ref="0x7f426af9aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426af9abf0"/>
        <function-ref name="set" scoped="" ref="0x7f426af9ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f426af99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426af973f0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426af973f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426af97770"/>
        <function-ref name="isInput" scoped="" ref="0x7f426af97900"/>
        <function-ref name="toggle" scoped="" ref="0x7f426af97a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426af97c20"/>
        <function-ref name="get" scoped="" ref="0x7f426af97db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426af96020"/>
        <function-ref name="set" scoped="" ref="0x7f426af961b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426af96340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426af946d0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426af946d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426af94a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f426af94be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426af94d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426af93020"/>
        <function-ref name="get" scoped="" ref="0x7f426af931b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426af93340"/>
        <function-ref name="set" scoped="" ref="0x7f426af934d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426af93660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426af919b0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426af919b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426af91d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f426af90020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426af901b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426af90340"/>
        <function-ref name="get" scoped="" ref="0x7f426af904d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426af90660"/>
        <function-ref name="set" scoped="" ref="0x7f426af907f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426af90980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426af8ee20" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426af8ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426af8d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426af8d350"/>
        <function-ref name="toggle" scoped="" ref="0x7f426af8d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426af8d670"/>
        <function-ref name="get" scoped="" ref="0x7f426af8d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426af8d990"/>
        <function-ref name="set" scoped="" ref="0x7f426af8db20"/>
        <function-ref name="clr" scoped="" ref="0x7f426af8dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426af8a0a0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426af8a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426af8a420"/>
        <function-ref name="isInput" scoped="" ref="0x7f426af8a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426af8a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426af8a8d0"/>
        <function-ref name="get" scoped="" ref="0x7f426af8aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426af8abf0"/>
        <function-ref name="set" scoped="" ref="0x7f426af8ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f426af89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f426c473440" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f426c473440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4737c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c473950"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c473ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c473c70"/>
        <function-ref name="get" scoped="" ref="0x7f426c473e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c472020"/>
        <function-ref name="set" scoped="" ref="0x7f426c4721b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c472340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f426c4708f0" loc="49:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f426c4708f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c470c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c470e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c46f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c46f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f426c46f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c46f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f426c46f660"/>
        <function-ref name="clr" scoped="" ref="0x7f426c46f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f426c475020" loc="44:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f426c475020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4753a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c475530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4756c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c475850"/>
        <function-ref name="get" scoped="" ref="0x7f426c4759e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c475b70"/>
        <function-ref name="set" scoped="" ref="0x7f426c475d00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c474020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f426c4725d0" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f426c4725d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c472950"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c472ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c472c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c472e00"/>
        <function-ref name="get" scoped="" ref="0x7f426c471020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4711b0"/>
        <function-ref name="set" scoped="" ref="0x7f426c471340"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4714d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f426c46fa80" loc="50:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f426c46fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c46fe00"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c46d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c46d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c46d340"/>
        <function-ref name="get" scoped="" ref="0x7f426c46d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c46d660"/>
        <function-ref name="set" scoped="" ref="0x7f426c46d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c46d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f426c4742b0" loc="45:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f426c4742b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c474630"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4747c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c474950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c474ae0"/>
        <function-ref name="get" scoped="" ref="0x7f426c474c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c474e00"/>
        <function-ref name="set" scoped="" ref="0x7f426c473020"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4731b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f426c471760" loc="48:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f426c471760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c471ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c471c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c471e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c470020"/>
        <function-ref name="get" scoped="" ref="0x7f426c4701b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c470340"/>
        <function-ref name="set" scoped="" ref="0x7f426c4704d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c470660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f426c46dc10" loc="51:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f426c46dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c46c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c46c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c46c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c46c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f426c46c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c46c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f426c46c980"/>
        <function-ref name="clr" scoped="" ref="0x7f426c46cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426af37c90" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426af37c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426af350a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426af35230"/>
        <function-ref name="toggle" scoped="" ref="0x7f426af353c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426af35550"/>
        <function-ref name="get" scoped="" ref="0x7f426af356e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426af35870"/>
        <function-ref name="set" scoped="" ref="0x7f426af35a00"/>
        <function-ref name="clr" scoped="" ref="0x7f426af35b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426af33e20" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426af33e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426af321c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426af32350"/>
        <function-ref name="toggle" scoped="" ref="0x7f426af324e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426af32670"/>
        <function-ref name="get" scoped="" ref="0x7f426af32800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426af32990"/>
        <function-ref name="set" scoped="" ref="0x7f426af32b20"/>
        <function-ref name="clr" scoped="" ref="0x7f426af32cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426af2f0a0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426af2f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426af2f420"/>
        <function-ref name="isInput" scoped="" ref="0x7f426af2f5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426af2f740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426af2f8d0"/>
        <function-ref name="get" scoped="" ref="0x7f426af2fa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426af2fbf0"/>
        <function-ref name="set" scoped="" ref="0x7f426af2fd80"/>
        <function-ref name="clr" scoped="" ref="0x7f426af2e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426af2c3f0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426af2c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426af2c770"/>
        <function-ref name="isInput" scoped="" ref="0x7f426af2c900"/>
        <function-ref name="toggle" scoped="" ref="0x7f426af2ca90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426af2cc20"/>
        <function-ref name="get" scoped="" ref="0x7f426af2cdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426af2b020"/>
        <function-ref name="set" scoped="" ref="0x7f426af2b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426af2b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426af296d0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426af296d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426af29a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f426af29be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426af29d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426af28020"/>
        <function-ref name="get" scoped="" ref="0x7f426af281b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426af28340"/>
        <function-ref name="set" scoped="" ref="0x7f426af284d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426af28660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426af269b0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426af269b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426af26d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f426af25020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426af251b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426af25340"/>
        <function-ref name="get" scoped="" ref="0x7f426af254d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426af25660"/>
        <function-ref name="set" scoped="" ref="0x7f426af257f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426af25980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426af23e20" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426af23e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426af221c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426af22350"/>
        <function-ref name="toggle" scoped="" ref="0x7f426af224e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426af22670"/>
        <function-ref name="get" scoped="" ref="0x7f426af22800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426af22990"/>
        <function-ref name="set" scoped="" ref="0x7f426af22b20"/>
        <function-ref name="clr" scoped="" ref="0x7f426af22cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426af1f0a0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426af1f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426af1f420"/>
        <function-ref name="isInput" scoped="" ref="0x7f426af1f5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426af1f740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426af1f8d0"/>
        <function-ref name="get" scoped="" ref="0x7f426af1fa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426af1fbf0"/>
        <function-ref name="set" scoped="" ref="0x7f426af1fd80"/>
        <function-ref name="clr" scoped="" ref="0x7f426af1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f426c464760" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f426c464760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c464ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c464c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c464e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c463020"/>
        <function-ref name="get" scoped="" ref="0x7f426c4631b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c463340"/>
        <function-ref name="set" scoped="" ref="0x7f426c4634d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c463660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f426c460c10" loc="49:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f426c460c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c45f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c45f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c45f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c45f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f426c45f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c45f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f426c45f980"/>
        <function-ref name="clr" scoped="" ref="0x7f426c45fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f426c4663f0" loc="44:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f426c4663f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c466770"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c466900"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c466a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c466c20"/>
        <function-ref name="get" scoped="" ref="0x7f426c466db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c465020"/>
        <function-ref name="set" scoped="" ref="0x7f426c4651b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c465340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f426c4638f0" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f426c4638f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c463c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c463e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c461020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4611b0"/>
        <function-ref name="get" scoped="" ref="0x7f426c461340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4614d0"/>
        <function-ref name="set" scoped="" ref="0x7f426c461660"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4617f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f426c45fda0" loc="50:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f426c45fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c45e180"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c45e310"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c45e4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c45e630"/>
        <function-ref name="get" scoped="" ref="0x7f426c45e7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c45e950"/>
        <function-ref name="set" scoped="" ref="0x7f426c45eae0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c45ec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f426c4655d0" loc="45:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f426c4655d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c465950"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c465ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c465c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c465e00"/>
        <function-ref name="get" scoped="" ref="0x7f426c464020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4641b0"/>
        <function-ref name="set" scoped="" ref="0x7f426c464340"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4644d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f426c461a80" loc="48:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f426c461a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c461e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c460020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4601b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c460340"/>
        <function-ref name="get" scoped="" ref="0x7f426c4604d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c460660"/>
        <function-ref name="set" scoped="" ref="0x7f426c4607f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c460980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f426c45d020" loc="51:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f426c45d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c45d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c45d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c45d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c45d850"/>
        <function-ref name="get" scoped="" ref="0x7f426c45d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c45db70"/>
        <function-ref name="set" scoped="" ref="0x7f426c45dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c45c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426aeccc90" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426aeccc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426aecb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426aecb230"/>
        <function-ref name="toggle" scoped="" ref="0x7f426aecb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426aecb550"/>
        <function-ref name="get" scoped="" ref="0x7f426aecb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426aecb870"/>
        <function-ref name="set" scoped="" ref="0x7f426aecba00"/>
        <function-ref name="clr" scoped="" ref="0x7f426aecbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426aec9e20" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426aec9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426aec71c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426aec7350"/>
        <function-ref name="toggle" scoped="" ref="0x7f426aec74e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426aec7670"/>
        <function-ref name="get" scoped="" ref="0x7f426aec7800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426aec7990"/>
        <function-ref name="set" scoped="" ref="0x7f426aec7b20"/>
        <function-ref name="clr" scoped="" ref="0x7f426aec7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426aec40a0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426aec40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426aec4420"/>
        <function-ref name="isInput" scoped="" ref="0x7f426aec45b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426aec4740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426aec48d0"/>
        <function-ref name="get" scoped="" ref="0x7f426aec4a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426aec4bf0"/>
        <function-ref name="set" scoped="" ref="0x7f426aec4d80"/>
        <function-ref name="clr" scoped="" ref="0x7f426aec3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426aec13f0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426aec13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426aec1770"/>
        <function-ref name="isInput" scoped="" ref="0x7f426aec1900"/>
        <function-ref name="toggle" scoped="" ref="0x7f426aec1a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426aec1c20"/>
        <function-ref name="get" scoped="" ref="0x7f426aec1db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426aec0020"/>
        <function-ref name="set" scoped="" ref="0x7f426aec01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426aec0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426aebe6d0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426aebe6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426aebea50"/>
        <function-ref name="isInput" scoped="" ref="0x7f426aebebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426aebed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426aebd020"/>
        <function-ref name="get" scoped="" ref="0x7f426aebd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426aebd340"/>
        <function-ref name="set" scoped="" ref="0x7f426aebd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426aebd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426aebb9b0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426aebb9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426aebbd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f426aeba020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426aeba1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426aeba340"/>
        <function-ref name="get" scoped="" ref="0x7f426aeba4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426aeba660"/>
        <function-ref name="set" scoped="" ref="0x7f426aeba7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426aeba980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426aeb8e20" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426aeb8e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426aeb71c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426aeb7350"/>
        <function-ref name="toggle" scoped="" ref="0x7f426aeb74e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426aeb7670"/>
        <function-ref name="get" scoped="" ref="0x7f426aeb7800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426aeb7990"/>
        <function-ref name="set" scoped="" ref="0x7f426aeb7b20"/>
        <function-ref name="clr" scoped="" ref="0x7f426aeb7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426aeb40a0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426aeb40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426aeb4420"/>
        <function-ref name="isInput" scoped="" ref="0x7f426aeb45b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426aeb4740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426aeb48d0"/>
        <function-ref name="get" scoped="" ref="0x7f426aeb4a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426aeb4bf0"/>
        <function-ref name="set" scoped="" ref="0x7f426aeb4d80"/>
        <function-ref name="clr" scoped="" ref="0x7f426aeb3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f426c454760" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f426c454760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c454ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c454c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c454e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c453020"/>
        <function-ref name="get" scoped="" ref="0x7f426c4531b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c453340"/>
        <function-ref name="set" scoped="" ref="0x7f426c4534d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c453660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f426c451c10" loc="49:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f426c451c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c450020"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c4501b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c450340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4504d0"/>
        <function-ref name="get" scoped="" ref="0x7f426c450660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4507f0"/>
        <function-ref name="set" scoped="" ref="0x7f426c450980"/>
        <function-ref name="clr" scoped="" ref="0x7f426c450b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f426c457460" loc="44:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f426c457460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4577e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c457970"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c457b00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c457c90"/>
        <function-ref name="get" scoped="" ref="0x7f426c457e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c455020"/>
        <function-ref name="set" scoped="" ref="0x7f426c4551b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c455340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f426c4538f0" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f426c4538f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c453c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c453e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c452020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c4521b0"/>
        <function-ref name="get" scoped="" ref="0x7f426c452340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4524d0"/>
        <function-ref name="set" scoped="" ref="0x7f426c452660"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4527f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f426c450da0" loc="50:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f426c450da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c44f180"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c44f310"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c44f4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c44f630"/>
        <function-ref name="get" scoped="" ref="0x7f426c44f7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c44f950"/>
        <function-ref name="set" scoped="" ref="0x7f426c44fae0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c44fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f426c4555d0" loc="45:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f426c4555d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c455950"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c455ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c455c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c455e00"/>
        <function-ref name="get" scoped="" ref="0x7f426c454020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c4541b0"/>
        <function-ref name="set" scoped="" ref="0x7f426c454340"/>
        <function-ref name="clr" scoped="" ref="0x7f426c4544d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f426c452a80" loc="48:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f426c452a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c452e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c451020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4511b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c451340"/>
        <function-ref name="get" scoped="" ref="0x7f426c4514d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c451660"/>
        <function-ref name="set" scoped="" ref="0x7f426c4517f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c451980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f426c44e020" loc="51:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f426c44e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c44e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c44e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c44e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c44e850"/>
        <function-ref name="get" scoped="" ref="0x7f426c44e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c44eb70"/>
        <function-ref name="set" scoped="" ref="0x7f426c44ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c44d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426ae61c90" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426ae61c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426ae600a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426ae60230"/>
        <function-ref name="toggle" scoped="" ref="0x7f426ae603c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426ae60550"/>
        <function-ref name="get" scoped="" ref="0x7f426ae606e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426ae60870"/>
        <function-ref name="set" scoped="" ref="0x7f426ae60a00"/>
        <function-ref name="clr" scoped="" ref="0x7f426ae60b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426ae5ee20" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426ae5ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426ae5c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426ae5c350"/>
        <function-ref name="toggle" scoped="" ref="0x7f426ae5c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426ae5c670"/>
        <function-ref name="get" scoped="" ref="0x7f426ae5c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426ae5c990"/>
        <function-ref name="set" scoped="" ref="0x7f426ae5cb20"/>
        <function-ref name="clr" scoped="" ref="0x7f426ae5ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426ae590a0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426ae590a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426ae59420"/>
        <function-ref name="isInput" scoped="" ref="0x7f426ae595b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426ae59740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426ae598d0"/>
        <function-ref name="get" scoped="" ref="0x7f426ae59a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426ae59bf0"/>
        <function-ref name="set" scoped="" ref="0x7f426ae59d80"/>
        <function-ref name="clr" scoped="" ref="0x7f426ae58020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426ae563f0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426ae563f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426ae56770"/>
        <function-ref name="isInput" scoped="" ref="0x7f426ae56900"/>
        <function-ref name="toggle" scoped="" ref="0x7f426ae56a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426ae56c20"/>
        <function-ref name="get" scoped="" ref="0x7f426ae56db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426ae55020"/>
        <function-ref name="set" scoped="" ref="0x7f426ae551b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426ae55340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426ae536d0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426ae536d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426ae53a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f426ae53be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426ae53d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426ae52020"/>
        <function-ref name="get" scoped="" ref="0x7f426ae521b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426ae52340"/>
        <function-ref name="set" scoped="" ref="0x7f426ae524d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426ae52660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426ae509b0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426ae509b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426ae50d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f426ae4f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426ae4f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426ae4f340"/>
        <function-ref name="get" scoped="" ref="0x7f426ae4f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426ae4f660"/>
        <function-ref name="set" scoped="" ref="0x7f426ae4f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426ae4f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426ae4de20" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426ae4de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426ae4c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426ae4c350"/>
        <function-ref name="toggle" scoped="" ref="0x7f426ae4c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426ae4c670"/>
        <function-ref name="get" scoped="" ref="0x7f426ae4c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426ae4c990"/>
        <function-ref name="set" scoped="" ref="0x7f426ae4cb20"/>
        <function-ref name="clr" scoped="" ref="0x7f426ae4ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426ae490a0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426ae490a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426ae49420"/>
        <function-ref name="isInput" scoped="" ref="0x7f426ae495b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426ae49740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426ae498d0"/>
        <function-ref name="get" scoped="" ref="0x7f426ae49a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426ae49bf0"/>
        <function-ref name="set" scoped="" ref="0x7f426ae49d80"/>
        <function-ref name="clr" scoped="" ref="0x7f426ae48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426c446460" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426c446460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4467e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c446970"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c446b00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c446c90"/>
        <function-ref name="get" scoped="" ref="0x7f426c446e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c430020"/>
        <function-ref name="set" scoped="" ref="0x7f426c4301b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c430340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426c42ca80" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426c42ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c42ce00"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c42b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c42b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c42b340"/>
        <function-ref name="get" scoped="" ref="0x7f426c42b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c42b660"/>
        <function-ref name="set" scoped="" ref="0x7f426c42b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c42b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426c4263f0" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426c4263f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c426770"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c426900"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c426a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c426c20"/>
        <function-ref name="get" scoped="" ref="0x7f426c426db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c425020"/>
        <function-ref name="set" scoped="" ref="0x7f426c4251b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c425340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426c422a80" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426c422a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c422e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c421020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4211b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c421340"/>
        <function-ref name="get" scoped="" ref="0x7f426c4214d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c421660"/>
        <function-ref name="set" scoped="" ref="0x7f426c4217f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c421980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426c41c3f0" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426c41c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c41c770"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c41c900"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c41ca90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c41cc20"/>
        <function-ref name="get" scoped="" ref="0x7f426c41cdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c41b020"/>
        <function-ref name="set" scoped="" ref="0x7f426c41b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c41b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426c417a80" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426c417a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c417e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c416020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4161b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c416340"/>
        <function-ref name="get" scoped="" ref="0x7f426c4164d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c416660"/>
        <function-ref name="set" scoped="" ref="0x7f426c4167f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c416980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426c412460" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426c412460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4127e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c412970"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c412b00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c412c90"/>
        <function-ref name="get" scoped="" ref="0x7f426c412e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c411020"/>
        <function-ref name="set" scoped="" ref="0x7f426c4111b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c411340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426c40da80" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426c40da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c40de00"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c40c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c40c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c40c340"/>
        <function-ref name="get" scoped="" ref="0x7f426c40c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c40c660"/>
        <function-ref name="set" scoped="" ref="0x7f426c40c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c40c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426c407120" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426c407120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c4074a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c407630"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c4077c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c407950"/>
        <function-ref name="get" scoped="" ref="0x7f426c407ae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c407c70"/>
        <function-ref name="set" scoped="" ref="0x7f426c407e00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c406020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426c4036d0" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426c4036d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c403a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c403be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c403d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c402020"/>
        <function-ref name="get" scoped="" ref="0x7f426c4021b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c402340"/>
        <function-ref name="set" scoped="" ref="0x7f426c4024d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c402660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426c3fec90" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426c3fec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c3fd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c3fd230"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c3fd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c3fd550"/>
        <function-ref name="get" scoped="" ref="0x7f426c3fd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c3fd870"/>
        <function-ref name="set" scoped="" ref="0x7f426c3fda00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c3fdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426c3f8120" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426c3f8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c3f84a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c3f8630"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c3f87c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c3f8950"/>
        <function-ref name="get" scoped="" ref="0x7f426c3f8ae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c3f8c70"/>
        <function-ref name="set" scoped="" ref="0x7f426c3f8e00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c3f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f426c3f46d0" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f426c3f46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c3f4a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c3f4be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c3f4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c3f3020"/>
        <function-ref name="get" scoped="" ref="0x7f426c3f31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c3f3340"/>
        <function-ref name="set" scoped="" ref="0x7f426c3f34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c3f3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426c3b8910" loc="27:/home/punit/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426c3b8910"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f426c7219e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f426c7219e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426c3b8c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f426c3b7020" loc="28:/home/punit/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f426c3b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f426c3b73a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f426c3b7530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f426c3b76c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f426c3b7850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f426c3b79e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f426c395210" loc="60:/home/punit/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f426c395210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426c395590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f426c551a00" loc="57:/home/punit/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f426c551a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f426c551d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f426c396ae0" loc="59:/home/punit/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f426c396ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426c396e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f426c3960c0" loc="58:/home/punit/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f426c3960c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426c396440"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f426c3965d0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f426c396760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f426c712e10" loc="48:/home/punit/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f426c712e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426c71e1c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f426c71e350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f426c71b0d0" loc="47:/home/punit/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f426c71b0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426c71b450"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f426c71b5e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f426c71b770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f426c654020" loc="56:/home/punit/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f426c654020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426c6543a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f426c654530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f426c6515d0" loc="57:/home/punit/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f426c6515d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f426c651950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f426c6550c0" loc="55:/home/punit/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f426c6550c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426c655440"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f426c6555d0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f426c655760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f426c632750" loc="54:/home/punit/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f426c632750"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f426c632ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f426c6452d0" loc="50:/home/punit/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f426c6452d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f426c645650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f426c6347d0" loc="51:/home/punit/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f426c6347d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f426c634b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f426c556d00" loc="55:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f426c556d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f426c38a0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f426c38a230"/>
        <function-ref name="start" scoped="" ref="0x7f426c38a3c0"/>
        <function-ref name="stop" scoped="" ref="0x7f426c38a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f426c38ad20" loc="57:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f426c38ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426c3890e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426c389270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426c389400"/>
        <function-ref name="cancel" scoped="" ref="0x7f426c389590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426c389720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f426c388c00" loc="59:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f426c388c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426c387020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f426c37c5f0" loc="61:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f426c37c5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426c37c970"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f426c37cb00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426c37cc90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426c37ce20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f426c386020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f426c35fcd0" loc="64:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f426c35fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f426c695d50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f426c3652e0"/>
        <function-ref name="clear" scoped="" ref="0x7f426c365a10"/>
        <function-ref name="isValid" scoped="" ref="0x7f426c37db60"/>
        <function-ref name="set" scoped="" ref="0x7f426c35c170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f426c351b20" loc="66:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f426c351b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f426c357020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f426c3571b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f426c357340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f426c3574d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f426c388020" loc="58:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f426c388020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426c3883a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f426c3669f0" loc="63:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f426c3669f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f426c366d70"/>
        <function-ref name="noAck" scoped="" ref="0x7f426c36b020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f426c36b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f426c36c4e0" loc="62:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f426c36c4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f426c36c860"/>
        <function-ref name="source" scoped="" ref="0x7f426c36c9f0"/>
        <function-ref name="address" scoped="" ref="0x7f426c36cb80"/>
        <function-ref name="destination" scoped="" ref="0x7f426c36cd10"/>
        <function-ref name="setSource" scoped="" ref="0x7f426c385020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f426c3851b0"/>
        <function-ref name="type" scoped="" ref="0x7f426c385340"/>
        <function-ref name="setType" scoped="" ref="0x7f426c3854d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f426c385660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f426c3857f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f426c385980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f426c35cdc0" loc="65:/home/punit/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f426c35cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f426c35a3f0"/>
        <function-ref name="clear" scoped="" ref="0x7f426c35ab20"/>
        <function-ref name="isValid" scoped="" ref="0x7f426c35bca0"/>
        <function-ref name="set" scoped="" ref="0x7f426c3582a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f426c345880" loc="55:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f426c345880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f426c345c00"/>
        <function-ref name="stopDone" scoped="" ref="0x7f426c345d90"/>
        <function-ref name="start" scoped="" ref="0x7f426c344020"/>
        <function-ref name="stop" scoped="" ref="0x7f426c3441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f426c32bd40" loc="64:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f426c32bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f426c3310e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f426c331270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f426c331400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f426c331590"/>
        <function-ref name="setCca" scoped="" ref="0x7f426c331720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f426c3318b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f426c31dd20" loc="67:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f426c31dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f426c3271c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f426c33f760" loc="60:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f426c33f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426c33fae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f426c33fc70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426c33fe00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426c33e020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f426c33e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f426c344980" loc="56:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f426c344980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426c344d00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426c343020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426c3431b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f426c343340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426c3434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f426c341900" loc="58:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f426c341900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426c341c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f426c336970" loc="61:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f426c336970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f426c336cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f426c336e80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f426c33d030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f426c33d1c0"/>
        <function-ref name="getPower" scoped="" ref="0x7f426c33d350"/>
        <function-ref name="getLqi" scoped="" ref="0x7f426c33d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f426c331bb0" loc="65:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f426c331bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f426c32a020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f426c32a1b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f426c32a340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f426c32a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f426c343cb0" loc="57:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f426c343cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426c3410a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f426c33d810" loc="62:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f426c33d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f426c33db90"/>
        <function-ref name="noAck" scoped="" ref="0x7f426c33dd20"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f426c33c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f426c329020" loc="66:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f426c329020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f426c3293a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f426c329530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f426c3296c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f426c329850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f426c3299e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f426c340020" loc="59:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f426c340020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f426c3403a0"/>
        <function-ref name="source" scoped="" ref="0x7f426c340530"/>
        <function-ref name="address" scoped="" ref="0x7f426c3406c0"/>
        <function-ref name="destination" scoped="" ref="0x7f426c340850"/>
        <function-ref name="setSource" scoped="" ref="0x7f426c3409e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f426c340b70"/>
        <function-ref name="type" scoped="" ref="0x7f426c340d00"/>
        <function-ref name="setType" scoped="" ref="0x7f426c33f020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f426c33f1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f426c33f340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f426c33f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f426c332a80" loc="63:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f426c332a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f426c332e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f426c31fb80" loc="43:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f426c31fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f426c31a020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f426c31a1b0"/>
        <function-ref name="start" scoped="" ref="0x7f426c31a340"/>
        <function-ref name="stop" scoped="" ref="0x7f426c31a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f426c3069d0" loc="55:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f426c3069d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f426c306d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f426c305b70" loc="57:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f426c305b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f426c304020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f426c3041b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f426c304340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f426c3044d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f426c304660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f426c307020" loc="53:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f426c307020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f426c3073a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f426c307530"/>
        <function-ref name="getRssi" scoped="" ref="0x7f426c3076c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f426c307850"/>
        <function-ref name="getPower" scoped="" ref="0x7f426c3079e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f426c307b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f426c312990" loc="50:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7f426c312990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426c312d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426c30a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426c30a1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f426c30a340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426c30a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f426c305080" loc="56:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f426c305080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f426c305400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f426c305590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f426c305720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f426c3058b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f426c313500" loc="47:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f426c313500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426c313880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f426c306020" loc="54:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f426c306020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f426c3063a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f426c306530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f426c3066c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426c318210" loc="45:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426c318210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426c318590"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426c318720"/>
        <function-ref name="request" scoped="" ref="0x7f426c3188b0"/>
        <function-ref name="granted" scoped="" ref="0x7f426c318a40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426c318bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f426c3096f0" loc="46:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f426c3096f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426c309a70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426c309c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426c309d90"/>
        <function-ref name="cancel" scoped="" ref="0x7f426c313020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426c3131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f426c313bc0" loc="48:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7f426c313bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426c312020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f426c3121b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426c312340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426c3124d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f426c312660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f426c30a840" loc="51:/home/punit/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7f426c30a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426c30abc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f426c301390" loc="44:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f426c301390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f426c301710"/>
        <function-ref name="stopDone" scoped="" ref="0x7f426c3018a0"/>
        <function-ref name="start" scoped="" ref="0x7f426c301a30"/>
        <function-ref name="stop" scoped="" ref="0x7f426c301bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f426c2ff330" loc="47:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f426c2ff330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f426c2ff6b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f426c2ff840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f426c2ff9d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f426c2ffb60"/>
        <function-ref name="setCca" scoped="" ref="0x7f426c2ffcf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f426c2ffe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f426c301e80" loc="45:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f426c301e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426c300220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426c3003b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426c300540"/>
        <function-ref name="cancel" scoped="" ref="0x7f426c3006d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426c300860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f426c300b40" loc="46:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f426c300b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426c2ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f426c2fb2d0" loc="39:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f426c2fb2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f426c2fb650"/>
        <function-ref name="stopDone" scoped="" ref="0x7f426c2fb7e0"/>
        <function-ref name="start" scoped="" ref="0x7f426c2fb970"/>
        <function-ref name="stop" scoped="" ref="0x7f426c2fbb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f426c2faad0" loc="41:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f426c2faad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f426c2fae50"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f426c2f9020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f426c2f91b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f426c2f9340"/>
        <function-ref name="setCca" scoped="" ref="0x7f426c2f94d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f426c2f9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f426c2ef570" loc="47:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7f426c2ef570"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f426c2ef8f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f426c2efa80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f426c2efc10"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f426c2efda0"/>
        <function-ref name="setCca" scoped="" ref="0x7f426c2ec020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f426c2ec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f426c2e2970" loc="50:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f426c2e2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f426c2e2cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f426c2e2e80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f426c2e1030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f426c2e11c0"/>
        <function-ref name="getPower" scoped="" ref="0x7f426c2e1350"/>
        <function-ref name="getLqi" scoped="" ref="0x7f426c2e14e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f426c2e6770" loc="46:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f426c2e6770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426c2e6af0"/>
        <function-ref name="cancel" scoped="" ref="0x7f426c2e6c80"/>
        <function-ref name="modify" scoped="" ref="0x7f426c2e6e10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426c2ef020"/>
        <function-ref name="resend" scoped="" ref="0x7f426c2ef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f426c2fbdc0" loc="40:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f426c2fbdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426c2fa180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426c2fa310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426c2fa4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f426c2fa630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426c2fa7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f426c2e39d0" loc="48:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f426c2e39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f426c2e3d50"/>
        <function-ref name="rand32" scoped="" ref="0x7f426c2e5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f426c2ed9d0" loc="45:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f426c2ed9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f426c2edd50"/>
        <function-ref name="stop" scoped="" ref="0x7f426c2f0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f426c2e0020" loc="51:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426c2e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f426c2e03a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f426c2e0530"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f426c2e06c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f426c2f1e30" loc="44:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7f426c2f1e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f426c2f71e0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f426c2f7370"/>
        <function-ref name="rxOn" scoped="" ref="0x7f426c2f7500"/>
        <function-ref name="startVReg" scoped="" ref="0x7f426c2f7690"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f426c2f7820"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f426c2f79b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f426c2f7b40"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f426c2f7cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f426c2e52e0" loc="49:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f426c2e52e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f426c2e5660"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f426c2e57f0"/>
        <function-ref name="led1On" scoped="" ref="0x7f426c2e5980"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f426c2e5b10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f426c2e5ca0"/>
        <function-ref name="get" scoped="" ref="0x7f426c2e5e30"/>
        <function-ref name="led1Off" scoped="" ref="0x7f426c2e2020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f426c2e2660"/>
        <function-ref name="set" scoped="" ref="0x7f426c2e21b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f426c2e2340"/>
        <function-ref name="led2On" scoped="" ref="0x7f426c2e24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f426c2f9950" loc="43:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426c2f9950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426c2f9cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426c2f9e60"/>
        <function-ref name="request" scoped="" ref="0x7f426c2f8020"/>
        <function-ref name="granted" scoped="" ref="0x7f426c2f81b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426c2f8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f426c2d5720" loc="52:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x7f426c2d5720"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f426c2d5ba0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f426c2d5d30"/>
        <function-ref name="isState" scoped="" ref="0x7f426c2df020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f426c2df1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f426c2df340"/>
        <function-ref name="forceState" scoped="" ref="0x7f426c2df4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f426c2d12a0" loc="76:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x7f426c2d12a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426c2d1620"/>
        <function-ref name="runTask" scoped="" ref="0x7f426c2d17b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f426c2d22a0" loc="75:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x7f426c2d22a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426c2d2620"/>
        <function-ref name="runTask" scoped="" ref="0x7f426c2d27b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f426c2d32b0" loc="74:/home/punit/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x7f426c2d32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426c2d3630"/>
        <function-ref name="runTask" scoped="" ref="0x7f426c2d37c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f426c279550" loc="45:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f426c279550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f426c2798d0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f426c279a60"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f426c279bf0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f426c279d80"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f426c286020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f426c2861b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f426c286340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f426c2864d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f426c286660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f426c2867f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f426c286980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f426c286b10"/>
        <function-ref name="sync" scoped="" ref="0x7f426c286ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f426c285020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f426c2851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f426c278830" loc="47:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7f426c278830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426c277480"/>
        <function-ref name="readDone" scoped="" ref="0x7f426c277900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f426c2854b0" loc="46:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7f426c2854b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f426c285830"/>
        <function-ref name="rfOff" scoped="" ref="0x7f426c2859c0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f426c285b50"/>
        <function-ref name="startVReg" scoped="" ref="0x7f426c285ce0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f426c285e70"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f426c278030"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f426c2781c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f426c278350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426c287020" loc="44:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426c287020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426c2873a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426c287530"/>
        <function-ref name="request" scoped="" ref="0x7f426c2876c0"/>
        <function-ref name="granted" scoped="" ref="0x7f426c287850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426c2879e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f426c2700c0" loc="46:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f426c2700c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f426c270440"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f426c2705d0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f426c270760"/>
        <function-ref name="syncDone" scoped="" ref="0x7f426c2708f0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f426c270a80"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f426c270c10"/>
        <function-ref name="setChannel" scoped="" ref="0x7f426c270da0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f426c26f020"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f426c26f1b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f426c26f340"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f426c26f4d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f426c26f660"/>
        <function-ref name="sync" scoped="" ref="0x7f426c26f7f0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f426c26fa80"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f426c26fc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f426c2491e0" loc="66:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f426c2491e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426c249560"/>
        <function-ref name="write" scoped="" ref="0x7f426c2496f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f426c269970" loc="50:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f426c269970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f426c269cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f426c261790" loc="52:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x7f426c261790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f426c695d50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426c260020"/>
        <function-ref name="fired" scoped="" ref="0x7f426c268020"/>
        <function-ref name="startAt" scoped="" ref="0x7f426c2689a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426c2684e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f426c2604e0"/>
        <function-ref name="start" scoped="" ref="0x7f426c26a5d0"/>
        <function-ref name="stop" scoped="" ref="0x7f426c26aae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f426c24c020" loc="64:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f426c24c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426c24c3a0"/>
        <function-ref name="write" scoped="" ref="0x7f426c24c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f426c25ece0" loc="54:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f426c25ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c25d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c25d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c25d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c25d550"/>
        <function-ref name="get" scoped="" ref="0x7f426c25d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c25d870"/>
        <function-ref name="set" scoped="" ref="0x7f426c25da00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c25db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f426c26d500" loc="48:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7f426c26d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426c26c130"/>
        <function-ref name="readDone" scoped="" ref="0x7f426c26c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f426c2372f0" loc="126:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x7f426c2372f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426c237670"/>
        <function-ref name="runTask" scoped="" ref="0x7f426c237800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f426c249a80" loc="67:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f426c249a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426c249e00"/>
        <function-ref name="write" scoped="" ref="0x7f426c248020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f426c2483c0" loc="68:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f426c2483c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426c248740"/>
        <function-ref name="write" scoped="" ref="0x7f426c2488d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f426c24acd0" loc="62:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f426c24acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426c2510a0"/>
        <function-ref name="write" scoped="" ref="0x7f426c251230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f426c252390" loc="57:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f426c252390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f426c252710"/>
        <function-ref name="changed" scoped="" ref="0x7f426c2528a0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f426c252a30"/>
        <function-ref name="setAddress" scoped="" ref="0x7f426c252bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f426c2609d0" loc="53:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f426c2609d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c260d50"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c25e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c25e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c25e340"/>
        <function-ref name="get" scoped="" ref="0x7f426c25e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c25e660"/>
        <function-ref name="set" scoped="" ref="0x7f426c25e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426c25e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f426c246ae0" loc="71:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f426c246ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426c2450a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f426c25c020" loc="55:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7f426c25c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426c25c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426c25c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426c25c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426c25c850"/>
        <function-ref name="get" scoped="" ref="0x7f426c25c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426c25cb70"/>
        <function-ref name="set" scoped="" ref="0x7f426c25cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f426c25b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426c275cd0" loc="44:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426c275cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426c2710a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f426c24c8f0" loc="65:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f426c24c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426c24cc70"/>
        <function-ref name="write" scoped="" ref="0x7f426c24ce00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f426c245440" loc="72:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f426c245440"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426c2457c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f426c245b60" loc="74:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f426c245b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426c243020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426c2431b0"/>
        <function-ref name="request" scoped="" ref="0x7f426c243340"/>
        <function-ref name="granted" scoped="" ref="0x7f426c2434d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426c243660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f426c242880" loc="76:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x7f426c242880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426c242c00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426c242d90"/>
        <function-ref name="request" scoped="" ref="0x7f426c241020"/>
        <function-ref name="granted" scoped="" ref="0x7f426c2411b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426c241340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f426c26e020" loc="47:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7f426c26e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f426c26e3a0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f426c26e530"/>
        <function-ref name="rxOn" scoped="" ref="0x7f426c26e6c0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f426c26e850"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f426c26e9e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f426c26eb70"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f426c26ed00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f426c26d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f426c2515d0" loc="63:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f426c2515d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426c251950"/>
        <function-ref name="write" scoped="" ref="0x7f426c251ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f426c24a420" loc="61:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f426c24a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426c24a7a0"/>
        <function-ref name="write" scoped="" ref="0x7f426c24a930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f426c244bb0" loc="69:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f426c244bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426c246020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f426c241600" loc="78:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f426c241600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f426c241980"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f426c241b10"/>
        <function-ref name="led1On" scoped="" ref="0x7f426c241ca0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f426c241e30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f426c240020"/>
        <function-ref name="get" scoped="" ref="0x7f426c2401b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f426c240340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f426c240980"/>
        <function-ref name="set" scoped="" ref="0x7f426c2404d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f426c240660"/>
        <function-ref name="led2On" scoped="" ref="0x7f426c2407f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f426c238410" loc="125:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x7f426c238410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426c238790"/>
        <function-ref name="runTask" scoped="" ref="0x7f426c238920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426c271390" loc="45:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426c271390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426c271710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426c2718a0"/>
        <function-ref name="request" scoped="" ref="0x7f426c271a30"/>
        <function-ref name="granted" scoped="" ref="0x7f426c271bc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426c271d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f426c24de20" loc="60:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f426c24de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426c2561c0"/>
        <function-ref name="write" scoped="" ref="0x7f426c256350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f426c24d4a0" loc="59:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f426c24d4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426c24d920"/>
        <function-ref name="write" scoped="" ref="0x7f426c24dab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f426c257c00" loc="56:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7f426c257c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426c25a020"/>
        <function-ref name="disable" scoped="" ref="0x7f426c25a1b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f426c25a340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f426c25a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f426c243a10" loc="75:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x7f426c243a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426c243d90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426c242020"/>
        <function-ref name="request" scoped="" ref="0x7f426c2421b0"/>
        <function-ref name="granted" scoped="" ref="0x7f426c242340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426c2424d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f426c2463b0" loc="70:/home/punit/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f426c2463b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426c246730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426c1c17f0" loc="45:/home/punit/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426c1c17f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426c1c1b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f426c1be220" loc="46:/home/punit/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f426c1be220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f426c695d50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426c1bbb30"/>
        <function-ref name="fired" scoped="" ref="0x7f426c1bda60"/>
        <function-ref name="startAt" scoped="" ref="0x7f426c1bb4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426c1bb020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f426c1ba020"/>
        <function-ref name="start" scoped="" ref="0x7f426c1bd090"/>
        <function-ref name="stop" scoped="" ref="0x7f426c1bd5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f426c1b8690" loc="86:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f426c1b8690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f426c695d50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426bf5f020"/>
        <function-ref name="fired" scoped="" ref="0x7f426bf60020"/>
        <function-ref name="startAt" scoped="" ref="0x7f426bf609a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426bf604e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f426bf5f4e0"/>
        <function-ref name="start" scoped="" ref="0x7f426bf645b0"/>
        <function-ref name="stop" scoped="" ref="0x7f426bf64ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426bf5f910" loc="87:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426bf5f910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426bf5fc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f426ad68aa0" loc="28:/home/punit/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f426ad68aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f426c695d50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426ad652e0"/>
        <function-ref name="fired" scoped="" ref="0x7f426ad662e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f426ad66c60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426ad667a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f426ad657a0"/>
        <function-ref name="start" scoped="" ref="0x7f426ad678d0"/>
        <function-ref name="stop" scoped="" ref="0x7f426ad67de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f426ad613f0" loc="30:/home/punit/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f426ad613f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="TOne" ref="0x7f426c65ba90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426ad5fc20"/>
        <function-ref name="fired" scoped="" ref="0x7f426ad60c10"/>
        <function-ref name="startAt" scoped="" ref="0x7f426ad5f5d0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426ad5f110"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f426ad5e110"/>
        <function-ref name="start" scoped="" ref="0x7f426ad60240"/>
        <function-ref name="stop" scoped="" ref="0x7f426ad60750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f426c1930c0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f426c1930c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f426c193440"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7f426c1935d0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f426c193760"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7f426c1938f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f426c193a80"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f426c193c10"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7f426c193da0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7f426c192020"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7f426c1921b0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7f426c192340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f426c189020" loc="47:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f426c189020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f426c17e4e0"/>
        <function-ref name="test" scoped="" ref="0x7f426c17fa10"/>
        <function-ref name="get" scoped="" ref="0x7f426c189c50"/>
        <function-ref name="captured" scoped="" ref="0x7f426c187660"/>
        <function-ref name="reset" scoped="" ref="0x7f426c187b70"/>
        <function-ref name="isOn" scoped="" ref="0x7f426c17e020"/>
        <function-ref name="set" scoped="" ref="0x7f426c187150"/>
        <function-ref name="start" scoped="" ref="0x7f426c17f090"/>
        <function-ref name="stop" scoped="" ref="0x7f426c17f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f426c176c10" loc="48:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f426c176c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f426c1745d0"/>
        <function-ref name="fired" scoped="" ref="0x7f426c1752a0"/>
        <function-ref name="get" scoped="" ref="0x7f426c17d8a0"/>
        <function-ref name="reset" scoped="" ref="0x7f426c175760"/>
        <function-ref name="isOn" scoped="" ref="0x7f426c174a90"/>
        <function-ref name="set" scoped="" ref="0x7f426c17dd60"/>
        <function-ref name="start" scoped="" ref="0x7f426c175c20"/>
        <function-ref name="stop" scoped="" ref="0x7f426c174110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f426c1977b0" loc="45:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f426c1977b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f426c195b30"/>
        <function-ref name="test" scoped="" ref="0x7f426c1951b0"/>
        <function-ref name="get" scoped="" ref="0x7f426c1a1440"/>
        <function-ref name="setScale" scoped="" ref="0x7f426c194020"/>
        <function-ref name="getScale" scoped="" ref="0x7f426c194530"/>
        <function-ref name="reset" scoped="" ref="0x7f426c1a0340"/>
        <function-ref name="overflow" scoped="" ref="0x7f426c1a1e10"/>
        <function-ref name="isOn" scoped="" ref="0x7f426c195670"/>
        <function-ref name="set" scoped="" ref="0x7f426c1a1900"/>
        <function-ref name="start" scoped="" ref="0x7f426c1a0800"/>
        <function-ref name="stop" scoped="" ref="0x7f426c1a0cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f426c165dd0" loc="48:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f426c165dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f426c169180"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f426c169310"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f426c1694a0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f426c169630"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f426c1697c0"/>
        <function-ref name="setControl" scoped="" ref="0x7f426c169950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f426c15bcb0" loc="50:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f426c15bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7f426c15f0a0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7f426c15f230"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7f426c15f3c0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f426c15f550"/>
        <function-ref name="getAssr" scoped="" ref="0x7f426c15f6e0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f426c15f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f426c169e50" loc="49:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f426c169e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f426c1629a0"/>
        <function-ref name="fired" scoped="" ref="0x7f426c163530"/>
        <function-ref name="get" scoped="" ref="0x7f426c168ac0"/>
        <function-ref name="reset" scoped="" ref="0x7f426c1639f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f426c162e60"/>
        <function-ref name="set" scoped="" ref="0x7f426c163020"/>
        <function-ref name="start" scoped="" ref="0x7f426c162020"/>
        <function-ref name="stop" scoped="" ref="0x7f426c1624e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f426c172c70" loc="47:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f426c172c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f426c16c020"/>
        <function-ref name="test" scoped="" ref="0x7f426c16d610"/>
        <function-ref name="get" scoped="" ref="0x7f426c16f8e0"/>
        <function-ref name="setScale" scoped="" ref="0x7f426c16c4e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f426c16c9f0"/>
        <function-ref name="reset" scoped="" ref="0x7f426c16e7a0"/>
        <function-ref name="overflow" scoped="" ref="0x7f426c16e2e0"/>
        <function-ref name="isOn" scoped="" ref="0x7f426c16dad0"/>
        <function-ref name="set" scoped="" ref="0x7f426c16fda0"/>
        <function-ref name="start" scoped="" ref="0x7f426c16ec60"/>
        <function-ref name="stop" scoped="" ref="0x7f426c16d150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f426c152020" loc="50:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f426c152020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f426c1523a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f426c152530"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f426c1526c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f426c152850"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f426c1529e0"/>
        <function-ref name="setControl" scoped="" ref="0x7f426c152b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f426c14d4c0" loc="52:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f426c14d4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f426c14d840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f426c14dc00" loc="53:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f426c14dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7f426c14c020"/>
        <function-ref name="compareBusy" scoped="" ref="0x7f426c14c1b0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7f426c14c340"/>
        <function-ref name="countBusy" scoped="" ref="0x7f426c14c4d0"/>
        <function-ref name="getAssr" scoped="" ref="0x7f426c14c660"/>
        <function-ref name="setAssr" scoped="" ref="0x7f426c14c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f426c1510b0" loc="51:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f426c1510b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f426c14fa50"/>
        <function-ref name="fired" scoped="" ref="0x7f426c150730"/>
        <function-ref name="get" scoped="" ref="0x7f426c151ce0"/>
        <function-ref name="reset" scoped="" ref="0x7f426c150bf0"/>
        <function-ref name="isOn" scoped="" ref="0x7f426c14d020"/>
        <function-ref name="set" scoped="" ref="0x7f426c150220"/>
        <function-ref name="start" scoped="" ref="0x7f426c14f0d0"/>
        <function-ref name="stop" scoped="" ref="0x7f426c14f590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f426c15acf0" loc="49:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f426c15acf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f426c154090"/>
        <function-ref name="test" scoped="" ref="0x7f426c1556e0"/>
        <function-ref name="get" scoped="" ref="0x7f426c157980"/>
        <function-ref name="setScale" scoped="" ref="0x7f426c154550"/>
        <function-ref name="getScale" scoped="" ref="0x7f426c154a60"/>
        <function-ref name="reset" scoped="" ref="0x7f426c156840"/>
        <function-ref name="overflow" scoped="" ref="0x7f426c156380"/>
        <function-ref name="isOn" scoped="" ref="0x7f426c155ba0"/>
        <function-ref name="set" scoped="" ref="0x7f426c157e40"/>
        <function-ref name="start" scoped="" ref="0x7f426c156d00"/>
        <function-ref name="stop" scoped="" ref="0x7f426c155220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f426c0e9580" loc="47:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f426c0e9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f426c0e9900"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7f426c0e9a90"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f426c0e9c20"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7f426c0e9db0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f426c0e8020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f426c0e81b0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7f426c0e8340"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7f426c0e84d0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7f426c0e8660"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7f426c0e87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x7f426c0d7910" loc="53:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x7f426c0d7910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f426c0d7c90"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f426c0d7e20"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f426c0d5020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f426c0d51b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f426c0d5340"/>
        <function-ref name="setControl" scoped="" ref="0x7f426c0d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f426c0e37e0" loc="49:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f426c0e37e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f426c0df1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f426c0e2e10"/>
        <function-ref name="get" scoped="" ref="0x7f426c0e2440"/>
        <function-ref name="reset" scoped="" ref="0x7f426c0e1340"/>
        <function-ref name="isOn" scoped="" ref="0x7f426c0df670"/>
        <function-ref name="set" scoped="" ref="0x7f426c0e2900"/>
        <function-ref name="start" scoped="" ref="0x7f426c0e1800"/>
        <function-ref name="stop" scoped="" ref="0x7f426c0e1cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f426c0e8d00" loc="48:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f426c0e8d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f426c0e30d0"/>
        <function-ref name="test" scoped="" ref="0x7f426c0e4720"/>
        <function-ref name="get" scoped="" ref="0x7f426c0e7980"/>
        <function-ref name="captured" scoped="" ref="0x7f426c0e6380"/>
        <function-ref name="reset" scoped="" ref="0x7f426c0e6890"/>
        <function-ref name="isOn" scoped="" ref="0x7f426c0e4be0"/>
        <function-ref name="set" scoped="" ref="0x7f426c0e7e40"/>
        <function-ref name="start" scoped="" ref="0x7f426c0e6d50"/>
        <function-ref name="stop" scoped="" ref="0x7f426c0e4260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f426c0dfd30" loc="50:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f426c0dfd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f426c0dc6e0"/>
        <function-ref name="fired" scoped="" ref="0x7f426c0dd380"/>
        <function-ref name="get" scoped="" ref="0x7f426c0de980"/>
        <function-ref name="reset" scoped="" ref="0x7f426c0dd840"/>
        <function-ref name="isOn" scoped="" ref="0x7f426c0dcba0"/>
        <function-ref name="set" scoped="" ref="0x7f426c0dee40"/>
        <function-ref name="start" scoped="" ref="0x7f426c0ddd00"/>
        <function-ref name="stop" scoped="" ref="0x7f426c0dc220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f426c0da2a0" loc="51:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f426c0da2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f426c0d8e60"/>
        <function-ref name="fired" scoped="" ref="0x7f426c0d99f0"/>
        <function-ref name="get" scoped="" ref="0x7f426c0d9020"/>
        <function-ref name="reset" scoped="" ref="0x7f426c0d8020"/>
        <function-ref name="isOn" scoped="" ref="0x7f426c0d7350"/>
        <function-ref name="set" scoped="" ref="0x7f426c0d94e0"/>
        <function-ref name="start" scoped="" ref="0x7f426c0d84e0"/>
        <function-ref name="stop" scoped="" ref="0x7f426c0d89a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f426c0ee0a0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f426c0ee0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f426c0eb4e0"/>
        <function-ref name="test" scoped="" ref="0x7f426c0eca10"/>
        <function-ref name="get" scoped="" ref="0x7f426c0eecd0"/>
        <function-ref name="setScale" scoped="" ref="0x7f426c0eb9a0"/>
        <function-ref name="getScale" scoped="" ref="0x7f426c0e9020"/>
        <function-ref name="reset" scoped="" ref="0x7f426c0edb80"/>
        <function-ref name="overflow" scoped="" ref="0x7f426c0ed6c0"/>
        <function-ref name="isOn" scoped="" ref="0x7f426c0eb020"/>
        <function-ref name="set" scoped="" ref="0x7f426c0ed1b0"/>
        <function-ref name="start" scoped="" ref="0x7f426c0ec090"/>
        <function-ref name="stop" scoped="" ref="0x7f426c0ec550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426c043e80" loc="46:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426c043e80"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f426c721660"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f426c721660"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426c042220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f426c042610" loc="47:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f426c042610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f426c032a90"/>
        <function-ref name="test" scoped="" ref="0x7f426c032110"/>
        <function-ref name="get" scoped="" ref="0x7f426c0353d0"/>
        <function-ref name="setScale" scoped="" ref="0x7f426c031020"/>
        <function-ref name="getScale" scoped="" ref="0x7f426c031530"/>
        <function-ref name="reset" scoped="" ref="0x7f426c0332a0"/>
        <function-ref name="overflow" scoped="" ref="0x7f426c035da0"/>
        <function-ref name="isOn" scoped="" ref="0x7f426c0325d0"/>
        <function-ref name="set" scoped="" ref="0x7f426c035890"/>
        <function-ref name="start" scoped="" ref="0x7f426c033760"/>
        <function-ref name="stop" scoped="" ref="0x7f426c033c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f426ad3fa40" loc="55:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f426ad3fa40"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f426c7212e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f426c7212e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="TOne" ref="0x7f426c65ba90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426ad3b2a0"/>
        <function-ref name="fired" scoped="" ref="0x7f426ad3d2a0"/>
        <function-ref name="startAt" scoped="" ref="0x7f426ad3dc20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426ad3d760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f426ad3b760"/>
        <function-ref name="start" scoped="" ref="0x7f426ad3e890"/>
        <function-ref name="stop" scoped="" ref="0x7f426ad3eda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7f426ad35020" loc="58:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f426ad35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f426ad339a0"/>
        <function-ref name="fired" scoped="" ref="0x7f426ad34660"/>
        <function-ref name="get" scoped="" ref="0x7f426ad35c50"/>
        <function-ref name="reset" scoped="" ref="0x7f426ad34b20"/>
        <function-ref name="isOn" scoped="" ref="0x7f426ad33e60"/>
        <function-ref name="set" scoped="" ref="0x7f426ad34150"/>
        <function-ref name="start" scoped="" ref="0x7f426ad33020"/>
        <function-ref name="stop" scoped="" ref="0x7f426ad334e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7f426ad3bcb0" loc="57:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f426ad3bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f426ad37090"/>
        <function-ref name="test" scoped="" ref="0x7f426ad386e0"/>
        <function-ref name="get" scoped="" ref="0x7f426ad3a980"/>
        <function-ref name="setScale" scoped="" ref="0x7f426ad37550"/>
        <function-ref name="getScale" scoped="" ref="0x7f426ad37a60"/>
        <function-ref name="reset" scoped="" ref="0x7f426ad39840"/>
        <function-ref name="overflow" scoped="" ref="0x7f426ad39380"/>
        <function-ref name="isOn" scoped="" ref="0x7f426ad38ba0"/>
        <function-ref name="set" scoped="" ref="0x7f426ad3ae40"/>
        <function-ref name="start" scoped="" ref="0x7f426ad39d00"/>
        <function-ref name="stop" scoped="" ref="0x7f426ad38220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f426bff1020" loc="24:/home/punit/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f426bff1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f426c695d50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f426bff1e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f426bff0800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f426bff0340"/>
        <function-ref name="overflow" scoped="" ref="0x7f426bff0cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f426bfe8020" loc="24:/home/punit/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f426bfe8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="TOne" ref="0x7f426c65ba90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f426bfe8e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f426bfe6800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f426bfe6340"/>
        <function-ref name="overflow" scoped="" ref="0x7f426bfe6cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f426bfe2cc0" loc="45:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f426bfe2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="TOne" ref="0x7f426c65ba90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f426bfd1b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f426bfd0550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f426bfd0090"/>
        <function-ref name="overflow" scoped="" ref="0x7f426bfd0a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f426bfcf020" loc="46:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f426bfcf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f426bfcb350"/>
        <function-ref name="test" scoped="" ref="0x7f426bfcc9a0"/>
        <function-ref name="get" scoped="" ref="0x7f426bfcfc50"/>
        <function-ref name="setScale" scoped="" ref="0x7f426bfcb810"/>
        <function-ref name="getScale" scoped="" ref="0x7f426bfcbd20"/>
        <function-ref name="reset" scoped="" ref="0x7f426bfcdb20"/>
        <function-ref name="overflow" scoped="" ref="0x7f426bfcd660"/>
        <function-ref name="isOn" scoped="" ref="0x7f426bfcce60"/>
        <function-ref name="set" scoped="" ref="0x7f426bfcd150"/>
        <function-ref name="start" scoped="" ref="0x7f426bfcc020"/>
        <function-ref name="stop" scoped="" ref="0x7f426bfcc4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f426bfa80f0" loc="63:/home/punit/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f426bfa80f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="TOne" ref="0x7f426c65ba90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f426bfa7020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f426bfa79a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f426bfa74e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f426bfa7e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f426bfc6cf0" loc="62:/home/punit/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f426bfc6cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f426c695d50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f426bfabb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f426bfaa550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f426bfaa090"/>
        <function-ref name="overflow" scoped="" ref="0x7f426bfaaa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f426ad5b5f0" loc="61:/home/punit/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f426ad5b5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f426c695d50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426ad59e50"/>
        <function-ref name="fired" scoped="" ref="0x7f426ad5ae00"/>
        <function-ref name="startAt" scoped="" ref="0x7f426ad59800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426ad59340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f426ad58340"/>
        <function-ref name="start" scoped="" ref="0x7f426ad5a430"/>
        <function-ref name="stop" scoped="" ref="0x7f426ad5a940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f426ad55d20" loc="73:/home/punit/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7f426ad55d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="TOne" ref="0x7f426c65ba90"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426ad52670"/>
        <function-ref name="fired" scoped="" ref="0x7f426ad53550"/>
        <function-ref name="startAt" scoped="" ref="0x7f426ad52020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426ad53a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f426ad52b30"/>
        <function-ref name="start" scoped="" ref="0x7f426ad54b60"/>
        <function-ref name="stop" scoped="" ref="0x7f426ad53090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f426ad589b0" loc="68:/home/punit/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f426ad589b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f426c695d50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f426ad577e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f426ad551b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f426ad57ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f426ad55670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426bf63380" loc="18:/home/punit/tinyos-main/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426bf63380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426bf63700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f426bf594e0" loc="87:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7f426bf594e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bf59860"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bf599f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bf59b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bf59d10"/>
        <function-ref name="get" scoped="" ref="0x7f426bf58020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bf581b0"/>
        <function-ref name="set" scoped="" ref="0x7f426bf58340"/>
        <function-ref name="clr" scoped="" ref="0x7f426bf584d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f426bf58800" loc="88:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7f426bf58800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bf58b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bf58d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bf57020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bf571b0"/>
        <function-ref name="get" scoped="" ref="0x7f426bf57340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bf574d0"/>
        <function-ref name="set" scoped="" ref="0x7f426bf57660"/>
        <function-ref name="clr" scoped="" ref="0x7f426bf577f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f426bf57b10" loc="89:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f426bf57b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bf56020"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bf561b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bf56340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bf564d0"/>
        <function-ref name="get" scoped="" ref="0x7f426bf56660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bf567f0"/>
        <function-ref name="set" scoped="" ref="0x7f426bf56980"/>
        <function-ref name="clr" scoped="" ref="0x7f426bf56b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f426bf5a330" loc="86:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f426bf5a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bf5a6b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bf5a840"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bf5a9d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bf5ab60"/>
        <function-ref name="get" scoped="" ref="0x7f426bf5acf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bf5ae80"/>
        <function-ref name="set" scoped="" ref="0x7f426bf59030"/>
        <function-ref name="clr" scoped="" ref="0x7f426bf591c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f426bf54020" loc="91:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7f426bf54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bf543a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bf54530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bf546c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bf54850"/>
        <function-ref name="get" scoped="" ref="0x7f426bf549e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bf54b70"/>
        <function-ref name="set" scoped="" ref="0x7f426bf54d00"/>
        <function-ref name="clr" scoped="" ref="0x7f426bf53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f426bf5b020" loc="85:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7f426bf5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bf5b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bf5b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bf5b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bf5b850"/>
        <function-ref name="get" scoped="" ref="0x7f426bf5b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bf5bb70"/>
        <function-ref name="set" scoped="" ref="0x7f426bf5bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f426bf5a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f426bf56e20" loc="90:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7f426bf56e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bf551c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bf55350"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bf554e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bf55670"/>
        <function-ref name="get" scoped="" ref="0x7f426bf55800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bf55990"/>
        <function-ref name="set" scoped="" ref="0x7f426bf55b20"/>
        <function-ref name="clr" scoped="" ref="0x7f426bf55cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f426bf44200" loc="39:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7f426bf44200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f426bf44580"/>
        <function-ref name="disable" scoped="" ref="0x7f426bf44710"/>
        <function-ref name="captured" scoped="" ref="0x7f426bf448a0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f426bf44a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f426bf44e10" loc="40:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7f426bf44e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426bf481c0"/>
        <function-ref name="disable" scoped="" ref="0x7f426bf48350"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f426bf484e0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f426bf48670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f426bf48a60" loc="41:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f426bf48a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426bf48de0"/>
        <function-ref name="disable" scoped="" ref="0x7f426bf47020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f426bf471b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f426bf47340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f426bf43c60" loc="42:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f426bf43c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f426bf42020"/>
        <function-ref name="disable" scoped="" ref="0x7f426bf421b0"/>
        <function-ref name="captured" scoped="" ref="0x7f426bf42340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f426bf424d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x7f426bf428c0" loc="43:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x7f426bf428c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f426bf2ee60"/>
        <function-ref name="test" scoped="" ref="0x7f426bf2e4e0"/>
        <function-ref name="get" scoped="" ref="0x7f426bf30520"/>
        <function-ref name="captured" scoped="" ref="0x7f426bf2f020"/>
        <function-ref name="reset" scoped="" ref="0x7f426bf2f530"/>
        <function-ref name="isOn" scoped="" ref="0x7f426bf2e9a0"/>
        <function-ref name="set" scoped="" ref="0x7f426bf309e0"/>
        <function-ref name="start" scoped="" ref="0x7f426bf2f9f0"/>
        <function-ref name="stop" scoped="" ref="0x7f426bf2e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f426bf2a2f0" loc="9:/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f426bf2a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426bf2a670"/>
        <function-ref name="fired" scoped="" ref="0x7f426bf2a800"/>
        <function-ref name="disable" scoped="" ref="0x7f426bf2a990"/>
        <function-ref name="edge" scoped="" ref="0x7f426bf2ab20"/>
        <function-ref name="enable" scoped="" ref="0x7f426bf2acb0"/>
        <function-ref name="getValue" scoped="" ref="0x7f426bf2ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f426bf2b680" loc="8:/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f426bf2b680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426bf2ba00"/>
        <function-ref name="disable" scoped="" ref="0x7f426bf2bb90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f426bf2bd20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f426bf2a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7f426bf0d530" loc="51:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7f426bf0d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426bf0d8b0"/>
        <function-ref name="fired" scoped="" ref="0x7f426bf0da40"/>
        <function-ref name="disable" scoped="" ref="0x7f426bf0dbd0"/>
        <function-ref name="edge" scoped="" ref="0x7f426bf0dd60"/>
        <function-ref name="enable" scoped="" ref="0x7f426bf0c020"/>
        <function-ref name="getValue" scoped="" ref="0x7f426bf0c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f426bf12530" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f426bf12530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426bf128b0"/>
        <function-ref name="fired" scoped="" ref="0x7f426bf12a40"/>
        <function-ref name="disable" scoped="" ref="0x7f426bf12bd0"/>
        <function-ref name="edge" scoped="" ref="0x7f426bf12d60"/>
        <function-ref name="enable" scoped="" ref="0x7f426bf11020"/>
        <function-ref name="getValue" scoped="" ref="0x7f426bf111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7f426bf0f530" loc="49:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7f426bf0f530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426bf0f8b0"/>
        <function-ref name="fired" scoped="" ref="0x7f426bf0fa40"/>
        <function-ref name="disable" scoped="" ref="0x7f426bf0fbd0"/>
        <function-ref name="edge" scoped="" ref="0x7f426bf0fd60"/>
        <function-ref name="enable" scoped="" ref="0x7f426bf0e020"/>
        <function-ref name="getValue" scoped="" ref="0x7f426bf0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7f426bf0c530" loc="52:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7f426bf0c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426bf0c8b0"/>
        <function-ref name="fired" scoped="" ref="0x7f426bf0ca40"/>
        <function-ref name="disable" scoped="" ref="0x7f426bf0cbd0"/>
        <function-ref name="edge" scoped="" ref="0x7f426bf0cd60"/>
        <function-ref name="enable" scoped="" ref="0x7f426bf0b020"/>
        <function-ref name="getValue" scoped="" ref="0x7f426bf0b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f426bf11530" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f426bf11530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426bf118b0"/>
        <function-ref name="fired" scoped="" ref="0x7f426bf11a40"/>
        <function-ref name="disable" scoped="" ref="0x7f426bf11bd0"/>
        <function-ref name="edge" scoped="" ref="0x7f426bf11d60"/>
        <function-ref name="enable" scoped="" ref="0x7f426bf10020"/>
        <function-ref name="getValue" scoped="" ref="0x7f426bf101b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7f426bf0e530" loc="50:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7f426bf0e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426bf0e8b0"/>
        <function-ref name="fired" scoped="" ref="0x7f426bf0ea40"/>
        <function-ref name="disable" scoped="" ref="0x7f426bf0ebd0"/>
        <function-ref name="edge" scoped="" ref="0x7f426bf0ed60"/>
        <function-ref name="enable" scoped="" ref="0x7f426bf0d020"/>
        <function-ref name="getValue" scoped="" ref="0x7f426bf0d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f426bf134e0" loc="45:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f426bf134e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426bf13860"/>
        <function-ref name="fired" scoped="" ref="0x7f426bf139f0"/>
        <function-ref name="disable" scoped="" ref="0x7f426bf13b80"/>
        <function-ref name="edge" scoped="" ref="0x7f426bf13d10"/>
        <function-ref name="enable" scoped="" ref="0x7f426bf12020"/>
        <function-ref name="getValue" scoped="" ref="0x7f426bf121b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f426bf10530" loc="48:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f426bf10530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426bf108b0"/>
        <function-ref name="fired" scoped="" ref="0x7f426bf10a40"/>
        <function-ref name="disable" scoped="" ref="0x7f426bf10bd0"/>
        <function-ref name="edge" scoped="" ref="0x7f426bf10d60"/>
        <function-ref name="enable" scoped="" ref="0x7f426bf0f020"/>
        <function-ref name="getValue" scoped="" ref="0x7f426bf0f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7f426bf02020" loc="49:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7f426bf02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426bf023a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7f426bf06830" loc="44:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7f426bf06830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426bf06bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7f426bf03020" loc="47:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7f426bf03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426bf033a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7f426bf027a0" loc="50:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7f426bf027a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426bf02b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7f426bf04020" loc="45:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7f426bf04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426bf043a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7f426bf037a0" loc="48:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7f426bf037a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426bf03b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7f426bf060b0" loc="43:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7f426bf060b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426bf06430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7f426bf047a0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7f426bf047a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426bf04b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f426bee5780" loc="44:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f426bee5780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426bee5b00"/>
        <function-ref name="fired" scoped="" ref="0x7f426bee5c90"/>
        <function-ref name="disable" scoped="" ref="0x7f426bee5e20"/>
        <function-ref name="edge" scoped="" ref="0x7f426bed1020"/>
        <function-ref name="enable" scoped="" ref="0x7f426bed11b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f426bed1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f426bed1610" loc="45:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f426bed1610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426bed1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f426becd6d0" loc="44:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f426becd6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426becda50"/>
        <function-ref name="fired" scoped="" ref="0x7f426becdbe0"/>
        <function-ref name="disable" scoped="" ref="0x7f426becdd70"/>
        <function-ref name="edge" scoped="" ref="0x7f426becc020"/>
        <function-ref name="enable" scoped="" ref="0x7f426becc1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f426becc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f426becc610" loc="45:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f426becc610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426becc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f426bec96d0" loc="44:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f426bec96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426bec9a50"/>
        <function-ref name="fired" scoped="" ref="0x7f426bec9be0"/>
        <function-ref name="disable" scoped="" ref="0x7f426bec9d70"/>
        <function-ref name="edge" scoped="" ref="0x7f426bec8020"/>
        <function-ref name="enable" scoped="" ref="0x7f426bec81b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f426bec8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f426bec8610" loc="45:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f426bec8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426bec8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f426bec56d0" loc="44:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f426bec56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426bec5a50"/>
        <function-ref name="fired" scoped="" ref="0x7f426bec5be0"/>
        <function-ref name="disable" scoped="" ref="0x7f426bec5d70"/>
        <function-ref name="edge" scoped="" ref="0x7f426bec4020"/>
        <function-ref name="enable" scoped="" ref="0x7f426bec41b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f426bec4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f426bec4610" loc="45:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f426bec4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426bec4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f426bec09b0" loc="44:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f426bec09b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426bec0d30"/>
        <function-ref name="fired" scoped="" ref="0x7f426bebf020"/>
        <function-ref name="disable" scoped="" ref="0x7f426bebf1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f426bebf340"/>
        <function-ref name="enable" scoped="" ref="0x7f426bebf4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f426bebf660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f426bebf930" loc="45:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f426bebf930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426bebfcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f426bebcc90" loc="44:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f426bebcc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426bebb0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f426bebb230"/>
        <function-ref name="disable" scoped="" ref="0x7f426bebb3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f426bebb550"/>
        <function-ref name="enable" scoped="" ref="0x7f426bebb6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f426bebb870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f426bebbb40" loc="45:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f426bebbb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426beba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f426beb7d40" loc="44:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f426beb7d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426beb60e0"/>
        <function-ref name="fired" scoped="" ref="0x7f426beb6270"/>
        <function-ref name="disable" scoped="" ref="0x7f426beb6400"/>
        <function-ref name="edge" scoped="" ref="0x7f426beb6590"/>
        <function-ref name="enable" scoped="" ref="0x7f426beb6720"/>
        <function-ref name="getValue" scoped="" ref="0x7f426beb68b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f426beb6b80" loc="45:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f426beb6b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426beb5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f426beb3d40" loc="44:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f426beb3d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426beb20e0"/>
        <function-ref name="fired" scoped="" ref="0x7f426beb2270"/>
        <function-ref name="disable" scoped="" ref="0x7f426beb2400"/>
        <function-ref name="edge" scoped="" ref="0x7f426beb2590"/>
        <function-ref name="enable" scoped="" ref="0x7f426beb2720"/>
        <function-ref name="getValue" scoped="" ref="0x7f426beb28b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f426beb2b80" loc="45:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f426beb2b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426beb1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x7f426bea5c00" loc="51:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x7f426bea5c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bea4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bea41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bea4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bea44d0"/>
        <function-ref name="get" scoped="" ref="0x7f426bea4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bea47f0"/>
        <function-ref name="set" scoped="" ref="0x7f426bea4980"/>
        <function-ref name="clr" scoped="" ref="0x7f426bea4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f426bea5020" loc="47:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7f426bea5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426bea53a0"/>
        <function-ref name="disable" scoped="" ref="0x7f426bea5530"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f426bea56c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f426bea5850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x7f426bea2720" loc="69:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x7f426bea2720"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426bea2aa0"/>
        <function-ref name="runTask" scoped="" ref="0x7f426bea2c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f426bc0c2f0" loc="69:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f426bc0c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc0c870"/>
        <function-ref name="write" scoped="" ref="0x7f426bc0ca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f426bc16670" loc="47:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f426bc16670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bc169f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f426bc0f2f0" loc="63:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f426bc0f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc0f670"/>
        <function-ref name="write" scoped="" ref="0x7f426bc0f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f426bc0ace0" loc="72:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f426bc0ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc090a0"/>
        <function-ref name="write" scoped="" ref="0x7f426bc09230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f426bc09500" loc="73:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f426bc09500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc09880"/>
        <function-ref name="write" scoped="" ref="0x7f426bc09a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f426bbffce0" loc="94:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f426bbffce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbfd0a0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbfd230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f426bc01ce0" loc="90:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f426bc01ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc000a0"/>
        <function-ref name="write" scoped="" ref="0x7f426bc00230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f426bc159c0" loc="50:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f426bc159c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bc15d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f426bc02ce0" loc="88:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f426bc02ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc010a0"/>
        <function-ref name="write" scoped="" ref="0x7f426bc01230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f426bc0e2f0" loc="65:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f426bc0e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc0e670"/>
        <function-ref name="write" scoped="" ref="0x7f426bc0e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f426bc0d2f0" loc="67:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f426bc0d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc0d670"/>
        <function-ref name="write" scoped="" ref="0x7f426bc0d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f426bc06500" loc="79:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f426bc06500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc06880"/>
        <function-ref name="write" scoped="" ref="0x7f426bc06a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f426bc09ce0" loc="74:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f426bc09ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc080a0"/>
        <function-ref name="write" scoped="" ref="0x7f426bc08230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f426bc18020" loc="42:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426bc18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f426bc183a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f426bc18530"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f426bc186c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f426bc13370" loc="54:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f426bc13370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bc136f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f426bc139c0" loc="55:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f426bc139c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bc13e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f426bc12160" loc="56:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f426bc12160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bc124e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f426bc01500" loc="89:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f426bc01500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc01880"/>
        <function-ref name="write" scoped="" ref="0x7f426bc01a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f426bc146b0" loc="52:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f426bc146b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bc14a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f426bc0ead0" loc="66:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f426bc0ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc0ee50"/>
        <function-ref name="write" scoped="" ref="0x7f426bc0d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f426bc0fad0" loc="64:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f426bc0fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc0fe50"/>
        <function-ref name="write" scoped="" ref="0x7f426bc0e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f426bc16020" loc="46:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f426bc16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bc163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f426bbff500" loc="93:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f426bbff500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbff880"/>
        <function-ref name="write" scoped="" ref="0x7f426bbffa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f426bc00500" loc="91:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f426bc00500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc00880"/>
        <function-ref name="write" scoped="" ref="0x7f426bc00a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f426bc06ce0" loc="80:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f426bc06ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc050a0"/>
        <function-ref name="write" scoped="" ref="0x7f426bc05230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f426bc02500" loc="87:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f426bc02500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc02880"/>
        <function-ref name="write" scoped="" ref="0x7f426bc02a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f426bc08ce0" loc="76:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f426bc08ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc070a0"/>
        <function-ref name="write" scoped="" ref="0x7f426bc07230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f426bbfd500" loc="97:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f426bbfd500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f426bbfdc80"/>
        <function-ref name="writeDone" scoped="" ref="0x7f426bbfde10"/>
        <function-ref name="write" scoped="" ref="0x7f426bbfc020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f426bbfc1b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f426bbfc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f426bc18990" loc="45:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f426bc18990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bc18d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f426bc10ae0" loc="62:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f426bc10ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc10e60"/>
        <function-ref name="write" scoped="" ref="0x7f426bc0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f426bc0dad0" loc="68:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f426bc0dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc0de50"/>
        <function-ref name="write" scoped="" ref="0x7f426bc0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f426bc08500" loc="75:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f426bc08500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc08880"/>
        <function-ref name="write" scoped="" ref="0x7f426bc08a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f426bc0ccd0" loc="70:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f426bc0ccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc0a0a0"/>
        <function-ref name="write" scoped="" ref="0x7f426bc0a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f426bc16cc0" loc="48:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f426bc16cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bc150a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f426bc0a500" loc="71:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f426bc0a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc0a880"/>
        <function-ref name="write" scoped="" ref="0x7f426bc0aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426bc19250" loc="41:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426bc19250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426bc195d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426bc19760"/>
        <function-ref name="request" scoped="" ref="0x7f426bc198f0"/>
        <function-ref name="granted" scoped="" ref="0x7f426bc19a80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426bc19c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f426bc127b0" loc="57:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f426bc127b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bc12b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f426bc10490" loc="59:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f426bc10490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bc10810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f426bc03ce0" loc="86:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f426bc03ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc020a0"/>
        <function-ref name="write" scoped="" ref="0x7f426bc02230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f426bc03500" loc="85:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f426bc03500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc03880"/>
        <function-ref name="write" scoped="" ref="0x7f426bc03a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f426bc14d00" loc="53:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f426bc14d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bc130a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f426bc05ce0" loc="82:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f426bc05ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc030a0"/>
        <function-ref name="write" scoped="" ref="0x7f426bc03230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f426bc00ce0" loc="92:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f426bc00ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbff0a0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbff230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f426bc05500" loc="81:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f426bc05500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc05880"/>
        <function-ref name="write" scoped="" ref="0x7f426bc05a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f426bc15370" loc="49:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f426bc15370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bc156f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f426bc07ce0" loc="78:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f426bc07ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc060a0"/>
        <function-ref name="write" scoped="" ref="0x7f426bc06230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f426bc14060" loc="51:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f426bc14060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bc143e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f426bc07500" loc="77:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f426bc07500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bc07880"/>
        <function-ref name="write" scoped="" ref="0x7f426bc07a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f426bc12e00" loc="58:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f426bc12e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bc101c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f426bbfc610" loc="98:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f426bbfc610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f426bbfc990"/>
        <function-ref name="writeDone" scoped="" ref="0x7f426bbfcb20"/>
        <function-ref name="write" scoped="" ref="0x7f426bbfccb0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f426bbfce40"/>
        <function-ref name="readDone" scoped="" ref="0x7f426bbfb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f426be5f2c0" loc="41:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7f426be5f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f426be5f640"/>
        <function-ref name="writeDone" scoped="" ref="0x7f426be5f7d0"/>
        <function-ref name="write" scoped="" ref="0x7f426be5f960"/>
        <function-ref name="beginRead" scoped="" ref="0x7f426be5faf0"/>
        <function-ref name="readDone" scoped="" ref="0x7f426be5fc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f426be61350" loc="40:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426be61350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f426be616d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f426be61860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f426be619f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f426be5e540" loc="42:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7f426be5e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426be5e8c0"/>
        <function-ref name="write" scoped="" ref="0x7f426be5ea50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f426be5d370" loc="43:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7f426be5d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426be5d6f0"/>
        <function-ref name="write" scoped="" ref="0x7f426be5d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426be62600" loc="39:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426be62600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426be62980"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426be62b10"/>
        <function-ref name="request" scoped="" ref="0x7f426be62ca0"/>
        <function-ref name="granted" scoped="" ref="0x7f426be62e30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426be61020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f426be5c1d0" loc="44:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7f426be5c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426be5c550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f426be462e0" loc="55:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f426be462e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426be46660"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426be467f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f426be57890" loc="46:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7f426be57890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f426be57c10"/>
        <function-ref name="writeDone" scoped="" ref="0x7f426be57da0"/>
        <function-ref name="write" scoped="" ref="0x7f426be55020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f426be551b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f426be55340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f426be59660" loc="44:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426be59660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f426be599e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f426be59b70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f426be59d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f426be4ec70" loc="54:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f426be4ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f426be50020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f426be46b40" loc="56:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x7f426be46b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f426be4f020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f426be4f1b0"/>
        <function-ref name="isState" scoped="" ref="0x7f426be4f340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f426be4f4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f426be4f660"/>
        <function-ref name="forceState" scoped="" ref="0x7f426be4f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f426be52060" loc="53:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f426be52060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426be523e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426be52570"/>
        <function-ref name="request" scoped="" ref="0x7f426be52700"/>
        <function-ref name="granted" scoped="" ref="0x7f426be52890"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426be52a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f426be55ba0" loc="47:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7f426be55ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426be54020"/>
        <function-ref name="write" scoped="" ref="0x7f426be541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f426be54a30" loc="48:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7f426be54a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426be54db0"/>
        <function-ref name="write" scoped="" ref="0x7f426be53020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f426be4fa70" loc="57:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f426be4fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f426be4fdf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f426be4d020"/>
        <function-ref name="led1On" scoped="" ref="0x7f426be4d1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f426be4d340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f426be4d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f426be4d660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f426be4d7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f426be4de30"/>
        <function-ref name="set" scoped="" ref="0x7f426be4d980"/>
        <function-ref name="led0On" scoped="" ref="0x7f426be4db10"/>
        <function-ref name="led2On" scoped="" ref="0x7f426be4dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426be58510" loc="45:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426be58510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426be58890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426be58a20"/>
        <function-ref name="request" scoped="" ref="0x7f426be58bb0"/>
        <function-ref name="granted" scoped="" ref="0x7f426be58d40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426be57020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f426be42bd0" loc="88:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x7f426be42bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426be41020"/>
        <function-ref name="runTask" scoped="" ref="0x7f426be411b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f426be538b0" loc="49:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7f426be538b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426be53c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f426bde7770" loc="67:/home/punit/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f426bde7770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f426bde7af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f426bde7c80"/>
        <function-ref name="isState" scoped="" ref="0x7f426bde7e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f426bde3020"/>
        <function-ref name="requestState" scoped="" ref="0x7f426bde31b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f426bde3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f426bde21d0" loc="66:/home/punit/tinyos-main/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f426bde21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f426bde2550"/>
        <function-ref name="toIdle" scoped="" ref="0x7f426bde26e0"/>
        <function-ref name="isState" scoped="" ref="0x7f426bde2870"/>
        <function-ref name="isIdle" scoped="" ref="0x7f426bde2a00"/>
        <function-ref name="requestState" scoped="" ref="0x7f426bde2b90"/>
        <function-ref name="forceState" scoped="" ref="0x7f426bde2d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426bdde020" loc="66:/home/punit/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426bdde020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426bdde3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f426bddeb70" loc="67:/home/punit/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f426bddeb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f426bddd020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f426bddd1b0"/>
        <function-ref name="isState" scoped="" ref="0x7f426bddd340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f426bddd4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f426bddd660"/>
        <function-ref name="forceState" scoped="" ref="0x7f426bddd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f426bc6cd70" loc="43:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f426bc6cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426bc6b180"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426bc6b310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f426bc6c760" loc="42:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f426bc6c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f426bc6cae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426bc6d3d0" loc="39:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426bc6d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426bc6d750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426bc6d9e0" loc="40:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426bc6d9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426bc6dd60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426bc6c020"/>
        <function-ref name="request" scoped="" ref="0x7f426bc6c1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f426bc6c340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426bc6c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f426bdbc310" loc="84:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f426bdbc310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426bdbc690"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426bdbc820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f426bdc0bc0" loc="82:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f426bdc0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f426bdbd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426bdc0560" loc="81:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426bdc0560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426bdc08e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f426bdb7680" loc="83:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f426bdb7680"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f426bdb7a00"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f426bdb7b90"/>
        <function-ref name="splitRead" scoped="" ref="0x7f426bdb7d20"/>
        <function-ref name="write" scoped="" ref="0x7f426bdbc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426bdbb1d0" loc="85:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426bdbb1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426bdbb550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426bdbb6e0"/>
        <function-ref name="request" scoped="" ref="0x7f426bdbb870"/>
        <function-ref name="granted" scoped="" ref="0x7f426bdbba00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426bdbbb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f426bd6e820" loc="296:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f426bd6e820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426bd6eba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f426bd6ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f426bdb1800" loc="94:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f426bdb1800"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426bdb1b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426bdb1d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f426bd93c10" loc="99:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f426bd93c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426bd92020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426bd921b0"/>
        <function-ref name="request" scoped="" ref="0x7f426bd92340"/>
        <function-ref name="granted" scoped="" ref="0x7f426bd924d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426bd92660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f426bdb3640" loc="92:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f426bdb3640"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f426bdb39c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426bdb3020" loc="91:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426bdb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426bdb33a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f426bd94800" loc="98:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f426bd94800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f426bd94b80"/>
        <function-ref name="sleep" scoped="" ref="0x7f426bd931b0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f426bdae020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f426bd93340"/>
        <function-ref name="initMaster" scoped="" ref="0x7f426bdae340"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f426bdae4d0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f426bdae660"/>
        <function-ref name="read" scoped="" ref="0x7f426bdae7f0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f426bdae980"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f426bdaeb10"/>
        <function-ref name="setClock" scoped="" ref="0x7f426bdaeca0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f426bdaee30"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f426bdad020"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f426bdad2b0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f426bdad440"/>
        <function-ref name="write" scoped="" ref="0x7f426bdad5d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f426bdad760"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f426bdad8f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f426bdada80"/>
        <function-ref name="getClock" scoped="" ref="0x7f426bdadc10"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f426bdadda0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f426bd94d10"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f426bdae1b0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f426bd93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f426bdb3c80" loc="93:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f426bdb3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f426bdb10a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f426bdb1230"/>
        <function-ref name="splitRead" scoped="" ref="0x7f426bdb13c0"/>
        <function-ref name="write" scoped="" ref="0x7f426bdb1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426bdb0530" loc="95:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426bdb0530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426bdb08b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426bdb0a40"/>
        <function-ref name="request" scoped="" ref="0x7f426bdb0bd0"/>
        <function-ref name="granted" scoped="" ref="0x7f426bdb0d60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426bdaf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f426bd8d1e0" loc="100:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426bd8d1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426bd8d560"/>
        <function-ref name="userId" scoped="" ref="0x7f426bd8d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f426bd8d9d0" loc="101:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f426bd8d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f426bd8dd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f426bd44610" loc="76:/home/punit/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f426bd44610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f426bd44990"/>
        <function-ref name="sleep" scoped="" ref="0x7f426bd40e30"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f426bd44cb0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f426bd3f020"/>
        <function-ref name="initMaster" scoped="" ref="0x7f426bd41020"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f426bd411b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f426bd41340"/>
        <function-ref name="read" scoped="" ref="0x7f426bd414d0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f426bd41660"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f426bd417f0"/>
        <function-ref name="setClock" scoped="" ref="0x7f426bd41980"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f426bd41b10"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f426bd41ca0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f426bd40020"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f426bd401b0"/>
        <function-ref name="write" scoped="" ref="0x7f426bd40340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f426bd404d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f426bd40660"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f426bd407f0"/>
        <function-ref name="getClock" scoped="" ref="0x7f426bd40980"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f426bd40b10"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f426bd44b20"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f426bd44e40"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f426bd40ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f426bd33ca0" loc="81:/home/punit/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f426bd33ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bd320a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bd32230"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bd323c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bd32550"/>
        <function-ref name="get" scoped="" ref="0x7f426bd326e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bd32870"/>
        <function-ref name="set" scoped="" ref="0x7f426bd32a00"/>
        <function-ref name="clr" scoped="" ref="0x7f426bd32b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f426bd367e0" loc="79:/home/punit/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f426bd367e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bd36b60"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bd36cf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bd36e80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bd34030"/>
        <function-ref name="get" scoped="" ref="0x7f426bd341c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bd34350"/>
        <function-ref name="set" scoped="" ref="0x7f426bd344e0"/>
        <function-ref name="clr" scoped="" ref="0x7f426bd34670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f426bd375a0" loc="78:/home/punit/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f426bd375a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bd37920"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bd37ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bd37c40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bd37dd0"/>
        <function-ref name="get" scoped="" ref="0x7f426bd36020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bd361b0"/>
        <function-ref name="set" scoped="" ref="0x7f426bd36340"/>
        <function-ref name="clr" scoped="" ref="0x7f426bd364d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f426bd35c90" loc="75:/home/punit/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f426bd35c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f426bd370a0"/>
        <function-ref name="stop" scoped="" ref="0x7f426bd37230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f426bd31020" loc="82:/home/punit/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f426bd31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f426bd313a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f426bd3b4e0" loc="74:/home/punit/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f426bd3b4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f426bd3b860"/>
        <function-ref name="sleep" scoped="" ref="0x7f426bd39e30"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f426bd3bb80"/>
        <function-ref name="dataReady" scoped="" ref="0x7f426bd38020"/>
        <function-ref name="initMaster" scoped="" ref="0x7f426bd3a020"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f426bd3a1b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f426bd3a340"/>
        <function-ref name="read" scoped="" ref="0x7f426bd3a4d0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f426bd3a660"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f426bd3a7f0"/>
        <function-ref name="setClock" scoped="" ref="0x7f426bd3a980"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f426bd3ab10"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f426bd3aca0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f426bd39020"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f426bd391b0"/>
        <function-ref name="write" scoped="" ref="0x7f426bd39340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f426bd394d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f426bd39660"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f426bd397f0"/>
        <function-ref name="getClock" scoped="" ref="0x7f426bd39980"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f426bd39b10"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f426bd3b9f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f426bd3bd10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f426bd39ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f426bd34990" loc="80:/home/punit/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f426bd34990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bd34d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bd33020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bd331b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bd33340"/>
        <function-ref name="get" scoped="" ref="0x7f426bd334d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bd33660"/>
        <function-ref name="set" scoped="" ref="0x7f426bd337f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426bd33980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f426bc86150" loc="86:/home/punit/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f426bc86150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f426bc864f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426bc86680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f426bc851f0" loc="89:/home/punit/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426bc851f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f426bc85590"/>
        <function-ref name="configure" scoped="" ref="0x7f426bc85720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426bc88390" loc="85:/home/punit/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426bc88390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426bc88730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426bc888c0"/>
        <function-ref name="request" scoped="" ref="0x7f426bc88a50"/>
        <function-ref name="granted" scoped="" ref="0x7f426bc88be0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426bc88d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f426bc868d0" loc="87:/home/punit/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426bc868d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426bc86c50"/>
        <function-ref name="userId" scoped="" ref="0x7f426bc86de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426ac62d70" loc="44:/home/punit/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426ac62d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426ac61180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f426ac61410" loc="45:/home/punit/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f426ac61410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f426ac61790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f426ac61920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f426ac61ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f426ac61c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f426ac5d220" loc="52:/home/punit/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f426ac5d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f426ac5d5c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426ac5d750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f426ac5c400" loc="56:/home/punit/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426ac5c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f426ac5c7a0"/>
        <function-ref name="configure" scoped="" ref="0x7f426ac5c930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f426ac5cbc0" loc="57:/home/punit/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f426ac5cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f426ac59020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f426ac591b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f426ac59340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f426ac594d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426ac5e490" loc="51:/home/punit/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426ac5e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426ac5e830"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426ac5e9c0"/>
        <function-ref name="request" scoped="" ref="0x7f426ac5eb50"/>
        <function-ref name="granted" scoped="" ref="0x7f426ac5ece0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426ac5ee70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f426ac5d9a0" loc="53:/home/punit/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426ac5d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426ac5dd20"/>
        <function-ref name="userId" scoped="" ref="0x7f426ac5c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f426ac597a0" loc="69:/home/punit/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f426ac597a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426ac59b20"/>
        <function-ref name="runTask" scoped="" ref="0x7f426ac59cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f426bc7be40" loc="45:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f426bc7be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bc7a1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bc7a370"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bc7a500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bc7a690"/>
        <function-ref name="get" scoped="" ref="0x7f426bc7a820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bc7a9b0"/>
        <function-ref name="set" scoped="" ref="0x7f426bc7ab40"/>
        <function-ref name="clr" scoped="" ref="0x7f426bc7acd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426bc7c3b0" loc="40:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426bc7c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426bc7c730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426bc7c8c0"/>
        <function-ref name="request" scoped="" ref="0x7f426bc7ca50"/>
        <function-ref name="granted" scoped="" ref="0x7f426bc7cbe0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426bc7cd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f426bc7b170" loc="44:/home/punit/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f426bc7b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426bc7b4f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426bc7b680"/>
        <function-ref name="request" scoped="" ref="0x7f426bc7b810"/>
        <function-ref name="granted" scoped="" ref="0x7f426bc7b9a0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426bc7bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f426bc67110" loc="46:/home/punit/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f426bc67110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f426bc67490"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f426bc67620"/>
        <function-ref name="led1On" scoped="" ref="0x7f426bc677b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f426bc67940"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f426bc67ad0"/>
        <function-ref name="get" scoped="" ref="0x7f426bc67c60"/>
        <function-ref name="led1Off" scoped="" ref="0x7f426bc67df0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f426bc664d0"/>
        <function-ref name="set" scoped="" ref="0x7f426bc66020"/>
        <function-ref name="led0On" scoped="" ref="0x7f426bc661b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f426bc66340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f426bc60210" loc="50:/home/punit/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f426bc60210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bc60590"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bc60720"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bc608b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bc60a40"/>
        <function-ref name="get" scoped="" ref="0x7f426bc60bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bc60d60"/>
        <function-ref name="set" scoped="" ref="0x7f426bc5f020"/>
        <function-ref name="clr" scoped="" ref="0x7f426bc5f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426bc62470" loc="46:/home/punit/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426bc62470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426bc627f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f426bc5f4d0" loc="51:/home/punit/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f426bc5f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bc5f850"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bc5f9e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bc5fb70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bc5fd00"/>
        <function-ref name="get" scoped="" ref="0x7f426bc5e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bc5e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f426bc5e340"/>
        <function-ref name="clr" scoped="" ref="0x7f426bc5e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f426bc62a70" loc="47:/home/punit/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f426bc62a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f426bc62df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f426bc61020"/>
        <function-ref name="led1On" scoped="" ref="0x7f426bc611b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f426bc61340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f426bc614d0"/>
        <function-ref name="get" scoped="" ref="0x7f426bc61660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f426bc617f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f426bc61e30"/>
        <function-ref name="set" scoped="" ref="0x7f426bc61980"/>
        <function-ref name="led0On" scoped="" ref="0x7f426bc61b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f426bc61ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f426bc5e7f0" loc="52:/home/punit/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f426bc5e7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bc5eb70"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bc5ed00"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bc5d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bc5d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f426bc5d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bc5d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f426bc5d660"/>
        <function-ref name="clr" scoped="" ref="0x7f426bc5d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f426bc63e00" loc="44:/home/punit/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f426bc63e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bc421c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bc42350"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bc424e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bc42670"/>
        <function-ref name="get" scoped="" ref="0x7f426bc42800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bc42990"/>
        <function-ref name="set" scoped="" ref="0x7f426bc42b20"/>
        <function-ref name="clr" scoped="" ref="0x7f426bc42cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f426bc41060" loc="45:/home/punit/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f426bc41060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bc413e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bc41570"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bc41700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bc41890"/>
        <function-ref name="get" scoped="" ref="0x7f426bc41a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bc41bb0"/>
        <function-ref name="set" scoped="" ref="0x7f426bc41d40"/>
        <function-ref name="clr" scoped="" ref="0x7f426bc40020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f426bc3f600" loc="47:/home/punit/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426bc3f600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426bc3f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f426bc40380" loc="46:/home/punit/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f426bc40380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bc40700"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bc40890"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bc40a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bc40bb0"/>
        <function-ref name="get" scoped="" ref="0x7f426bc40d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bc3f020"/>
        <function-ref name="set" scoped="" ref="0x7f426bc3f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426bc3f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f426bbe5c60" loc="69:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f426bbe5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbe4210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbe43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f426bbf0da0" loc="47:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f426bbf0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbef180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f426bbe9b50" loc="63:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f426bbe9b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbe8020"/>
        <function-ref name="write" scoped="" ref="0x7f426bbe81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f426bbe3670" loc="72:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f426bbe3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbe39f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbe3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f426bbe3e50" loc="73:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f426bbe3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbe2210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbe23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f426bbd7670" loc="94:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f426bbd7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbd79f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbd7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f426bbda670" loc="90:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f426bbda670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbda9f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbdab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f426bbee120" loc="50:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f426bbee120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbee4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f426bbdb670" loc="88:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f426bbdb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbdb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbdbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f426bbe8c60" loc="65:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f426bbe8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbe6020"/>
        <function-ref name="write" scoped="" ref="0x7f426bbe61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f426bbe6c60" loc="67:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f426bbe6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbe5020"/>
        <function-ref name="write" scoped="" ref="0x7f426bbe51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f426bbdfe50" loc="79:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f426bbdfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbde210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbde3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f426bbe2670" loc="74:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f426bbe2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbe29f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbe2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f426bbf1760" loc="42:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426bbf1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f426bbf1ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f426bbf1c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f426bbf1e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f426bbecaa0" loc="54:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f426bbecaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbece20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f426bbeb120" loc="55:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f426bbeb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbeb5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f426bbeb870" loc="56:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f426bbeb870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbebbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f426bbdbe50" loc="89:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f426bbdbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbda210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbda3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f426bbeedc0" loc="52:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f426bbeedc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbec180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f426bbe6480" loc="66:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f426bbe6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbe6800"/>
        <function-ref name="write" scoped="" ref="0x7f426bbe6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f426bbe8480" loc="64:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f426bbe8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbe8800"/>
        <function-ref name="write" scoped="" ref="0x7f426bbe8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f426bbf0750" loc="46:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f426bbf0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbf0ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f426bbd8e50" loc="93:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f426bbd8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbd7210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbd73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f426bbdae50" loc="91:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f426bbdae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbd8210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbd83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f426bbde670" loc="80:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f426bbde670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbde9f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbdeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f426bbdce50" loc="87:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f426bbdce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbdb210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbdb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f426bbe1670" loc="76:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f426bbe1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbe19f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbe1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f426bbd7e50" loc="97:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f426bbd7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f426bbd6610"/>
        <function-ref name="writeDone" scoped="" ref="0x7f426bbd67a0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbd6930"/>
        <function-ref name="beginRead" scoped="" ref="0x7f426bbd6ac0"/>
        <function-ref name="readDone" scoped="" ref="0x7f426bbd6c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f426bbf0100" loc="45:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f426bbf0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbf0480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f426bbe9370" loc="62:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f426bbe9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbe96f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbe9880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f426bbe5480" loc="68:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f426bbe5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbe5800"/>
        <function-ref name="write" scoped="" ref="0x7f426bbe5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f426bbe2e50" loc="75:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f426bbe2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbe1210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbe13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f426bbe4670" loc="70:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f426bbe4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbe49f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbe4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f426bbef450" loc="48:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f426bbef450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbef7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f426bbe4e50" loc="71:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f426bbe4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbe3210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbe33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426bbf29e0" loc="41:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426bbf29e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426bbf2d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426bbf1020"/>
        <function-ref name="request" scoped="" ref="0x7f426bbf11b0"/>
        <function-ref name="granted" scoped="" ref="0x7f426bbf1340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426bbf14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f426bbea020" loc="57:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f426bbea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbea3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f426bbeacc0" loc="59:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f426bbeacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbe90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f426bbdc670" loc="86:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f426bbdc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbdc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbdcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f426bbdde50" loc="85:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f426bbdde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbdc210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbdc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f426bbec450" loc="53:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f426bbec450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbec7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f426bbdd670" loc="82:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f426bbdd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbdd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbddb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f426bbd8670" loc="92:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f426bbd8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbd89f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbd8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f426bbdee50" loc="81:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f426bbdee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbdd210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbdd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f426bbefaa0" loc="49:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f426bbefaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbefe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f426bbdf670" loc="78:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f426bbdf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbdf9f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbdfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f426bbee770" loc="51:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f426bbee770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbeeaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f426bbe1e50" loc="77:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f426bbe1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbdf210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbdf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f426bbea670" loc="58:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f426bbea670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbea9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f426bbd5020" loc="98:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f426bbd5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f426bbd53a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f426bbd5530"/>
        <function-ref name="write" scoped="" ref="0x7f426bbd56c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f426bbd5850"/>
        <function-ref name="readDone" scoped="" ref="0x7f426bbd59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f426bbc2c60" loc="69:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f426bbc2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbc1210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbc13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f426bbcdda0" loc="47:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f426bbcdda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbcb180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f426bbc5b50" loc="63:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f426bbc5b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbc4020"/>
        <function-ref name="write" scoped="" ref="0x7f426bbc41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f426bbc0670" loc="72:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f426bbc0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbc09f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbc0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f426bbc0e50" loc="73:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f426bbc0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbbe210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbbe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f426bbb4670" loc="94:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f426bbb4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbb49f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbb4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f426bbb6670" loc="90:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f426bbb6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbb69f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbb6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f426bbca120" loc="50:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f426bbca120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbca4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f426bbb7670" loc="88:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f426bbb7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbb79f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbb7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f426bbc4c60" loc="65:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f426bbc4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbc3020"/>
        <function-ref name="write" scoped="" ref="0x7f426bbc31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f426bbc3c60" loc="67:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f426bbc3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbc2020"/>
        <function-ref name="write" scoped="" ref="0x7f426bbc21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f426bbbce50" loc="79:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f426bbbce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbbb210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbbb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f426bbbe670" loc="74:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f426bbbe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbbe9f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbbeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f426bbce760" loc="42:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426bbce760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f426bbceae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f426bbcec70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f426bbcee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f426bbc9aa0" loc="54:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f426bbc9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbc9e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f426bbc8120" loc="55:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f426bbc8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbc85a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f426bbc8870" loc="56:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f426bbc8870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbc8bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f426bbb7e50" loc="89:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f426bbb7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbb6210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbb63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f426bbcadc0" loc="52:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f426bbcadc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbc9180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f426bbc3480" loc="66:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f426bbc3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbc3800"/>
        <function-ref name="write" scoped="" ref="0x7f426bbc3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f426bbc4480" loc="64:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f426bbc4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbc4800"/>
        <function-ref name="write" scoped="" ref="0x7f426bbc4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f426bbcd750" loc="46:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f426bbcd750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbcdad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f426bbb5e50" loc="93:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f426bbb5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbb4210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbb43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f426bbb6e50" loc="91:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f426bbb6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbb5210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbb53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f426bbbb670" loc="80:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f426bbbb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbbb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbbbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f426bbb8e50" loc="87:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f426bbb8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbb7210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbb73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f426bbbd670" loc="76:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f426bbbd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbbd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbbdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f426bbb4e50" loc="97:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f426bbb4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f426bbb3610"/>
        <function-ref name="writeDone" scoped="" ref="0x7f426bbb37a0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbb3930"/>
        <function-ref name="beginRead" scoped="" ref="0x7f426bbb3ac0"/>
        <function-ref name="readDone" scoped="" ref="0x7f426bbb3c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f426bbcd100" loc="45:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f426bbcd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbcd480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f426bbc5370" loc="62:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f426bbc5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbc56f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbc5880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f426bbc2480" loc="68:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f426bbc2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbc2800"/>
        <function-ref name="write" scoped="" ref="0x7f426bbc2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f426bbbee50" loc="75:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f426bbbee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbbd210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbbd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f426bbc1670" loc="70:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f426bbc1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbc19f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbc1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f426bbcb450" loc="48:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f426bbcb450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbcb7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f426bbc1e50" loc="71:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f426bbc1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbc0210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbc03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426bbcfaa0" loc="41:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426bbcfaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426bbcfe20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426bbce020"/>
        <function-ref name="request" scoped="" ref="0x7f426bbce1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f426bbce340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426bbce4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f426bbc7020" loc="57:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f426bbc7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbc73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f426bbc7cc0" loc="59:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f426bbc7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbc50a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f426bbb8670" loc="86:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f426bbb8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbb89f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbb8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f426bbbae50" loc="85:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f426bbbae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbb8210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbb83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f426bbc9450" loc="53:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f426bbc9450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbc97d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f426bbba670" loc="82:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f426bbba670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbba9f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbbab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f426bbb5670" loc="92:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f426bbb5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbb59f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbb5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f426bbbbe50" loc="81:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f426bbbbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbba210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbba3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f426bbcbaa0" loc="49:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f426bbcbaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbcbe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f426bbbc670" loc="78:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f426bbbc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbbc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f426bbbcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f426bbca770" loc="51:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f426bbca770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbcaaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f426bbbde50" loc="77:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f426bbbde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bbbc210"/>
        <function-ref name="write" scoped="" ref="0x7f426bbbc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f426bbc7670" loc="58:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f426bbc7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bbc79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f426bbb2020" loc="98:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f426bbb2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f426bbb23a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f426bbb2530"/>
        <function-ref name="write" scoped="" ref="0x7f426bbb26c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f426bbb2850"/>
        <function-ref name="readDone" scoped="" ref="0x7f426bbb29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f426bbabb90" loc="54:/home/punit/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f426bbabb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f426bba8020"/>
        <function-ref name="changed" scoped="" ref="0x7f426bba81b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f426bba8340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f426bba84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f426bb98020" loc="40:/home/punit/tinyos-main/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f426bb98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f426bb983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f426bb86cb0" loc="46:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f426bb86cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f426bb840a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f426bb84230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f426bb843c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f426bb84550"/>
        <function-ref name="setCca" scoped="" ref="0x7f426bb846e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f426bb84870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f426bb809f0" loc="47:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f426bb809f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f426bb80d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f426bb86020" loc="45:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f426bb86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426bb863a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f426bb86530"/>
        <function-ref name="modify" scoped="" ref="0x7f426bb866c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426bb86850"/>
        <function-ref name="resend" scoped="" ref="0x7f426bb869e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f426bb896d0" loc="44:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f426bb896d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f426bb89a50"/>
        <function-ref name="stop" scoped="" ref="0x7f426bb89be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f426bb83190" loc="48:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7f426bb83190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f426bb83510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f426bb5c0c0" loc="51:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f426bb5c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f426bb5c440"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f426bb5c5d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f426bb5c760"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f426bb5c8f0"/>
        <function-ref name="setCca" scoped="" ref="0x7f426bb5ca80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f426bb5cc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f426bb54200" loc="58:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f426bb54200"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f426c695d50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f426bb527c0"/>
        <function-ref name="clear" scoped="" ref="0x7f426bb51020"/>
        <function-ref name="isValid" scoped="" ref="0x7f426bb52090"/>
        <function-ref name="set" scoped="" ref="0x7f426bb51750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f426bb3d990" loc="78:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f426bb3d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bb3dd10"/>
        <function-ref name="write" scoped="" ref="0x7f426bb3c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f426bb3c380" loc="79:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f426bb3c380"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bb3c700"/>
        <function-ref name="write" scoped="" ref="0x7f426bb3c890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f426bb5b060" loc="52:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f426bb5b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f426bb5b3e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f426bb41e60" loc="72:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f426bb41e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bb3f210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f426bb4f1e0" loc="60:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7f426bb4f1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f426bb4f560"/>
        <function-ref name="disable" scoped="" ref="0x7f426bb4f6f0"/>
        <function-ref name="captured" scoped="" ref="0x7f426bb4f880"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f426bb4fa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f426bb5a220" loc="55:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x7f426bb5a220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f426c695d50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426bb57b30"/>
        <function-ref name="fired" scoped="" ref="0x7f426bb59a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f426bb574e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426bb57020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f426bb56020"/>
        <function-ref name="start" scoped="" ref="0x7f426bb59090"/>
        <function-ref name="stop" scoped="" ref="0x7f426bb595a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f426bb564d0" loc="56:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f426bb564d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f426bb56850"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f426bb569e0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f426bb56b70"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f426bb56d00"/>
        <function-ref name="getPower" scoped="" ref="0x7f426bb55020"/>
        <function-ref name="getLqi" scoped="" ref="0x7f426bb551b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f426bb43d80" loc="68:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f426bb43d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bb42180"/>
        <function-ref name="write" scoped="" ref="0x7f426bb42310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f426bb426b0" loc="69:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f426bb426b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bb42a30"/>
        <function-ref name="write" scoped="" ref="0x7f426bb42bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f426bb36780" loc="83:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7f426bb36780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426bb36b00"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f426bb36c90"/>
        <function-ref name="sfd" scoped="" ref="0x7f426bb36e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f426bb5d3b0" loc="50:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f426bb5d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426bb5d730"/>
        <function-ref name="cancel" scoped="" ref="0x7f426bb5d8c0"/>
        <function-ref name="modify" scoped="" ref="0x7f426bb5da50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426bb5dbe0"/>
        <function-ref name="resend" scoped="" ref="0x7f426bb5dd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f426bb444e0" loc="66:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426bb444e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f426bb44860"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f426bb449f0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f426bb44b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f426bb3f5c0" loc="73:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f426bb3f5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bb3f940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f426bb4c080" loc="62:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f426bb4c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bb4c400"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bb4c590"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bb4c720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bb4c8b0"/>
        <function-ref name="get" scoped="" ref="0x7f426bb4ca40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bb4cbd0"/>
        <function-ref name="set" scoped="" ref="0x7f426bb4cd60"/>
        <function-ref name="clr" scoped="" ref="0x7f426bb46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426bb5e450" loc="48:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426bb5e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426bb5e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f426bb554f0" loc="57:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426bb554f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f426bb55870"/>
        <function-ref name="getHeader" scoped="" ref="0x7f426bb55a00"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f426bb55b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f426bb47570" loc="59:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f426bb47570"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f426bb478f0"/>
        <function-ref name="isSet" scoped="" ref="0x7f426bb47a80"/>
        <function-ref name="cancel" scoped="" ref="0x7f426bb47c10"/>
        <function-ref name="set" scoped="" ref="0x7f426bb47da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f426bb3fd00" loc="74:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f426bb3fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bb3e410"/>
        <function-ref name="write" scoped="" ref="0x7f426bb3e5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f426bb456e0" loc="65:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f426bb456e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426bb45a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426bb45bf0"/>
        <function-ref name="request" scoped="" ref="0x7f426bb45d80"/>
        <function-ref name="granted" scoped="" ref="0x7f426bb44020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426bb441b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f426bb4fd60" loc="61:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7f426bb4fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bb4e210"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bb4e3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bb4e530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bb4e6c0"/>
        <function-ref name="get" scoped="" ref="0x7f426bb4e850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bb4e9e0"/>
        <function-ref name="set" scoped="" ref="0x7f426bb4eb70"/>
        <function-ref name="clr" scoped="" ref="0x7f426bb4ed00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f426bb3cbf0" loc="80:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f426bb3cbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bb3b020"/>
        <function-ref name="write" scoped="" ref="0x7f426bb3b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f426bb3b530" loc="81:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f426bb3b530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bb3b8b0"/>
        <function-ref name="write" scoped="" ref="0x7f426bb3ba40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f426bb41020" loc="70:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f426bb41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bb413a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f426bb46370" loc="63:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7f426bb46370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426bb466f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426bb46880"/>
        <function-ref name="toggle" scoped="" ref="0x7f426bb46a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426bb46ba0"/>
        <function-ref name="get" scoped="" ref="0x7f426bb46d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426bb45020"/>
        <function-ref name="set" scoped="" ref="0x7f426bb451b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426bb45340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f426bb3a110" loc="84:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f426bb3a110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f426bb3a490"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f426bb3a620"/>
        <function-ref name="led1On" scoped="" ref="0x7f426bb3a7b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f426bb3a940"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f426bb3aad0"/>
        <function-ref name="get" scoped="" ref="0x7f426bb3ac60"/>
        <function-ref name="led1Off" scoped="" ref="0x7f426bb3adf0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f426bb394d0"/>
        <function-ref name="set" scoped="" ref="0x7f426bb39020"/>
        <function-ref name="led0On" scoped="" ref="0x7f426bb391b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f426bb39340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f426bb3d0c0" loc="77:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f426bb3d0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426bb3d440"/>
        <function-ref name="write" scoped="" ref="0x7f426bb3d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f426bb5ead0" loc="49:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f426bb5ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f426bb5ee50"/>
        <function-ref name="stop" scoped="" ref="0x7f426bb5d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f426bb43020" loc="67:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f426bb43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f426bb433a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f426bb43530"/>
        <function-ref name="write" scoped="" ref="0x7f426bb436c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f426bb43850"/>
        <function-ref name="readDone" scoped="" ref="0x7f426bb439e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f426bb41730" loc="71:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f426bb41730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bb41ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f426bb3e930" loc="76:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f426bb3e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426bb3ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f426bb5b7f0" loc="53:/home/punit/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7f426bb5b7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f426bb5bb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f426ba9bc60" loc="69:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f426ba9bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba9a210"/>
        <function-ref name="write" scoped="" ref="0x7f426ba9a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f426baa5020" loc="47:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f426baa5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426baa53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f426ba9fc70" loc="63:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f426ba9fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba9e020"/>
        <function-ref name="write" scoped="" ref="0x7f426ba9e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f426ba99670" loc="72:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f426ba99670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba999f0"/>
        <function-ref name="write" scoped="" ref="0x7f426ba99b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f426ba99e50" loc="73:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f426ba99e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba98210"/>
        <function-ref name="write" scoped="" ref="0x7f426ba983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f426ba8d670" loc="94:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f426ba8d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba8d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f426ba8db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f426ba90670" loc="90:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f426ba90670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba909f0"/>
        <function-ref name="write" scoped="" ref="0x7f426ba90b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f426baa4370" loc="50:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f426baa4370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426baa46f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f426ba91670" loc="88:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f426ba91670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba919f0"/>
        <function-ref name="write" scoped="" ref="0x7f426ba91b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f426ba9ec60" loc="65:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f426ba9ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba9d020"/>
        <function-ref name="write" scoped="" ref="0x7f426ba9d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f426ba9dc60" loc="67:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f426ba9dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba9b020"/>
        <function-ref name="write" scoped="" ref="0x7f426ba9b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f426ba95e50" loc="79:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f426ba95e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba94210"/>
        <function-ref name="write" scoped="" ref="0x7f426ba943a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f426ba98670" loc="74:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f426ba98670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba989f0"/>
        <function-ref name="write" scoped="" ref="0x7f426ba98b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f426baa78f0" loc="42:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426baa78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f426baa7c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f426baa7e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f426baa6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f426baa3d00" loc="54:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f426baa3d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426baa10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f426baa1370" loc="55:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f426baa1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426baa17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f426baa1ac0" loc="56:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f426baa1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426baa1e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f426ba91e50" loc="89:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f426ba91e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba90210"/>
        <function-ref name="write" scoped="" ref="0x7f426ba903a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f426baa3060" loc="52:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f426baa3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426baa33e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f426ba9d480" loc="66:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f426ba9d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba9d800"/>
        <function-ref name="write" scoped="" ref="0x7f426ba9d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f426ba9e480" loc="64:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f426ba9e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba9e800"/>
        <function-ref name="write" scoped="" ref="0x7f426ba9e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f426baa6940" loc="46:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f426baa6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426baa6cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f426ba8ee50" loc="93:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f426ba8ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba8d210"/>
        <function-ref name="write" scoped="" ref="0x7f426ba8d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f426ba90e50" loc="91:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f426ba90e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba8e210"/>
        <function-ref name="write" scoped="" ref="0x7f426ba8e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f426ba94670" loc="80:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f426ba94670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba949f0"/>
        <function-ref name="write" scoped="" ref="0x7f426ba94b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f426ba92e50" loc="87:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f426ba92e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba91210"/>
        <function-ref name="write" scoped="" ref="0x7f426ba913a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f426ba97670" loc="76:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f426ba97670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba979f0"/>
        <function-ref name="write" scoped="" ref="0x7f426ba97b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f426ba8de50" loc="97:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f426ba8de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f426ba8c610"/>
        <function-ref name="writeDone" scoped="" ref="0x7f426ba8c7a0"/>
        <function-ref name="write" scoped="" ref="0x7f426ba8c930"/>
        <function-ref name="beginRead" scoped="" ref="0x7f426ba8cac0"/>
        <function-ref name="readDone" scoped="" ref="0x7f426ba8cc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f426baa62f0" loc="45:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f426baa62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426baa6670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f426ba9f490" loc="62:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f426ba9f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba9f810"/>
        <function-ref name="write" scoped="" ref="0x7f426ba9f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f426ba9b480" loc="68:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f426ba9b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba9b800"/>
        <function-ref name="write" scoped="" ref="0x7f426ba9b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f426ba98e50" loc="75:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f426ba98e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba97210"/>
        <function-ref name="write" scoped="" ref="0x7f426ba973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f426ba9a670" loc="70:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f426ba9a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba9a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f426ba9ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f426baa5670" loc="48:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f426baa5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426baa59f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f426ba9ae50" loc="71:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f426ba9ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba99210"/>
        <function-ref name="write" scoped="" ref="0x7f426ba993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426baa8c30" loc="41:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426baa8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426baa7020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426baa71b0"/>
        <function-ref name="request" scoped="" ref="0x7f426baa7340"/>
        <function-ref name="granted" scoped="" ref="0x7f426baa74d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426baa7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f426baa0160" loc="57:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f426baa0160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426baa04e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f426baa0e00" loc="59:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f426baa0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426ba9f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f426ba92670" loc="86:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f426ba92670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba929f0"/>
        <function-ref name="write" scoped="" ref="0x7f426ba92b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f426ba93e50" loc="85:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f426ba93e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba92210"/>
        <function-ref name="write" scoped="" ref="0x7f426ba923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f426baa36b0" loc="53:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f426baa36b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426baa3a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f426ba93670" loc="82:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f426ba93670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba939f0"/>
        <function-ref name="write" scoped="" ref="0x7f426ba93b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f426ba8e670" loc="92:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f426ba8e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba8e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f426ba8eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f426ba94e50" loc="81:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f426ba94e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba93210"/>
        <function-ref name="write" scoped="" ref="0x7f426ba933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f426baa5cc0" loc="49:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f426baa5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426baa40a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f426ba95670" loc="78:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f426ba95670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba959f0"/>
        <function-ref name="write" scoped="" ref="0x7f426ba95b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f426baa49c0" loc="51:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f426baa49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426baa4d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f426ba97e50" loc="77:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f426ba97e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba95210"/>
        <function-ref name="write" scoped="" ref="0x7f426ba953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f426baa07b0" loc="58:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f426baa07b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426baa0b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f426ba8b020" loc="98:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f426ba8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f426ba8b3a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f426ba8b530"/>
        <function-ref name="write" scoped="" ref="0x7f426ba8b6c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f426ba8b850"/>
        <function-ref name="readDone" scoped="" ref="0x7f426ba8b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f426ba7e020" loc="42:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7f426ba7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426ba7e3a0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f426ba7e530"/>
        <function-ref name="sfd" scoped="" ref="0x7f426ba7e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f426ba7e9a0" loc="43:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f426ba7e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426ba7ed20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f426ba7d1a0" loc="44:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7f426ba7d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f426ba7d520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f426ba81680" loc="41:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f426ba81680"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f426ba81a00"/>
        <function-ref name="stop" scoped="" ref="0x7f426ba81b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f426ba75390" loc="54:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7f426ba75390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426ba75710"/>
        <function-ref name="isInput" scoped="" ref="0x7f426ba758a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426ba75a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426ba75bc0"/>
        <function-ref name="get" scoped="" ref="0x7f426ba75d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426ba74020"/>
        <function-ref name="set" scoped="" ref="0x7f426ba741b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426ba74340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f426ba6eb90" loc="64:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f426ba6eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f426ba6d020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f426ba6d1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f426ba6d340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f426ba6d4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f426ba6d660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f426ba6d7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f426ba6d980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f426ba6db10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f426ba6dca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f426ba6de30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f426ba6c020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f426ba6c1b0"/>
        <function-ref name="sync" scoped="" ref="0x7f426ba6c340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f426ba6c5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f426ba6c760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f426ba579d0" loc="148:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x7f426ba579d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426ba57d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f426ba56020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f426ba6cd70" loc="65:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f426ba6cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f426c695d50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f426ba6a330"/>
        <function-ref name="clear" scoped="" ref="0x7f426ba6aa60"/>
        <function-ref name="isValid" scoped="" ref="0x7f426ba6bba0"/>
        <function-ref name="set" scoped="" ref="0x7f426ba68210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f426ba746b0" loc="55:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7f426ba746b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426ba74a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f426ba74bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426ba74d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426ba73020"/>
        <function-ref name="get" scoped="" ref="0x7f426ba731b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426ba73340"/>
        <function-ref name="set" scoped="" ref="0x7f426ba734d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426ba73660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f426ba67cb0" loc="69:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f426ba67cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba660a0"/>
        <function-ref name="write" scoped="" ref="0x7f426ba66230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f426ba66590" loc="70:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f426ba66590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba66910"/>
        <function-ref name="write" scoped="" ref="0x7f426ba66aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f426ba656d0" loc="72:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f426ba656d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba65a50"/>
        <function-ref name="write" scoped="" ref="0x7f426ba65be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f426ba6f330" loc="62:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f426ba6f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f426ba6f6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f426ba6f840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f426ba6f9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f426ba6fb60"/>
        <function-ref name="getPower" scoped="" ref="0x7f426ba6fcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f426ba6fe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f426ba79850" loc="49:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7f426ba79850"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426ba79bd0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f426ba79d60"/>
        <function-ref name="sfd" scoped="" ref="0x7f426ba78020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f426ba703a0" loc="60:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f426ba703a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426ba70720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f426ba761a0" loc="53:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f426ba761a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426ba76520"/>
        <function-ref name="isInput" scoped="" ref="0x7f426ba766b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426ba76840"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426ba769d0"/>
        <function-ref name="get" scoped="" ref="0x7f426ba76b60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426ba76cf0"/>
        <function-ref name="set" scoped="" ref="0x7f426ba76e80"/>
        <function-ref name="clr" scoped="" ref="0x7f426ba75030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f426ba64020" loc="73:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f426ba64020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba643a0"/>
        <function-ref name="write" scoped="" ref="0x7f426ba64530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426ba7c810" loc="47:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426ba7c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426ba7cb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f426ba6e1e0" loc="63:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426ba6e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f426ba6e560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f426ba6e6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f426ba6e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f426ba78300" loc="50:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f426ba78300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426ba78680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f426ba726e0" loc="58:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f426ba726e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426ba72a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426ba72bf0"/>
        <function-ref name="request" scoped="" ref="0x7f426ba72d80"/>
        <function-ref name="granted" scoped="" ref="0x7f426ba71020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426ba711b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f426ba66e00" loc="71:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f426ba66e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba651c0"/>
        <function-ref name="write" scoped="" ref="0x7f426ba65350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f426ba71530" loc="59:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f426ba71530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f426ba718b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f426ba71a40"/>
        <function-ref name="write" scoped="" ref="0x7f426ba71bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f426ba71d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f426ba70020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f426ba648b0" loc="74:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f426ba648b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426ba64e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f426ba78aa0" loc="51:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7f426ba78aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f426ba78e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f426ba63150" loc="76:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f426ba63150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f426ba634d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f426ba63660"/>
        <function-ref name="led1On" scoped="" ref="0x7f426ba637f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f426ba63980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f426ba63b10"/>
        <function-ref name="get" scoped="" ref="0x7f426ba63ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f426ba63e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f426ba624d0"/>
        <function-ref name="set" scoped="" ref="0x7f426ba62020"/>
        <function-ref name="led0On" scoped="" ref="0x7f426ba621b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f426ba62340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f426ba673e0" loc="68:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f426ba673e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426ba67760"/>
        <function-ref name="write" scoped="" ref="0x7f426ba678f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f426ba68b10" loc="67:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f426ba68b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426ba67020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f426ba73a50" loc="56:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f426ba73a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426ba73dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f426ba72020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f426ba721b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f426ba72340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f426ba70ad0" loc="61:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f426ba70ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426ba6f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f426ba79020" loc="48:/home/punit/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f426ba79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f426ba793a0"/>
        <function-ref name="stop" scoped="" ref="0x7f426ba79530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f426b9f6a70" loc="44:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f426b9f6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f426b9f6df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f426b9fa680" loc="41:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f426b9fa680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f426b9faa00"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f426b9fab90"/>
        <function-ref name="getRssi" scoped="" ref="0x7f426b9fad20"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f426b9f7020"/>
        <function-ref name="getPower" scoped="" ref="0x7f426b9f71b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f426b9f7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f426b9f5550" loc="46:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f426b9f5550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f426c695d50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f426b9f4b00"/>
        <function-ref name="clear" scoped="" ref="0x7f426b9f22a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f426b9f43d0"/>
        <function-ref name="set" scoped="" ref="0x7f426b9f29d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f426b9f60c0" loc="43:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426b9f60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f426b9f6440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f426b9f65d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f426b9f6760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f426b9ed480" loc="48:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f426b9ed480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f426b9ed800"/>
        <function-ref name="isSet" scoped="" ref="0x7f426b9ed990"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b9edb20"/>
        <function-ref name="set" scoped="" ref="0x7f426b9edcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f426b9f1660" loc="47:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f426b9f1660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f426b9f0ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f426b9ee460"/>
        <function-ref name="isValid" scoped="" ref="0x7f426b9f05b0"/>
        <function-ref name="set" scoped="" ref="0x7f426b9eeb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f426b9f76e0" loc="42:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f426b9f76e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f426b9f7a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f426b9f7bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f426b9f7d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f426b9e7020" loc="49:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f426b9e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f426b9e73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f426b9ecd30" loc="46:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f426b9ecd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f426b9e90e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f426b9e9270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f426b9e9400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f426b9e9590"/>
        <function-ref name="getPower" scoped="" ref="0x7f426b9e9720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f426b9e98b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f426b9de4a0" loc="56:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f426b9de4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426b9de820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f426b9de9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b9deb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b9decd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f426b9dee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f426b9e7a80" loc="51:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f426b9e7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f426c695d50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f426b9e4020"/>
        <function-ref name="clear" scoped="" ref="0x7f426b9e4750"/>
        <function-ref name="isValid" scoped="" ref="0x7f426b9e68d0"/>
        <function-ref name="set" scoped="" ref="0x7f426b9e4e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f426b9e8640" loc="48:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426b9e8640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f426b9e89c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f426b9e8b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f426b9e8ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f426b9df8b0" loc="53:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f426b9df8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f426b9dfc30"/>
        <function-ref name="isSet" scoped="" ref="0x7f426b9dfdc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b9de020"/>
        <function-ref name="set" scoped="" ref="0x7f426b9de1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f426b9da820" loc="57:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f426b9da820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f426c695d50"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f426b9dc4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f426b9dcb80" loc="58:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f426b9dcb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f426b9db7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f426b9e3af0" loc="52:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f426b9e3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f426b9e00d0"/>
        <function-ref name="clear" scoped="" ref="0x7f426b9e0800"/>
        <function-ref name="isValid" scoped="" ref="0x7f426b9e2970"/>
        <function-ref name="set" scoped="" ref="0x7f426b9df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f426b9e9c50" loc="47:/home/punit/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f426b9e9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f426b9e8020"/>
        <function-ref name="noAck" scoped="" ref="0x7f426b9e81b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f426b9e8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f426b9884e0" loc="48:/home/punit/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f426b9884e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f426c695d50"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f426b97f150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f426b97f7c0" loc="49:/home/punit/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f426b97f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c6959e0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f426c695d50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f426b97e620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f426b97d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f426b97eae0"/>
        <function-ref name="overflow" scoped="" ref="0x7f426b97d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f426b977020" loc="46:/home/punit/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f426b977020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426b973630"/>
        <function-ref name="fired" scoped="" ref="0x7f426b976a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f426b974920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f426b9744a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f426b972020"/>
        <function-ref name="gett0" scoped="" ref="0x7f426b973ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426b974020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f426b977c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f426b973020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f426b976110"/>
        <function-ref name="stop" scoped="" ref="0x7f426b9765e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f426b972610" loc="47:/home/punit/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f426b972610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f426b9703d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426b978200" loc="45:/home/punit/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426b978200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426b978580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f426b967020" loc="29:/home/punit/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f426b967020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f426b967e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f426b965800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f426b965340"/>
        <function-ref name="overflow" scoped="" ref="0x7f426b965cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426b96c020" loc="27:/home/punit/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426b96c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426b96c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f426b96ca10" loc="28:/home/punit/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f426b96ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426b9682a0"/>
        <function-ref name="fired" scoped="" ref="0x7f426b9692a0"/>
        <function-ref name="startAt" scoped="" ref="0x7f426b969c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426b969760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f426b968760"/>
        <function-ref name="start" scoped="" ref="0x7f426b96b890"/>
        <function-ref name="stop" scoped="" ref="0x7f426b96bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f426b8f9530" loc="26:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f426b8f9530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426b8f6db0"/>
        <function-ref name="fired" scoped="" ref="0x7f426b8f8da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f426b8f6760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426b8f62a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f426b8f52a0"/>
        <function-ref name="start" scoped="" ref="0x7f426b8f83d0"/>
        <function-ref name="stop" scoped="" ref="0x7f426b8f88e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426b8fac80" loc="25:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426b8fac80"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f426c721660"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f426c721660"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426b8f90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f426b8f58d0" loc="27:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f426b8f58d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f426b8f4780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f426b8f3150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f426b8f4c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f426b8f3610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f426ab72c90" loc="31:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f426ab72c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f426ab710a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f426ab71230"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f426ab713c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f426ab71550"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f426ab716e0"/>
        <function-ref name="setControl" scoped="" ref="0x7f426ab71870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f426ab7e260" loc="26:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f426ab7e260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426ab7bb30"/>
        <function-ref name="fired" scoped="" ref="0x7f426ab7ca60"/>
        <function-ref name="startAt" scoped="" ref="0x7f426ab7b4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426ab7b020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f426ab7a020"/>
        <function-ref name="start" scoped="" ref="0x7f426ab7c090"/>
        <function-ref name="stop" scoped="" ref="0x7f426ab7c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426ab7f9f0" loc="25:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426ab7f9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426ab7fd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f426ab7a650" loc="27:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f426ab7a650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f426ab795b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f426ab77020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f426ab79a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f426ab774e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f426ab6c020" loc="33:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f426ab6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7f426ab6c3a0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7f426ab6c530"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7f426ab6c6c0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f426ab6c850"/>
        <function-ref name="getAssr" scoped="" ref="0x7f426ab6c9e0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f426ab6cb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f426ab71c20" loc="32:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f426ab71c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f426ab6e5d0"/>
        <function-ref name="fired" scoped="" ref="0x7f426ab6f2a0"/>
        <function-ref name="get" scoped="" ref="0x7f426ab708a0"/>
        <function-ref name="reset" scoped="" ref="0x7f426ab6f760"/>
        <function-ref name="isOn" scoped="" ref="0x7f426ab6ea90"/>
        <function-ref name="set" scoped="" ref="0x7f426ab70d60"/>
        <function-ref name="start" scoped="" ref="0x7f426ab6fc20"/>
        <function-ref name="stop" scoped="" ref="0x7f426ab6e110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f426ab77a90" loc="30:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f426ab77a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f426ab74e60"/>
        <function-ref name="test" scoped="" ref="0x7f426ab744e0"/>
        <function-ref name="get" scoped="" ref="0x7f426ab766f0"/>
        <function-ref name="setScale" scoped="" ref="0x7f426ab72350"/>
        <function-ref name="getScale" scoped="" ref="0x7f426ab72860"/>
        <function-ref name="reset" scoped="" ref="0x7f426ab755d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f426ab75110"/>
        <function-ref name="isOn" scoped="" ref="0x7f426ab749a0"/>
        <function-ref name="set" scoped="" ref="0x7f426ab76bb0"/>
        <function-ref name="start" scoped="" ref="0x7f426ab75a90"/>
        <function-ref name="stop" scoped="" ref="0x7f426ab74020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f426b8c0020" loc="74:/home/punit/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f426b8c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426b8c03a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f426b8c0530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f426b8c5cd0" loc="49:/home/punit/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f426b8c5cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426b8c1670"/>
        <function-ref name="fired" scoped="" ref="0x7f426b8c2550"/>
        <function-ref name="startAt" scoped="" ref="0x7f426b8c1020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426b8c2a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f426b8c1b30"/>
        <function-ref name="start" scoped="" ref="0x7f426b8c3b60"/>
        <function-ref name="stop" scoped="" ref="0x7f426b8c2090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f426b8ca830" loc="48:/home/punit/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f426b8ca830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426b8c6cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f426b8c7300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f426b8c60d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f426b8c7c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f426b8c5660"/>
        <function-ref name="gett0" scoped="" ref="0x7f426b8c51e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426b8c7780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f426b8c9480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f426b8c66e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f426b8c9950"/>
        <function-ref name="stop" scoped="" ref="0x7f426b8c9e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f426b870a00" loc="71:/home/punit/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f426b870a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426b870d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f426b86e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f426b875640" loc="49:/home/punit/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f426b875640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426b871c40"/>
        <function-ref name="fired" scoped="" ref="0x7f426b8721e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f426b871020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f426b872ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f426b870590"/>
        <function-ref name="gett0" scoped="" ref="0x7f426b870110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426b872660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f426b874390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f426b871630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f426b874860"/>
        <function-ref name="stop" scoped="" ref="0x7f426b874d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f426b87b150" loc="48:/home/punit/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f426b87b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426b876700"/>
        <function-ref name="fired" scoped="" ref="0x7f426b879c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f426b878a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f426b8785b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f426b875090"/>
        <function-ref name="gett0" scoped="" ref="0x7f426b876ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426b878110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f426b87bd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f426b8760d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f426b8792a0"/>
        <function-ref name="stop" scoped="" ref="0x7f426b879790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f426b86c2b0" loc="48:/home/punit/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f426b86c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f426b86b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f426b86b690" loc="49:/home/punit/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f426b86b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f426b86a5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f426b869020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f426b86aa70"/>
        <function-ref name="overflow" scoped="" ref="0x7f426b8694e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f426b852370" loc="45:/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f426b852370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426b84e870"/>
        <function-ref name="fired" scoped="" ref="0x7f426b851e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f426b850c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f426b850780"/>
        <function-ref name="getdt" scoped="" ref="0x7f426b84d1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f426b84ecf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426b850300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f426b851020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f426b84e260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f426b8514f0"/>
        <function-ref name="stop" scoped="" ref="0x7f426b8519c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f426b85cd90" loc="49:/home/punit/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f426b85cd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426b855220"/>
        <function-ref name="fired" scoped="" ref="0x7f426b8587f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f426b8575b0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f426b857130"/>
        <function-ref name="getdt" scoped="" ref="0x7f426b855b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f426b8556a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426b858c70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f426b8599a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f426b857bc0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f426b859e70"/>
        <function-ref name="stop" scoped="" ref="0x7f426b858370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f426b83d800" loc="69:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f426b83d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b83dd80"/>
        <function-ref name="write" scoped="" ref="0x7f426b83c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f426b848aa0" loc="47:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f426b848aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426b848e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f426b840800" loc="63:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f426b840800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b840b80"/>
        <function-ref name="write" scoped="" ref="0x7f426b840d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f426b83b2f0" loc="72:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f426b83b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b83b670"/>
        <function-ref name="write" scoped="" ref="0x7f426b83b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f426b83bad0" loc="73:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f426b83bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b83be50"/>
        <function-ref name="write" scoped="" ref="0x7f426b839020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f426b82f2f0" loc="94:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f426b82f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b82f670"/>
        <function-ref name="write" scoped="" ref="0x7f426b82f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f426b8312f0" loc="90:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f426b8312f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b831670"/>
        <function-ref name="write" scoped="" ref="0x7f426b831800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f426b847dc0" loc="50:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f426b847dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426b845180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f426b8322f0" loc="88:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f426b8322f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b832670"/>
        <function-ref name="write" scoped="" ref="0x7f426b832800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f426b83f800" loc="65:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f426b83f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b83fb80"/>
        <function-ref name="write" scoped="" ref="0x7f426b83fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f426b83e800" loc="67:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f426b83e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b83eb80"/>
        <function-ref name="write" scoped="" ref="0x7f426b83ed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f426b837ad0" loc="79:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f426b837ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b837e50"/>
        <function-ref name="write" scoped="" ref="0x7f426b836020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f426b8392f0" loc="74:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f426b8392f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b839670"/>
        <function-ref name="write" scoped="" ref="0x7f426b839800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f426b849440" loc="42:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f426b849440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f426b8497c0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f426b849950"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f426b849ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f426b844770" loc="54:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f426b844770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426b844af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f426b844dc0" loc="55:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f426b844dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426b843310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f426b8435e0" loc="56:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f426b8435e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426b843960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f426b832ad0" loc="89:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f426b832ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b832e50"/>
        <function-ref name="write" scoped="" ref="0x7f426b831020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f426b845aa0" loc="52:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f426b845aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426b845e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f426b83e020" loc="66:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f426b83e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b83e3a0"/>
        <function-ref name="write" scoped="" ref="0x7f426b83e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f426b83f020" loc="64:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f426b83f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b83f3a0"/>
        <function-ref name="write" scoped="" ref="0x7f426b83f530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f426b848450" loc="46:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f426b848450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426b8487d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f426b830ad0" loc="93:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f426b830ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b830e50"/>
        <function-ref name="write" scoped="" ref="0x7f426b82f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f426b831ad0" loc="91:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f426b831ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b831e50"/>
        <function-ref name="write" scoped="" ref="0x7f426b830020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f426b8362f0" loc="80:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f426b8362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b836670"/>
        <function-ref name="write" scoped="" ref="0x7f426b836800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f426b834ad0" loc="87:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f426b834ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b834e50"/>
        <function-ref name="write" scoped="" ref="0x7f426b832020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f426b8382f0" loc="76:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f426b8382f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b838670"/>
        <function-ref name="write" scoped="" ref="0x7f426b838800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f426b82fad0" loc="97:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f426b82fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f426b82e610"/>
        <function-ref name="writeDone" scoped="" ref="0x7f426b82e7a0"/>
        <function-ref name="write" scoped="" ref="0x7f426b82e930"/>
        <function-ref name="beginRead" scoped="" ref="0x7f426b82eac0"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b82ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f426b849db0" loc="45:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f426b849db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426b848180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f426b840020" loc="62:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f426b840020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b8403a0"/>
        <function-ref name="write" scoped="" ref="0x7f426b840530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f426b83d020" loc="68:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f426b83d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b83d3a0"/>
        <function-ref name="write" scoped="" ref="0x7f426b83d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f426b839ad0" loc="75:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f426b839ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b839e50"/>
        <function-ref name="write" scoped="" ref="0x7f426b838020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f426b83c2f0" loc="70:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f426b83c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b83c670"/>
        <function-ref name="write" scoped="" ref="0x7f426b83c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f426b847120" loc="48:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f426b847120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426b8474a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f426b83cad0" loc="71:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f426b83cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b83ce50"/>
        <function-ref name="write" scoped="" ref="0x7f426b83b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426b84a710" loc="41:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b84a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b84aa90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b84ac20"/>
        <function-ref name="request" scoped="" ref="0x7f426b84adb0"/>
        <function-ref name="granted" scoped="" ref="0x7f426b849020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b8491b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f426b843c30" loc="57:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f426b843c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426b842020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f426b842940" loc="59:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f426b842940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426b842cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f426b8342f0" loc="86:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f426b8342f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b834670"/>
        <function-ref name="write" scoped="" ref="0x7f426b834800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f426b835ad0" loc="85:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f426b835ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b835e50"/>
        <function-ref name="write" scoped="" ref="0x7f426b834020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f426b844120" loc="53:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f426b844120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426b8444a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f426b8352f0" loc="82:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f426b8352f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b835670"/>
        <function-ref name="write" scoped="" ref="0x7f426b835800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f426b8302f0" loc="92:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f426b8302f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b830670"/>
        <function-ref name="write" scoped="" ref="0x7f426b830800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f426b836ad0" loc="81:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f426b836ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b836e50"/>
        <function-ref name="write" scoped="" ref="0x7f426b835020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f426b847770" loc="49:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f426b847770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426b847af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f426b8372f0" loc="78:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f426b8372f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b837670"/>
        <function-ref name="write" scoped="" ref="0x7f426b837800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f426b845450" loc="51:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f426b845450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426b8457d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f426b838ad0" loc="77:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f426b838ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b838e50"/>
        <function-ref name="write" scoped="" ref="0x7f426b837020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f426b8422f0" loc="58:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f426b8422f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f426b842670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f426b82d020" loc="98:/home/punit/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f426b82d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f426b82d3a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f426b82d530"/>
        <function-ref name="write" scoped="" ref="0x7f426b82d6c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f426b82d850"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b82d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f426b801a20" loc="46:/home/punit/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f426b801a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f426b801da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f426b800020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f426b7ff920" loc="45:/home/punit/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f426b7ff920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426b801560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426b8059a0" loc="44:/home/punit/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426b8059a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426b805d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f426b7faa20" loc="48:/home/punit/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f426b7faa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f426b7fada0"/>
        <function-ref name="rand32" scoped="" ref="0x7f426b7f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f426b7fc940" loc="47:/home/punit/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f426b7fc940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426b7fa560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426b7fc080" loc="46:/home/punit/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426b7fc080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426b7fc400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f426b803aa0" loc="67:/home/punit/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f426b803aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f426b803e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f426b7fd020"/>
        <function-ref name="isState" scoped="" ref="0x7f426b7fd1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f426b7fd340"/>
        <function-ref name="requestState" scoped="" ref="0x7f426b7fd4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f426b7fd660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f426b7e3020" loc="44:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f426b7e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426b7e33a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b7e3530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b7e36c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b7e3850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426b7e39e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f426b7e4220" loc="40:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f426b7e4220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426b7e45a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b7e4730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b7e48c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b7e4a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426b7e4be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f426b7dfe60" loc="45:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f426b7dfe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426b7de210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b7de3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b7de530"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b7de6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426b7de850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f426b7e2a20" loc="40:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f426b7e2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426b7e2da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b7df020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b7df1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b7df340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426b7df4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f426b7dd8f0" loc="47:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f426b7dd8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f426b7ddc70"/>
        <function-ref name="rand32" scoped="" ref="0x7f426b7dde00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426b7df750" loc="41:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426b7df750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426b7dfad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f426b7db170" loc="48:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426b7db170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f426b7db4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f426b7db680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f426b7db810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f426b7deae0" loc="46:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f426b7deae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f426b7dee60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f426b7dd020"/>
        <function-ref name="isState" scoped="" ref="0x7f426b7dd1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f426b7dd340"/>
        <function-ref name="requestState" scoped="" ref="0x7f426b7dd4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f426b7dd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f426b7cb690" loc="67:/home/punit/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f426b7cb690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f426b7cba10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f426b7cbba0"/>
        <function-ref name="isState" scoped="" ref="0x7f426b7cbd30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f426b7ca020"/>
        <function-ref name="requestState" scoped="" ref="0x7f426b7ca1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f426b7ca340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f426b7c4950" loc="47:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f426b7c4950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426b7c4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f426b7c7ab0" loc="42:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f426b7c7ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426b7c7e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f426b7c4200" loc="43:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f426b7c4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426b7c4580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f426b7bf3f0" loc="49:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f426b7bf3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426b7bf770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426b7c0b70" loc="45:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426b7c0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426b7bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f426b7c3e40" loc="43:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f426b7c3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426b7c01e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f426b7bfa70" loc="50:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426b7bfa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f426b7bfdf0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f426b7be020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f426b7be1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f426b7c0570" loc="44:/home/punit/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f426b7c0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426b7c08f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f426b790020" loc="75:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f426b790020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426b7903a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f426b7906b0" loc="76:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f426b7906b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426b790a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b790bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b790d50"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b78f020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426b78f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f426b795960" loc="65:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f426b795960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426b795ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b795e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b793030"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b7931c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426b793350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f426b793ca0" loc="68:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7f426b793ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426b7920a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b792230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b7923c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b792550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426b7926e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f426b7935f0" loc="66:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f426b7935f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426b793970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426b796cb0" loc="64:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b796cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b7950a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b795230"/>
        <function-ref name="request" scoped="" ref="0x7f426b7953c0"/>
        <function-ref name="granted" scoped="" ref="0x7f426b795550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b7956e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f426b792a50" loc="69:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7f426b792a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426b792dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f426b791170" loc="71:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7f426b791170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426b7914f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f426b791680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b791810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b7919a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f426b791b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f426b786d70" loc="58:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f426b786d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426b785180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b785310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b7854a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b785630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426b7857c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f426b785b10" loc="59:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f426b785b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426b784020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f426b757db0" loc="180:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x7f426b757db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426b756180"/>
        <function-ref name="runTask" scoped="" ref="0x7f426b756310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f426b7842f0" loc="60:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f426b7842f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f426b784670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f426b784800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f426b784990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f426b784b20"/>
        <function-ref name="getPower" scoped="" ref="0x7f426b784cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f426b784e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f426b789a20" loc="51:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7f426b789a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426b789da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b788020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b7881b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b788340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426b7884d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f426b783b70" loc="62:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f426b783b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f426b782020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f426b7821b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f426b782340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f426b7824d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f426b783170" loc="61:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426b783170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f426b7834f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f426b783680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f426b783810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f426b789370" loc="49:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f426b789370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426b7896f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426b78b7b0" loc="46:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b78b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b78bb30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b78bcc0"/>
        <function-ref name="request" scoped="" ref="0x7f426b78be50"/>
        <function-ref name="granted" scoped="" ref="0x7f426b78a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b78a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f426b78a4d0" loc="48:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f426b78a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426b78a850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b78a9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b78ab70"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b78ad00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426b789020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f426b788840" loc="52:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7f426b788840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426b788bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f426b786020" loc="54:/home/punit/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7f426b786020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426b7863a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f426b786530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b7866c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b786850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f426b7869e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426b737dd0" loc="44:/home/punit/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426b737dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426b736180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f426b736410" loc="45:/home/punit/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f426b736410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f426b736790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f426b736920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f426b736ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f426b736c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f426b72ab80" loc="46:/home/punit/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f426b72ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f426b729020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f426b7291b0"/>
        <function-ref name="start" scoped="" ref="0x7f426b729340"/>
        <function-ref name="stop" scoped="" ref="0x7f426b7294d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f426b727860" loc="51:/home/punit/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f426b727860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426b727be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b727d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b726020"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b7261b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426b726340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f426b726690" loc="52:/home/punit/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f426b726690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426b726a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f426b72fcf0" loc="43:/home/punit/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f426b72fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426b72b0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b72b230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b72b3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b72b550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426b72b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f426b72a080" loc="45:/home/punit/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f426b72a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f426b72a400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f426b72a590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f426b72a720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f426b72a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f426b729800" loc="47:/home/punit/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7f426b729800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f426b729b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f426b729d10"/>
        <function-ref name="isState" scoped="" ref="0x7f426b727020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f426b7271b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f426b727340"/>
        <function-ref name="forceState" scoped="" ref="0x7f426b7274d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f426b726d90" loc="53:/home/punit/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f426b726d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f426b725180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f426b725310"/>
        <function-ref name="start" scoped="" ref="0x7f426b7254a0"/>
        <function-ref name="stop" scoped="" ref="0x7f426b725630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f426b72b980" loc="44:/home/punit/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f426b72b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426b72bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f426b7222d0" loc="41:/home/punit/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f426b7222d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f426b722650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f426b7227e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f426b722970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f426b722b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f426b724580" loc="67:/home/punit/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f426b724580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f426b724900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f426b724a90"/>
        <function-ref name="isState" scoped="" ref="0x7f426b724c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f426b724db0"/>
        <function-ref name="requestState" scoped="" ref="0x7f426b723020"/>
        <function-ref name="forceState" scoped="" ref="0x7f426b7231b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f426b715d70" loc="45:/home/punit/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f426b715d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426b714180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b714310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b7144a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b714630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426b7147c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f426b718360" loc="40:/home/punit/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f426b718360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426b7186e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b718870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b718a00"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b718b90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426b718d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f426b715020" loc="41:/home/punit/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f426b715020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f426b7153a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f426b715530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f426b7156c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f426b715850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f426b7159e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f426b7101c0" loc="44:/home/punit/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f426b7101c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f426b710540"/>
        <function-ref name="noAck" scoped="" ref="0x7f426b7106d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f426b710860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f426b713420" loc="40:/home/punit/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f426b713420"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f426b7137a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f426b713930"/>
        <function-ref name="getRetries" scoped="" ref="0x7f426b713ac0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f426b713c50"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f426b713de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f426b6f0690" loc="59:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f426b6f0690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426b6f0a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f426b6f1860" loc="58:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f426b6f1860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426b6f1be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b6f1d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b6f0020"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b6f01b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426b6f0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f426b6ee610" loc="62:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f426b6ee610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f426b6ee990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f426b6eeb20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f426b6eecb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f426b6eee40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f426b6ed020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f426b6ed1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f426b6ed340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f426b6ed4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f426b6ed660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f426b6ed7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f426b6ed980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f426b6edb10"/>
        <function-ref name="sync" scoped="" ref="0x7f426b6edca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f426b6ec020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f426b6ec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f426b6f38b0" loc="54:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f426b6f38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f426b6f3c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f426b6f3dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f426b6f1020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f426b6f11b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f426b6f1340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f426b6f14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f426b6f4ce0" loc="53:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f426b6f4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f426b6f30a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f426b6eb1f0" loc="64:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7f426b6eb1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f426b6eb570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f426b6eb700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f426b6eb890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f426b6eba20"/>
        <function-ref name="setCca" scoped="" ref="0x7f426b6ebbb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f426b6ebd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f426b6f5a80" loc="52:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f426b6f5a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426b6f5e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f426b6f4020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b6f41b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b6f4340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f426b6f44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f426b6f8020" loc="48:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f426b6f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426b6f83a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b6f8530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b6f86c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b6f8850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426b6f89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f426b6f7df0" loc="50:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f426b6f7df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426b6f61c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f426b6f0ce0" loc="60:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f426b6f0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f426b6ef0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f426b6ef230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f426b6ef3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f426b6ef550"/>
        <function-ref name="getPower" scoped="" ref="0x7f426b6ef6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f426b6ef870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f426b6ec4d0" loc="63:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f426b6ec4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f426b6ec950"/>
        <function-ref name="changed" scoped="" ref="0x7f426b6ecae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f426b6ecc70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f426b6ece00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f426b6efb70" loc="61:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f426b6efb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f426b6ee020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f426b6ee1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f426b6ee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f426b6f7210" loc="49:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f426b6f7210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426b6f7590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f426b6ead30" loc="67:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f426b6ead30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f426b6e90e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f426b6e9270"/>
        <function-ref name="led1On" scoped="" ref="0x7f426b6e9400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f426b6e9590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f426b6e9720"/>
        <function-ref name="get" scoped="" ref="0x7f426b6e98b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f426b6e9a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f426b6e81b0"/>
        <function-ref name="set" scoped="" ref="0x7f426b6e9bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f426b6e9d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f426b6e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f426b6f6470" loc="51:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f426b6f6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f426b6f67f0"/>
        <function-ref name="source" scoped="" ref="0x7f426b6f6980"/>
        <function-ref name="address" scoped="" ref="0x7f426b6f6b10"/>
        <function-ref name="destination" scoped="" ref="0x7f426b6f6ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f426b6f6e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f426b6f5020"/>
        <function-ref name="type" scoped="" ref="0x7f426b6f51b0"/>
        <function-ref name="setType" scoped="" ref="0x7f426b6f5340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f426b6f54d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f426b6f5660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f426b6f57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f426b6ea0f0" loc="66:/home/punit/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x7f426b6ea0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b6ea470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b6ea600"/>
        <function-ref name="request" scoped="" ref="0x7f426b6ea790"/>
        <function-ref name="granted" scoped="" ref="0x7f426b6ea920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b6eaab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x7f426b6605a0" loc="3:/home/punit/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <component-ref qname="SounderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x7f426b6605a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x7f426b660920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x7f426b65d440" loc="3:/home/punit/tinyos-main/tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x7f426b65d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x7f426b65d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SounderPin" ref="0x7f426b655020" loc="6:/home/punit/tinyos-main/tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SounderPin" scoped="" ref="0x7f426b655020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b6553a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b655530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b6556c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b655850"/>
        <function-ref name="get" scoped="" ref="0x7f426b6559e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b655b70"/>
        <function-ref name="set" scoped="" ref="0x7f426b655d00"/>
        <function-ref name="clr" scoped="" ref="0x7f426b654020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f426b65dc10" loc="5:/home/punit/tinyos-main/tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f426b65dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426b656110"/>
        <function-ref name="fired" scoped="" ref="0x7f426b6596a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f426b6574a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f426b657020"/>
        <function-ref name="getdt" scoped="" ref="0x7f426b656a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f426b656590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426b659b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f426b65a860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f426b657ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f426b65ad30"/>
        <function-ref name="stop" scoped="" ref="0x7f426b659220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f426b65cdc0" loc="45:/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="SounderC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f426b65cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426b648390"/>
        <function-ref name="fired" scoped="" ref="0x7f426b64b970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f426b649720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f426b6492a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f426b648c90"/>
        <function-ref name="gett0" scoped="" ref="0x7f426b648810"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426b64bdf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f426b65ba80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f426b649d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f426b64b020"/>
        <function-ref name="stop" scoped="" ref="0x7f426b64b4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1_Interrupt" ref="0x7f426b635dd0" loc="36:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1_Interrupt" scoped="" ref="0x7f426b635dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426b634180"/>
        <function-ref name="disable" scoped="" ref="0x7f426b634310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f426b6344a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f426b634630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7f426b62cae0" loc="45:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7f426b62cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f426b62ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x7f426b641970" loc="23:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x7f426b641970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b641cf0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b641e80"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b640030"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b6401c0"/>
        <function-ref name="get" scoped="" ref="0x7f426b640350"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b6404e0"/>
        <function-ref name="set" scoped="" ref="0x7f426b640670"/>
        <function-ref name="clr" scoped="" ref="0x7f426b640800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x7f426b63c020" loc="26:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x7f426b63c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b63c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b63c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b63c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b63c850"/>
        <function-ref name="get" scoped="" ref="0x7f426b63c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b63cb70"/>
        <function-ref name="set" scoped="" ref="0x7f426b63cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f426b63b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7f426b62d020" loc="48:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7f426b62d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f426b62d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7f426b62dd80" loc="50:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7f426b62dd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f426b62b410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f426b6397f0" loc="30:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f426b6397f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b639b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b639d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b638020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b6381b0"/>
        <function-ref name="get" scoped="" ref="0x7f426b638340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b6384d0"/>
        <function-ref name="set" scoped="" ref="0x7f426b638660"/>
        <function-ref name="clr" scoped="" ref="0x7f426b6387f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_TXD" ref="0x7f426b6309c0" loc="42:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_TXD" scoped="" ref="0x7f426b6309c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b630d40"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b62f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b62f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b62f340"/>
        <function-ref name="get" scoped="" ref="0x7f426b62f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b62f660"/>
        <function-ref name="set" scoped="" ref="0x7f426b62f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f426b62f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x7f426b6434c0" loc="21:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x7f426b6434c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b643840"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b6439d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b643b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b643cf0"/>
        <function-ref name="get" scoped="" ref="0x7f426b643e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b642030"/>
        <function-ref name="set" scoped="" ref="0x7f426b6421c0"/>
        <function-ref name="clr" scoped="" ref="0x7f426b642350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x7f426b640b10" loc="24:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x7f426b640b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b63f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b63f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b63f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b63f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f426b63f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b63f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f426b63f980"/>
        <function-ref name="clr" scoped="" ref="0x7f426b63fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3_Interrupt" ref="0x7f426b6336f0" loc="38:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3_Interrupt" scoped="" ref="0x7f426b6336f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426b633a70"/>
        <function-ref name="disable" scoped="" ref="0x7f426b633c00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f426b633d90"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f426b632020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7f426b62e1c0" loc="46:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7f426b62e1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f426b62e540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_RXD" ref="0x7f426b6316a0" loc="41:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_RXD" scoped="" ref="0x7f426b6316a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b631a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b631bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b631d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b630020"/>
        <function-ref name="get" scoped="" ref="0x7f426b6301b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b630340"/>
        <function-ref name="set" scoped="" ref="0x7f426b6304d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426b630660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x7f426b63b330" loc="27:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x7f426b63b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b63b6b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b63b840"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b63b9d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b63bb60"/>
        <function-ref name="get" scoped="" ref="0x7f426b63bcf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b63be80"/>
        <function-ref name="set" scoped="" ref="0x7f426b63a030"/>
        <function-ref name="clr" scoped="" ref="0x7f426b63a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0_Interrupt" ref="0x7f426b6350f0" loc="35:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0_Interrupt" scoped="" ref="0x7f426b6350f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426b635570"/>
        <function-ref name="disable" scoped="" ref="0x7f426b635700"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f426b635890"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f426b635a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7f426b62b740" loc="51:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7f426b62b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f426b62bac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f426b638b10" loc="31:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f426b638b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b637020"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b6371b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b637340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b6374d0"/>
        <function-ref name="get" scoped="" ref="0x7f426b637660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b6377f0"/>
        <function-ref name="set" scoped="" ref="0x7f426b637980"/>
        <function-ref name="clr" scoped="" ref="0x7f426b637b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x7f426b642660" loc="22:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x7f426b642660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b6429e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b642b70"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b642d00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b641020"/>
        <function-ref name="get" scoped="" ref="0x7f426b6411b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b641340"/>
        <function-ref name="set" scoped="" ref="0x7f426b6414d0"/>
        <function-ref name="clr" scoped="" ref="0x7f426b641660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x7f426b63fe20" loc="25:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x7f426b63fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b63d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b63d350"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b63d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b63d670"/>
        <function-ref name="get" scoped="" ref="0x7f426b63d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b63d990"/>
        <function-ref name="set" scoped="" ref="0x7f426b63db20"/>
        <function-ref name="clr" scoped="" ref="0x7f426b63dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7f426b62e870" loc="47:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7f426b62e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f426b62ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7f426b62d6d0" loc="49:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7f426b62d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f426b62da50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f426b63a4e0" loc="29:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f426b63a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b63a860"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b63a9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b63ab80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b63ad10"/>
        <function-ref name="get" scoped="" ref="0x7f426b639020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b6391b0"/>
        <function-ref name="set" scoped="" ref="0x7f426b639340"/>
        <function-ref name="clr" scoped="" ref="0x7f426b6394d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2_Interrupt" ref="0x7f426b6349e0" loc="37:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2_Interrupt" scoped="" ref="0x7f426b6349e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426b634d60"/>
        <function-ref name="disable" scoped="" ref="0x7f426b633020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f426b6331b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f426b633340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_CLK" ref="0x7f426b632380" loc="40:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_CLK" scoped="" ref="0x7f426b632380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b632700"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b632890"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b632a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b632bb0"/>
        <function-ref name="get" scoped="" ref="0x7f426b632d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b631020"/>
        <function-ref name="set" scoped="" ref="0x7f426b6311b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426b631340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7f426b62bdf0" loc="52:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7f426b62bdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f426b6291c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x7f426b6442a0" loc="20:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x7f426b6442a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b644620"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b6447b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b644940"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b644ad0"/>
        <function-ref name="get" scoped="" ref="0x7f426b644c60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b644df0"/>
        <function-ref name="set" scoped="" ref="0x7f426b643020"/>
        <function-ref name="clr" scoped="" ref="0x7f426b6431b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f426b637e30" loc="32:/home/punit/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f426b637e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b6361e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b636370"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b636500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b636690"/>
        <function-ref name="get" scoped="" ref="0x7f426b636820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b6369b0"/>
        <function-ref name="set" scoped="" ref="0x7f426b636b40"/>
        <function-ref name="clr" scoped="" ref="0x7f426b636cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7f426b6261a0" loc="18:/home/punit/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7f426b6261a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f426b626520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7f426b6256d0" loc="21:/home/punit/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7f426b6256d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f426b625a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7f426b6244b0" loc="23:/home/punit/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7f426b6244b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f426b624830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7f426b626850" loc="19:/home/punit/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7f426b626850"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f426b626bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7f426b624b60" loc="24:/home/punit/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7f426b624b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f426b623020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7f426b625020" loc="20:/home/punit/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7f426b625020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f426b6253a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7f426b625d80" loc="22:/home/punit/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7f426b625d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f426b624180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7f426b623350" loc="25:/home/punit/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7f426b623350"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f426b6236d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f426b614900" loc="9:/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f426b614900"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426b614c80"/>
        <function-ref name="fired" scoped="" ref="0x7f426b614e10"/>
        <function-ref name="disable" scoped="" ref="0x7f426b613020"/>
        <function-ref name="edge" scoped="" ref="0x7f426b6131b0"/>
        <function-ref name="enable" scoped="" ref="0x7f426b613340"/>
        <function-ref name="getValue" scoped="" ref="0x7f426b6134d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f426b615da0" loc="8:/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f426b615da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426b614180"/>
        <function-ref name="disable" scoped="" ref="0x7f426b614310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f426b6144a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f426b614630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f426b6102f0" loc="9:/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f426b6102f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426b610670"/>
        <function-ref name="fired" scoped="" ref="0x7f426b610800"/>
        <function-ref name="disable" scoped="" ref="0x7f426b610990"/>
        <function-ref name="edge" scoped="" ref="0x7f426b610b20"/>
        <function-ref name="enable" scoped="" ref="0x7f426b610cb0"/>
        <function-ref name="getValue" scoped="" ref="0x7f426b610e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f426b6117a0" loc="8:/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f426b6117a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426b611b20"/>
        <function-ref name="disable" scoped="" ref="0x7f426b611cb0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f426b611e40"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f426b610020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f426b60dc20" loc="9:/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f426b60dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426b60c020"/>
        <function-ref name="fired" scoped="" ref="0x7f426b60c1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f426b60c340"/>
        <function-ref name="edge" scoped="" ref="0x7f426b60c4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f426b60c660"/>
        <function-ref name="getValue" scoped="" ref="0x7f426b60c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f426b60d120" loc="8:/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f426b60d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426b60d4a0"/>
        <function-ref name="disable" scoped="" ref="0x7f426b60d630"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f426b60d7c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f426b60d950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f426b6087a0" loc="9:/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f426b6087a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426b608b20"/>
        <function-ref name="fired" scoped="" ref="0x7f426b608cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f426b608e40"/>
        <function-ref name="edge" scoped="" ref="0x7f426b607020"/>
        <function-ref name="enable" scoped="" ref="0x7f426b6071b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f426b607340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f426b609b50" loc="8:/home/punit/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f426b609b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426b608020"/>
        <function-ref name="disable" scoped="" ref="0x7f426b6081b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f426b608340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f426b6084d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f426b5f6c10" loc="45:/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="OscilloscopeAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f426b5f6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426b5f1110"/>
        <function-ref name="fired" scoped="" ref="0x7f426b5f46a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f426b5f34a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f426b5f3020"/>
        <function-ref name="getdt" scoped="" ref="0x7f426b5f1a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f426b5f1590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426b5f4b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f426b5f5860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f426b5f3ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f426b5f5d30"/>
        <function-ref name="stop" scoped="" ref="0x7f426b5f4220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f426b5ee4b0" loc="20:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelXC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f426b5ee4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b3c80d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b3c8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadX" ref="0x7f426b5eadc0" loc="5:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadX" scoped="" ref="0x7f426b5eadc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b5e7a80"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b5e5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualY" ref="0x7f426b5e09b0" loc="11:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualY" scoped="" ref="0x7f426b5e09b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b5df5c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b5dfa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadY" ref="0x7f426b5e5d30" loc="6:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadY" scoped="" ref="0x7f426b5e5d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b5e4940"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b5e4dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualX" ref="0x7f426b5e3bc0" loc="10:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualX" scoped="" ref="0x7f426b5e3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b5e27e0"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b5e2c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x7f426b5d7780" loc="21:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x7f426b5d7780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f426b5d7b00"/>
        <function-ref name="getChannel" scoped="" ref="0x7f426b5d7c90"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f426b5d7e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x7f426b5d4d30" loc="20:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x7f426b5d4d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f426b5d70e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f426b5d7270"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f426b5d7400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426b5d9020" loc="19:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b5d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b5d93a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b5d9530"/>
        <function-ref name="request" scoped="" ref="0x7f426b5d96c0"/>
        <function-ref name="granted" scoped="" ref="0x7f426b5d9850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b5d99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f426b5d6a10" loc="17:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f426b5d6a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f426b5d6d90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f426b5d1020"/>
        <function-ref name="start" scoped="" ref="0x7f426b5d11b0"/>
        <function-ref name="stop" scoped="" ref="0x7f426b5d1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x7f426b5d0110" loc="19:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x7f426b5d0110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f426b5d0490"/>
        <function-ref name="getChannel" scoped="" ref="0x7f426b5d0620"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f426b5d07b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelAdcY" ref="0x7f426b5c9a60" loc="25:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelAdcY" scoped="" ref="0x7f426b5c9a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f426b5c9de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelAdcX" ref="0x7f426b5c9380" loc="24:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelAdcX" scoped="" ref="0x7f426b5c9380"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f426b5c9700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x7f426b5d16c0" loc="18:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x7f426b5d16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f426b5d1a40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f426b5d1bd0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f426b5d1d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x7f426b5bb7c0" loc="67:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x7f426b5bb7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426b5bbb40"/>
        <function-ref name="runTask" scoped="" ref="0x7f426b5bbcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelPin" ref="0x7f426b5ca020" loc="23:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelPin" scoped="" ref="0x7f426b5ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b5ca3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b5ca530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b5ca6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b5ca850"/>
        <function-ref name="get" scoped="" ref="0x7f426b5ca9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b5cab70"/>
        <function-ref name="set" scoped="" ref="0x7f426b5cad00"/>
        <function-ref name="clr" scoped="" ref="0x7f426b5c9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f426b5d0c20" loc="22:/home/punit/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f426b5d0c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426b5cb110"/>
        <function-ref name="fired" scoped="" ref="0x7f426b5ce6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f426b5cc4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f426b5cc020"/>
        <function-ref name="getdt" scoped="" ref="0x7f426b5cba10"/>
        <function-ref name="gett0" scoped="" ref="0x7f426b5cb590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426b5ceb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f426b5cf860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f426b5ccab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f426b5cfd30"/>
        <function-ref name="stop" scoped="" ref="0x7f426b5ce220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f426b5b6c50" loc="45:/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="AccelConfigP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f426b5b6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426b5b1110"/>
        <function-ref name="fired" scoped="" ref="0x7f426b5b46a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f426b5b24a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f426b5b2020"/>
        <function-ref name="getdt" scoped="" ref="0x7f426b5b1a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f426b5b1590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426b5b4b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f426b5b5860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f426b5b2ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f426b5b5d30"/>
        <function-ref name="stop" scoped="" ref="0x7f426b5b4220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f426b5386c0" loc="92:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f426b5386c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f426b538a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426b538bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f426b5363e0" loc="96:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b5363e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f426b536780"/>
        <function-ref name="configure" scoped="" ref="0x7f426b536910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f426b538e40" loc="93:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b538e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b5371e0"/>
        <function-ref name="requested" scoped="" ref="0x7f426b537370"/>
        <function-ref name="granted" scoped="" ref="0x7f426b537500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b537690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426b537820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426b5397f0" loc="91:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b5397f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b539b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b539d20"/>
        <function-ref name="request" scoped="" ref="0x7f426b538020"/>
        <function-ref name="granted" scoped="" ref="0x7f426b5381b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b538340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f426b537a70" loc="94:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b537a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426b537df0"/>
        <function-ref name="userId" scoped="" ref="0x7f426b536020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426aa93420" loc="44:/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="AccelConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426aa93420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426aa937a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f426aa93a30" loc="45:/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="AccelConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f426aa93a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f426aa93db0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f426aa92020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f426aa921b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f426aa92340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f426aa8fa60" loc="55:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f426aa8fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f426aa8fe00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426aa8e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f426aa8d790" loc="60:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426aa8d790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f426aa8db30"/>
        <function-ref name="configure" scoped="" ref="0x7f426aa8dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f426aa8c020" loc="61:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f426aa8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f426aa8c3a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f426aa8c530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f426aa8c6c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f426aa8c850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f426aa8e270" loc="56:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426aa8e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426aa8e5f0"/>
        <function-ref name="requested" scoped="" ref="0x7f426aa8e780"/>
        <function-ref name="granted" scoped="" ref="0x7f426aa8e910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426aa8eaa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426aa8ec30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f426aa8caa0" loc="62:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f426aa8caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f426aa8ce20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f426aa8b020"/>
        <function-ref name="led1On" scoped="" ref="0x7f426aa8b1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f426aa8b340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f426aa8b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f426aa8b660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f426aa8b7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f426aa8be30"/>
        <function-ref name="set" scoped="" ref="0x7f426aa8bb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f426aa8b980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f426aa8bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426aa90c80" loc="54:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426aa90c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426aa8f0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426aa8f230"/>
        <function-ref name="request" scoped="" ref="0x7f426aa8f3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f426aa8f550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426aa8f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f426aa8ee80" loc="57:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426aa8ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426aa8d220"/>
        <function-ref name="userId" scoped="" ref="0x7f426aa8d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f426aa8a160" loc="75:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f426aa8a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426aa8a4e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f426aa8a670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f426b532a10" loc="69:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f426b532a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f426b532d90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f426b505020"/>
        <function-ref name="start" scoped="" ref="0x7f426b5051b0"/>
        <function-ref name="stop" scoped="" ref="0x7f426b505340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f426b505590" loc="71:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f426b505590"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f426b505910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f426b505b60" loc="72:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b505b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b504020"/>
        <function-ref name="requested" scoped="" ref="0x7f426b5041b0"/>
        <function-ref name="granted" scoped="" ref="0x7f426b504340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b5044d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426b504660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f426b5048b0" loc="73:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b5048b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426b504c30"/>
        <function-ref name="userId" scoped="" ref="0x7f426b504dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f426aa57400" loc="61:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f426aa57400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f426aa57780"/>
        <function-ref name="stopDone" scoped="" ref="0x7f426aa57910"/>
        <function-ref name="start" scoped="" ref="0x7f426aa57aa0"/>
        <function-ref name="stop" scoped="" ref="0x7f426aa57c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f426aa57e80" loc="63:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f426aa57e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f426aa56220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f426aa548c0" loc="78:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f426aa548c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426aa54c40"/>
        <function-ref name="runTask" scoped="" ref="0x7f426aa54dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f426aa56470" loc="64:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426aa56470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426aa567f0"/>
        <function-ref name="requested" scoped="" ref="0x7f426aa56980"/>
        <function-ref name="granted" scoped="" ref="0x7f426aa56b10"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426aa56ca0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426aa56e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f426aa53100" loc="73:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7f426aa53100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426aa53480"/>
        <function-ref name="runTask" scoped="" ref="0x7f426aa53610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f426aa58b10" loc="60:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f426aa58b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f426aa57020"/>
        <function-ref name="stop" scoped="" ref="0x7f426aa571b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f426aa540e0" loc="65:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426aa540e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426aa54460"/>
        <function-ref name="userId" scoped="" ref="0x7f426aa545f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f426b4fb150" loc="24:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f426b4fb150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b4fbd60"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b4e3260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f426b4e3af0" loc="26:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f426b4e3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b4e2750"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b4e2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f426b4e0300" loc="27:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b4e0300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b4e06a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b4e0830"/>
        <function-ref name="request" scoped="" ref="0x7f426b4e09c0"/>
        <function-ref name="granted" scoped="" ref="0x7f426b4e0b50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b4e0ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f426b4debe0" loc="24:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f426b4debe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b4dd860"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b4ddd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f426b4db5b0" loc="26:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f426b4db5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b4da200"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b4da6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f426b4dad70" loc="27:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b4dad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b4d9180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b4d9310"/>
        <function-ref name="request" scoped="" ref="0x7f426b4d94a0"/>
        <function-ref name="granted" scoped="" ref="0x7f426b4d9630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b4d97c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f426aaa1590" loc="25:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426aaa1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f426aaa1910"/>
        <function-ref name="configure" scoped="" ref="0x7f426aaa1aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f426aaa44a0" loc="22:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f426aaa44a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426aaa30d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f426aaa3550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f426aaa3b30" loc="24:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f426aaa3b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f426aaa1020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f426aaa11b0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f426aaa1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f426b4cfe40" loc="18:/home/punit/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f426b4cfe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b4cca80"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b4cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f426b4c7e60" loc="19:/home/punit/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f426b4c7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b4c9ac0"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b4c6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f426b4c6c20" loc="22:/home/punit/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f426b4c6c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f426b4c5020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f426b4c51b0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f426b4c5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f426b4c5b50" loc="23:/home/punit/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b4c5b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b4c4020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b4c41b0"/>
        <function-ref name="request" scoped="" ref="0x7f426b4c4340"/>
        <function-ref name="granted" scoped="" ref="0x7f426b4c44d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b4c4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f426b4bdaf0" loc="58:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b4bdaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f426b4bde70"/>
        <function-ref name="configure" scoped="" ref="0x7f426b4b9030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f426b4b4c90" loc="56:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f426b4b4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f426b4bd0a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f426b4bd230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f426b4badd0" loc="55:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f426b4badd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f426b4be180"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b4be310"/>
        <function-ref name="dataReady" scoped="" ref="0x7f426b4be4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426b4c1860" loc="54:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b4c1860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b4c1be0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b4c1d70"/>
        <function-ref name="request" scoped="" ref="0x7f426b4c0020"/>
        <function-ref name="granted" scoped="" ref="0x7f426b4c01b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b4c0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426b4b10c0" loc="85:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426b4b10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426b4b1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f426b4af9c0" loc="88:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f426b4af9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f426b4afd40"/>
        <function-ref name="dataReady" scoped="" ref="0x7f426b4ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f426b4af020" loc="87:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f426b4af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f426b4af3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b4af530"/>
        <function-ref name="dataReady" scoped="" ref="0x7f426b4af6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x7f426b4ad020" loc="91:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f426b4ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f426b4ad3a0"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f426b4ad530"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f426b4ad6c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f426b4ad850"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f426b4ad9e0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f426b4adb70"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f426b4add00"/>
        <function-ref name="isComplete" scoped="" ref="0x7f426b4ac020"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b4ac1b0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f426b4ac340"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f426b4ac4d0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f426b4ac660"/>
        <function-ref name="startConversion" scoped="" ref="0x7f426b4ac7f0"/>
        <function-ref name="isStarted" scoped="" ref="0x7f426b4aca80"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f426b4acc10"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f426b4acda0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f426b49f020"/>
        <function-ref name="getValue" scoped="" ref="0x7f426b49f1b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f426b49f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f426b4b1730" loc="86:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f426b4b1730"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f426b4b1ab0"/>
        <function-ref name="stop" scoped="" ref="0x7f426b4b1c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f426b49f630" loc="92:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f426b49f630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f426b49f9b0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f426b49fb40"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f426b49fcd0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f426b49fe60"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f426b49e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f426b46c3f0" loc="45:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f426b46c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f426b46c770"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f426b46c900"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f426b46ca90"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f426b46cc20"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f426b46cdb0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f426b46b020"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f426b46b1b0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f426b46b340"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b46b4d0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f426b46b660"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f426b46b7f0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f426b46b980"/>
        <function-ref name="startConversion" scoped="" ref="0x7f426b46bb10"/>
        <function-ref name="isStarted" scoped="" ref="0x7f426b46bda0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f426b46a020"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f426b46a1b0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f426b46a340"/>
        <function-ref name="getValue" scoped="" ref="0x7f426b46a4d0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f426b46a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f426b467730" loc="44:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f426b467730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f426b467ab0"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f426b467c40"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f426b467dd0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f426b466020"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f426b4661b0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f426b466340"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f426b4664d0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f426b466660"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b4667f0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f426b466980"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f426b466b10"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f426b466ca0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f426b466e30"/>
        <function-ref name="isStarted" scoped="" ref="0x7f426b465120"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f426b4652b0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f426b465440"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f426b4655d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f426b465760"/>
        <function-ref name="dataReady" scoped="" ref="0x7f426b4658f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f426b465c10" loc="45:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f426b465c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f426b464020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f426b42f9e0" loc="92:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f426b42f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f426b42fd80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426b42e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f426b42d770" loc="96:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b42d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f426b42db10"/>
        <function-ref name="configure" scoped="" ref="0x7f426b42dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f426b42e270" loc="93:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b42e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b42e5f0"/>
        <function-ref name="requested" scoped="" ref="0x7f426b42e780"/>
        <function-ref name="granted" scoped="" ref="0x7f426b42e910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b42eaa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426b42ec30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426b430bb0" loc="91:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b430bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b42f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b42f1b0"/>
        <function-ref name="request" scoped="" ref="0x7f426b42f340"/>
        <function-ref name="granted" scoped="" ref="0x7f426b42f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b42f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f426b42ee80" loc="94:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b42ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426b42d220"/>
        <function-ref name="userId" scoped="" ref="0x7f426b42d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426aa25460" loc="44:/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426aa25460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426aa257e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f426aa25a70" loc="45:/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f426aa25a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f426aa25df0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f426aa24020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f426aa241b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f426aa24340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f426aa21a60" loc="55:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f426aa21a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f426aa21e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426aa20020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f426aa1f790" loc="60:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426aa1f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f426aa1fb30"/>
        <function-ref name="configure" scoped="" ref="0x7f426aa1fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f426aa1e020" loc="61:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f426aa1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f426aa1e3a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f426aa1e530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f426aa1e6c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f426aa1e850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f426aa20270" loc="56:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426aa20270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426aa205f0"/>
        <function-ref name="requested" scoped="" ref="0x7f426aa20780"/>
        <function-ref name="granted" scoped="" ref="0x7f426aa20910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426aa20aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426aa20c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f426aa1eaa0" loc="62:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f426aa1eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f426aa1ee20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f426aa1d020"/>
        <function-ref name="led1On" scoped="" ref="0x7f426aa1d1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f426aa1d340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f426aa1d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f426aa1d660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f426aa1d7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f426aa1de30"/>
        <function-ref name="set" scoped="" ref="0x7f426aa1db10"/>
        <function-ref name="led2On" scoped="" ref="0x7f426aa1d980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f426aa1dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426aa22c80" loc="54:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426aa22c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426aa210a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426aa21230"/>
        <function-ref name="request" scoped="" ref="0x7f426aa213c0"/>
        <function-ref name="granted" scoped="" ref="0x7f426aa21550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426aa216e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f426aa20e80" loc="57:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426aa20e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426aa1f220"/>
        <function-ref name="userId" scoped="" ref="0x7f426aa1f3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f426aa1c160" loc="75:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f426aa1c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426aa1c4e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f426aa1c670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f426b40d020" loc="72:/home/punit/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f426b40d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f426b40d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f426b40d5f0" loc="73:/home/punit/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b40d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b40d970"/>
        <function-ref name="requested" scoped="" ref="0x7f426b40db00"/>
        <function-ref name="granted" scoped="" ref="0x7f426b40dc90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b40de20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426b40c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f426b429880" loc="70:/home/punit/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f426b429880"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f426b429c00"/>
        <function-ref name="stop" scoped="" ref="0x7f426b429d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f426b40c270" loc="74:/home/punit/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b40c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426b40c5f0"/>
        <function-ref name="userId" scoped="" ref="0x7f426b40c780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f426a9e9270" loc="62:/home/punit/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f426a9e9270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f426a9e95f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f426a9e9840" loc="63:/home/punit/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426a9e9840"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426a9e9bc0"/>
        <function-ref name="requested" scoped="" ref="0x7f426a9e9d50"/>
        <function-ref name="granted" scoped="" ref="0x7f426a9e7020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426a9e71b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426a9e7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f426a9eaad0" loc="60:/home/punit/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f426a9eaad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f426a9eae50"/>
        <function-ref name="stop" scoped="" ref="0x7f426a9e9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f426a9e7590" loc="64:/home/punit/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426a9e7590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426a9e7910"/>
        <function-ref name="userId" scoped="" ref="0x7f426a9e7aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f426b402a60" loc="48:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f426b402a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b401670"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b401af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f426b4007f0" loc="49:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f426b4007f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b3ff4c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b3ff980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f426b3fc020" loc="53:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f426b3fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f426b3fc3a0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f426b3fc530"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f426b3fc6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x7f426b3fd080" loc="52:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f426b3fd080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f426b3fd400"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b3fd590"/>
        <function-ref name="dataReady" scoped="" ref="0x7f426b3fd720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7f426b3ec510" loc="103:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7f426b3ec510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426b3ec890"/>
        <function-ref name="runTask" scoped="" ref="0x7f426b3eca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f426b3d9420" loc="24:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f426b3d9420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b3d8090"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b3d8530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f426b3d8dc0" loc="26:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f426b3d8dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b3d6a80"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b3d5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f426b3d56f0" loc="27:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b3d56f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b3d5a90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b3d5c20"/>
        <function-ref name="request" scoped="" ref="0x7f426b3d5db0"/>
        <function-ref name="granted" scoped="" ref="0x7f426b3d4020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b3d41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f426b3c51e0" loc="19:/home/punit/tinyos-main/tos/sensorboards/mts300/TempC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f426b3c51e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b3c5dd0"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b3312a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f426b3bf210" loc="3:/home/punit/tinyos-main/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <component-ref qname="ArbitratedTempDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f426b3bf210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b3bfe00"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b3be300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemp" ref="0x7f426b3b5040" loc="8:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemp" scoped="" ref="0x7f426b3b5040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b3b5c30"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b3b40d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PhotoResource" ref="0x7f426b3bb8e0" loc="5:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoResource" scoped="" ref="0x7f426b3bb8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b3bbc60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b3bbdf0"/>
        <function-ref name="request" scoped="" ref="0x7f426b3ba020"/>
        <function-ref name="granted" scoped="" ref="0x7f426b3ba1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b3ba340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TempResource" ref="0x7f426b3bac50" loc="6:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x7f426b3bac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b3b9020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b3b91b0"/>
        <function-ref name="request" scoped="" ref="0x7f426b3b9340"/>
        <function-ref name="granted" scoped="" ref="0x7f426b3b94d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b3b9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadPhoto" ref="0x7f426b3b71d0" loc="7:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadPhoto" scoped="" ref="0x7f426b3b71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b3b7dc0"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b3b62a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempAdc" ref="0x7f426b3b0d50" loc="17:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempAdc" scoped="" ref="0x7f426b3b0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f426b3af100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7f426b3b02f0" loc="16:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f426b3b02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f426b3b0670"/>
        <function-ref name="getChannel" scoped="" ref="0x7f426b3b0800"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f426b3b0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f426b3aabd0" loc="92:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f426b3aabd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f426b3a9020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426b3a91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f426b3a8930" loc="96:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b3a8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f426b3a8cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f426b3a8e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f426b3a9400" loc="93:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b3a9400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b3a9780"/>
        <function-ref name="requested" scoped="" ref="0x7f426b3a9910"/>
        <function-ref name="granted" scoped="" ref="0x7f426b3a9aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b3a9c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426b3a9dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426b3b1e40" loc="91:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b3b1e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b3aa210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b3aa3a0"/>
        <function-ref name="request" scoped="" ref="0x7f426b3aa530"/>
        <function-ref name="granted" scoped="" ref="0x7f426b3aa6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b3aa850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f426b3a8060" loc="94:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b3a8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426b3a83e0"/>
        <function-ref name="userId" scoped="" ref="0x7f426b3a8570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426a9cd480" loc="44:/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426a9cd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426a9cd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f426a9cda90" loc="45:/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f426a9cda90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f426a9cde10"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f426a9cb020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f426a9cb1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f426a9cb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f426a9c9a60" loc="55:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f426a9c9a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f426a9c9e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426a9c8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f426a9c7790" loc="60:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426a9c7790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f426a9c7b30"/>
        <function-ref name="configure" scoped="" ref="0x7f426a9c7cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f426a9c6020" loc="61:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f426a9c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f426a9c63a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f426a9c6530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f426a9c66c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f426a9c6850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f426a9c8270" loc="56:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426a9c8270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426a9c85f0"/>
        <function-ref name="requested" scoped="" ref="0x7f426a9c8780"/>
        <function-ref name="granted" scoped="" ref="0x7f426a9c8910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426a9c8aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426a9c8c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f426a9c6aa0" loc="62:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f426a9c6aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f426a9c6e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f426a9c5020"/>
        <function-ref name="led1On" scoped="" ref="0x7f426a9c51b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f426a9c5340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f426a9c54d0"/>
        <function-ref name="get" scoped="" ref="0x7f426a9c5660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f426a9c57f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f426a9c5e30"/>
        <function-ref name="set" scoped="" ref="0x7f426a9c5b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f426a9c5980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f426a9c5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426a9cac80" loc="54:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426a9cac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426a9c90a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426a9c9230"/>
        <function-ref name="request" scoped="" ref="0x7f426a9c93c0"/>
        <function-ref name="granted" scoped="" ref="0x7f426a9c9550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426a9c96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f426a9c8e80" loc="57:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426a9c8e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426a9c7220"/>
        <function-ref name="userId" scoped="" ref="0x7f426a9c73b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f426a9c4160" loc="75:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f426a9c4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426a9c44e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f426a9c4670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f426b3a3150" loc="92:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f426b3a3150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f426b3a34f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426b3a3680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f426b3a2e60" loc="96:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b3a2e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f426b3a1230"/>
        <function-ref name="configure" scoped="" ref="0x7f426b3a13c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f426b3a38d0" loc="93:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b3a38d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b3a3c50"/>
        <function-ref name="requested" scoped="" ref="0x7f426b3a3de0"/>
        <function-ref name="granted" scoped="" ref="0x7f426b3a2020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b3a21b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426b3a2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426b3a43a0" loc="91:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b3a43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b3a4740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b3a48d0"/>
        <function-ref name="request" scoped="" ref="0x7f426b3a4a60"/>
        <function-ref name="granted" scoped="" ref="0x7f426b3a4bf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b3a4d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f426b3a2590" loc="94:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b3a2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426b3a2910"/>
        <function-ref name="userId" scoped="" ref="0x7f426b3a2aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426a98f4c0" loc="44:/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426a98f4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426a98f840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f426a98fad0" loc="45:/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f426a98fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f426a98fe50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f426a98e020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f426a98e1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f426a98e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f426a98ca60" loc="55:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f426a98ca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f426a98ce00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426a98b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f426a98a790" loc="60:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426a98a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f426a98ab30"/>
        <function-ref name="configure" scoped="" ref="0x7f426a98acc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f426a988020" loc="61:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f426a988020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f426a9883a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f426a988530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f426a9886c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f426a988850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f426a98b270" loc="56:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426a98b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426a98b5f0"/>
        <function-ref name="requested" scoped="" ref="0x7f426a98b780"/>
        <function-ref name="granted" scoped="" ref="0x7f426a98b910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426a98baa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426a98bc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f426a988aa0" loc="62:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f426a988aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f426a988e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f426a987020"/>
        <function-ref name="led1On" scoped="" ref="0x7f426a9871b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f426a987340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f426a9874d0"/>
        <function-ref name="get" scoped="" ref="0x7f426a987660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f426a9877f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f426a987e30"/>
        <function-ref name="set" scoped="" ref="0x7f426a987b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f426a987980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f426a987ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426a98dc80" loc="54:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426a98dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426a98c0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426a98c230"/>
        <function-ref name="request" scoped="" ref="0x7f426a98c3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f426a98c550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426a98c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f426a98be80" loc="57:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426a98be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426a98a220"/>
        <function-ref name="userId" scoped="" ref="0x7f426a98a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f426a986160" loc="75:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f426a986160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426a9864e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f426a986670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f426b39e6c0" loc="92:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f426b39e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f426b39ea60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426b39ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f426b39b3e0" loc="96:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b39b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f426b39b780"/>
        <function-ref name="configure" scoped="" ref="0x7f426b39b910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f426b39ee40" loc="93:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b39ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b39c1e0"/>
        <function-ref name="requested" scoped="" ref="0x7f426b39c370"/>
        <function-ref name="granted" scoped="" ref="0x7f426b39c500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b39c690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426b39c820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426b39f8a0" loc="91:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b39f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b39fc40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b39fdd0"/>
        <function-ref name="request" scoped="" ref="0x7f426b39e020"/>
        <function-ref name="granted" scoped="" ref="0x7f426b39e1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b39e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f426b39ca70" loc="94:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b39ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426b39cdf0"/>
        <function-ref name="userId" scoped="" ref="0x7f426b39b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426a952080" loc="44:/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426a952080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426a952400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f426a952690" loc="45:/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f426a952690"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f426a952a10"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f426a952ba0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f426a952d30"/>
        <function-ref name="dequeue" scoped="" ref="0x7f426a951020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f426a94e850" loc="55:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f426a94e850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f426a94ebf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426a94ed80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f426a94c590" loc="60:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426a94c590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f426a94c930"/>
        <function-ref name="configure" scoped="" ref="0x7f426a94cac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f426a94cd50" loc="61:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f426a94cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f426a94b100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f426a94b290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f426a94b420"/>
        <function-ref name="dequeue" scoped="" ref="0x7f426a94b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f426a94d020" loc="56:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426a94d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426a94d3a0"/>
        <function-ref name="requested" scoped="" ref="0x7f426a94d530"/>
        <function-ref name="granted" scoped="" ref="0x7f426a94d6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426a94d850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426a94d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f426a94b800" loc="62:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f426a94b800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f426a94bb80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f426a94bd10"/>
        <function-ref name="led1On" scoped="" ref="0x7f426a94a020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f426a94a1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f426a94a340"/>
        <function-ref name="get" scoped="" ref="0x7f426a94a4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f426a94a660"/>
        <function-ref name="led0On" scoped="" ref="0x7f426a94aca0"/>
        <function-ref name="set" scoped="" ref="0x7f426a94a980"/>
        <function-ref name="led2On" scoped="" ref="0x7f426a94a7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f426a94ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426a94f970" loc="54:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426a94f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426a94fd10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426a94e020"/>
        <function-ref name="request" scoped="" ref="0x7f426a94e1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f426a94e340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426a94e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f426a94dc30" loc="57:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426a94dc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426a94c020"/>
        <function-ref name="userId" scoped="" ref="0x7f426a94c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f426a949020" loc="75:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f426a949020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426a9493a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f426a949530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f426b3995e0" loc="69:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f426b3995e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f426b399960"/>
        <function-ref name="stopDone" scoped="" ref="0x7f426b399af0"/>
        <function-ref name="start" scoped="" ref="0x7f426b399c80"/>
        <function-ref name="stop" scoped="" ref="0x7f426b399e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f426b3980e0" loc="71:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f426b3980e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f426b398460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f426b3986b0" loc="72:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b3986b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b398a30"/>
        <function-ref name="requested" scoped="" ref="0x7f426b398bc0"/>
        <function-ref name="granted" scoped="" ref="0x7f426b398d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b397020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426b3971b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f426b397400" loc="73:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b397400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426b397780"/>
        <function-ref name="userId" scoped="" ref="0x7f426b397910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f426a916400" loc="61:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f426a916400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f426a916780"/>
        <function-ref name="stopDone" scoped="" ref="0x7f426a916910"/>
        <function-ref name="start" scoped="" ref="0x7f426a916aa0"/>
        <function-ref name="stop" scoped="" ref="0x7f426a916c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f426a916e80" loc="63:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f426a916e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f426a915220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f426a9138c0" loc="78:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f426a9138c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426a913c40"/>
        <function-ref name="runTask" scoped="" ref="0x7f426a913dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f426a915470" loc="64:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426a915470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426a9157f0"/>
        <function-ref name="requested" scoped="" ref="0x7f426a915980"/>
        <function-ref name="granted" scoped="" ref="0x7f426a915b10"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426a915ca0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426a915e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f426a912100" loc="73:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7f426a912100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426a912480"/>
        <function-ref name="runTask" scoped="" ref="0x7f426a912610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f426a917b10" loc="60:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f426a917b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f426a916020"/>
        <function-ref name="stop" scoped="" ref="0x7f426a9161b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f426a9130e0" loc="65:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426a9130e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426a913460"/>
        <function-ref name="userId" scoped="" ref="0x7f426a9135f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f426b3953a0" loc="69:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f426b3953a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f426b395720"/>
        <function-ref name="stopDone" scoped="" ref="0x7f426b3958b0"/>
        <function-ref name="start" scoped="" ref="0x7f426b395a40"/>
        <function-ref name="stop" scoped="" ref="0x7f426b395bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f426b395e20" loc="71:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f426b395e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f426b3941c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f426b394410" loc="72:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b394410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b394790"/>
        <function-ref name="requested" scoped="" ref="0x7f426b394920"/>
        <function-ref name="granted" scoped="" ref="0x7f426b394ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b394c40"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426b394dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f426b393060" loc="73:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b393060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426b3933e0"/>
        <function-ref name="userId" scoped="" ref="0x7f426b393570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f426a8fe400" loc="61:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f426a8fe400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f426a8fe780"/>
        <function-ref name="stopDone" scoped="" ref="0x7f426a8fe910"/>
        <function-ref name="start" scoped="" ref="0x7f426a8feaa0"/>
        <function-ref name="stop" scoped="" ref="0x7f426a8fec30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f426a8fee80" loc="63:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f426a8fee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f426a8fd220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f426a8fc8c0" loc="78:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f426a8fc8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426a8fcc40"/>
        <function-ref name="runTask" scoped="" ref="0x7f426a8fcdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f426a8fd470" loc="64:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426a8fd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426a8fd7f0"/>
        <function-ref name="requested" scoped="" ref="0x7f426a8fd980"/>
        <function-ref name="granted" scoped="" ref="0x7f426a8fdb10"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426a8fdca0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426a8fde30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f426a8fb100" loc="73:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7f426a8fb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426a8fb480"/>
        <function-ref name="runTask" scoped="" ref="0x7f426a8fb610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f426a900b90" loc="60:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f426a900b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f426a8fe020"/>
        <function-ref name="stop" scoped="" ref="0x7f426a8fe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f426a8fc0e0" loc="65:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426a8fc0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426a8fc460"/>
        <function-ref name="userId" scoped="" ref="0x7f426a8fc5f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f426b36f020" loc="4:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f426b36f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f426b36f3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f426b36f530"/>
        <function-ref name="start" scoped="" ref="0x7f426b36f6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f426b36f850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x7f426b36d480" loc="8:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x7f426b36d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b36d800"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b36d990"/>
        <function-ref name="request" scoped="" ref="0x7f426b36db20"/>
        <function-ref name="granted" scoped="" ref="0x7f426b36dcb0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b36de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f426b36fcf0" loc="5:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f426b36fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b36e940"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b36ede0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x7f426b364e10" loc="32:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x7f426b364e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426b3631c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f426b363350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x7f426b367450" loc="10:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x7f426b367450"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b3677d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b367960"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b367af0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b367c80"/>
        <function-ref name="get" scoped="" ref="0x7f426b367e10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b366020"/>
        <function-ref name="set" scoped="" ref="0x7f426b3661b0"/>
        <function-ref name="clr" scoped="" ref="0x7f426b366340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x7f426b3666f0" loc="11:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x7f426b3666f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b364390"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b364810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f426b36c200" loc="9:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f426b36c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426b3686e0"/>
        <function-ref name="fired" scoped="" ref="0x7f426b36ac90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f426b369a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f426b3695f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f426b367020"/>
        <function-ref name="gett0" scoped="" ref="0x7f426b368b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426b369170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f426b36cdf0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f426b3680d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f426b36a340"/>
        <function-ref name="stop" scoped="" ref="0x7f426b36a810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f426b361990" loc="4:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f426b361990"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f426b361d10"/>
        <function-ref name="stopDone" scoped="" ref="0x7f426b360020"/>
        <function-ref name="start" scoped="" ref="0x7f426b3601b0"/>
        <function-ref name="stop" scoped="" ref="0x7f426b360340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x7f426b35e020" loc="8:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x7f426b35e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b35e3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b35e530"/>
        <function-ref name="request" scoped="" ref="0x7f426b35e6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f426b35e850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b35e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f426b3607e0" loc="5:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f426b3607e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b35f480"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b35f920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x7f426b355aa0" loc="32:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x7f426b355aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426b355e20"/>
        <function-ref name="runTask" scoped="" ref="0x7f426b354020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x7f426b357020" loc="10:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x7f426b357020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b3573a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b357530"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b3576c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b357850"/>
        <function-ref name="get" scoped="" ref="0x7f426b3579e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b357b70"/>
        <function-ref name="set" scoped="" ref="0x7f426b357d00"/>
        <function-ref name="clr" scoped="" ref="0x7f426b356020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x7f426b3563d0" loc="11:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x7f426b3563d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b355020"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b3554a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f426b35ed50" loc="9:/home/punit/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f426b35ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426b359220"/>
        <function-ref name="fired" scoped="" ref="0x7f426b35b7d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f426b35a590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f426b35a110"/>
        <function-ref name="getdt" scoped="" ref="0x7f426b359b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f426b3596a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426b35bc50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f426b35c980"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f426b35aba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f426b35ce50"/>
        <function-ref name="stop" scoped="" ref="0x7f426b35b350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f426b352640" loc="45:/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="PhotoTempDeviceC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f426b352640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426b34ec40"/>
        <function-ref name="fired" scoped="" ref="0x7f426b3501e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f426b34e020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f426b350ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f426b34d590"/>
        <function-ref name="gett0" scoped="" ref="0x7f426b34d110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426b350660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f426b351390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f426b34e630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f426b351860"/>
        <function-ref name="stop" scoped="" ref="0x7f426b351d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f426b349020" loc="25:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b349020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f426b3493a0"/>
        <function-ref name="configure" scoped="" ref="0x7f426b349530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f426b34b060" loc="22:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f426b34b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b34bc50"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b34a110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f426b34a6f0" loc="24:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f426b34a6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f426b34aa70"/>
        <function-ref name="getChannel" scoped="" ref="0x7f426b34ac00"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f426b34ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f426b339610" loc="24:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f426b339610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b338390"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b338830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f426b336110" loc="26:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f426b336110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b336d20"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b3351e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f426b3358b0" loc="27:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b3358b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b335c50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b335de0"/>
        <function-ref name="request" scoped="" ref="0x7f426b334020"/>
        <function-ref name="granted" scoped="" ref="0x7f426b3341b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b334340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f426b150680" loc="41:/home/punit/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f426b150680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b14f390"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b14f810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x7f426b14fdd0" loc="42:/home/punit/tinyos-main/tos/sensorboards/mts300/MicC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x7f426b14fdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x7f426b14e180"/>
        <function-ref name="disable" scoped="" ref="0x7f426b14e310"/>
        <function-ref name="stopMic" scoped="" ref="0x7f426b14e4a0"/>
        <function-ref name="gainAdjust" scoped="" ref="0x7f426b14e630"/>
        <function-ref name="readToneDetector" scoped="" ref="0x7f426b14e7c0"/>
        <function-ref name="enable" scoped="" ref="0x7f426b14e950"/>
        <function-ref name="muxSel" scoped="" ref="0x7f426b14eae0"/>
        <function-ref name="startMic" scoped="" ref="0x7f426b14ec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f426b3211d0" loc="5:/home/punit/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <component-ref qname="MicReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f426b3211d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b321dc0"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b3202a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x7f426b31f1d0" loc="9:/home/punit/tinyos-main/tos/sensorboards/mts300/MicReadP.nc">
      <component-ref qname="MicReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x7f426b31f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b31fdc0"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b31d2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x7f426b316ac0" loc="43:/home/punit/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x7f426b316ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x7f426b316e40"/>
        <function-ref name="disable" scoped="" ref="0x7f426b315020"/>
        <function-ref name="stopMic" scoped="" ref="0x7f426b3151b0"/>
        <function-ref name="gainAdjust" scoped="" ref="0x7f426b315340"/>
        <function-ref name="readToneDetector" scoped="" ref="0x7f426b3154d0"/>
        <function-ref name="enable" scoped="" ref="0x7f426b315660"/>
        <function-ref name="muxSel" scoped="" ref="0x7f426b3157f0"/>
        <function-ref name="startMic" scoped="" ref="0x7f426b315980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7f426b316160" loc="42:/home/punit/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f426b316160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f426b3164e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f426b316670"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f426b316800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426b318450" loc="41:/home/punit/tinyos-main/tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b318450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b3187d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b318960"/>
        <function-ref name="request" scoped="" ref="0x7f426b318af0"/>
        <function-ref name="granted" scoped="" ref="0x7f426b318c80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b318e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f426b314550" loc="47:/home/punit/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f426b314550"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f426b3148d0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f426b314a60"/>
        <function-ref name="start" scoped="" ref="0x7f426b314bf0"/>
        <function-ref name="stop" scoped="" ref="0x7f426b314d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptPin" ref="0x7f426b308ba0" loc="54:/home/punit/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptPin" scoped="" ref="0x7f426b308ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b307020"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b3071b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b307340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b3074d0"/>
        <function-ref name="get" scoped="" ref="0x7f426b307660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b3077f0"/>
        <function-ref name="set" scoped="" ref="0x7f426b307980"/>
        <function-ref name="clr" scoped="" ref="0x7f426b307b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicAtm128AdcConfig" ref="0x7f426b310450" loc="49:/home/punit/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicAtm128AdcConfig" scoped="" ref="0x7f426b310450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f426b3107d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f426b310960"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f426b310af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicPower" ref="0x7f426b30a550" loc="52:/home/punit/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicPower" scoped="" ref="0x7f426b30a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b30a8d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b30aa60"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b30abf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b30ad80"/>
        <function-ref name="get" scoped="" ref="0x7f426b309020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b3091b0"/>
        <function-ref name="set" scoped="" ref="0x7f426b309340"/>
        <function-ref name="clr" scoped="" ref="0x7f426b3094d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicMuxSel" ref="0x7f426b309860" loc="53:/home/punit/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicMuxSel" scoped="" ref="0x7f426b309860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b309be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b309d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b308020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b3081b0"/>
        <function-ref name="get" scoped="" ref="0x7f426b308340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b3084d0"/>
        <function-ref name="set" scoped="" ref="0x7f426b308660"/>
        <function-ref name="clr" scoped="" ref="0x7f426b3087f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x7f426b3110c0" loc="48:/home/punit/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x7f426b3110c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x7f426b311440"/>
        <function-ref name="disable" scoped="" ref="0x7f426b3115d0"/>
        <function-ref name="stopMic" scoped="" ref="0x7f426b311760"/>
        <function-ref name="gainAdjust" scoped="" ref="0x7f426b3118f0"/>
        <function-ref name="readToneDetector" scoped="" ref="0x7f426b311a80"/>
        <function-ref name="enable" scoped="" ref="0x7f426b311c10"/>
        <function-ref name="muxSel" scoped="" ref="0x7f426b311da0"/>
        <function-ref name="startMic" scoped="" ref="0x7f426b310020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7f426b2f7900" loc="57:/home/punit/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7f426b2f7900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b2f7c80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b2f7e10"/>
        <function-ref name="request" scoped="" ref="0x7f426b2f6020"/>
        <function-ref name="granted" scoped="" ref="0x7f426b2f61b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b2f6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicAdc" ref="0x7f426b306020" loc="55:/home/punit/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicAdc" scoped="" ref="0x7f426b306020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f426b3063a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7f426b2f99c0" loc="56:/home/punit/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f426b2f99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f426b31a730"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f426b31a9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b305630"/>
        <function-ref name="writeDone" scoped="" ref="0x7f426b2f8c30"/>
        <function-ref name="write" scoped="" ref="0x7f426b3042b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b2f8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlertInterrupt" ref="0x7f426b2f6730" loc="58:/home/punit/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlertInterrupt" scoped="" ref="0x7f426b2f6730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f426b2f6ab0"/>
        <function-ref name="disable" scoped="" ref="0x7f426b2f6c40"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f426b2f6dd0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f426b2f5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f426b30f020" loc="51:/home/punit/tinyos-main/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f426b30f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426b30c630"/>
        <function-ref name="fired" scoped="" ref="0x7f426b30ea60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f426b30d920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f426b30d4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f426b30a020"/>
        <function-ref name="gett0" scoped="" ref="0x7f426b30cab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426b30d020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f426b30fc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f426b30c020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f426b30e110"/>
        <function-ref name="stop" scoped="" ref="0x7f426b30e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426b2cb9f0" loc="44:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MicDeviceP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b2cb9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b2cbd70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b17d020"/>
        <function-ref name="request" scoped="" ref="0x7f426b17d1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f426b17d340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b17d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f426b17d880" loc="45:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MicDeviceP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f426b17d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f426b31a730"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f426b31a9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b17c500"/>
        <function-ref name="writeDone" scoped="" ref="0x7f426b1799b0"/>
        <function-ref name="write" scoped="" ref="0x7f426b17a150"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b17ad60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426b2be1d0" loc="45:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b2be1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b2be550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b2be6e0"/>
        <function-ref name="request" scoped="" ref="0x7f426b2be870"/>
        <function-ref name="granted" scoped="" ref="0x7f426b2bea00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b2beb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f426b2bd5e0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f426b2bd5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f426b31a730"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f426b31a9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b2bc240"/>
        <function-ref name="writeDone" scoped="" ref="0x7f426b2b96d0"/>
        <function-ref name="write" scoped="" ref="0x7f426b2bce50"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b2bba90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f426b29ebf0" loc="92:/home/punit/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f426b29ebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f426b29c020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426b29c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f426b29b930" loc="96:/home/punit/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b29b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f426b29bcd0"/>
        <function-ref name="configure" scoped="" ref="0x7f426b29be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f426b29c400" loc="93:/home/punit/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b29c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b29c780"/>
        <function-ref name="requested" scoped="" ref="0x7f426b29c910"/>
        <function-ref name="granted" scoped="" ref="0x7f426b29caa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b29cc30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426b29cdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426b29fe60" loc="91:/home/punit/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b29fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b29e230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b29e3c0"/>
        <function-ref name="request" scoped="" ref="0x7f426b29e550"/>
        <function-ref name="granted" scoped="" ref="0x7f426b29e6e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b29e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f426b29b060" loc="94:/home/punit/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b29b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426b29b3e0"/>
        <function-ref name="userId" scoped="" ref="0x7f426b29b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426a8a5a00" loc="44:/home/punit/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426a8a5a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426a8a5d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f426a8a4060" loc="45:/home/punit/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f426a8a4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f426a8a43e0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f426a8a4570"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f426a8a4700"/>
        <function-ref name="dequeue" scoped="" ref="0x7f426a8a4890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f426a8a0020" loc="55:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f426a8a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f426a8a03c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426a8a0550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f426a89fcf0" loc="60:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426a89fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f426a89e0e0"/>
        <function-ref name="configure" scoped="" ref="0x7f426a89e270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f426a89e500" loc="61:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f426a89e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f426a89e880"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f426a89ea10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f426a89eba0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f426a89ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f426a8a07a0" loc="56:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426a8a07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426a8a0b20"/>
        <function-ref name="requested" scoped="" ref="0x7f426a8a0cb0"/>
        <function-ref name="granted" scoped="" ref="0x7f426a8a0e40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426a89f020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426a89f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f426a89d020" loc="62:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f426a89d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f426a89d3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f426a89d530"/>
        <function-ref name="led1On" scoped="" ref="0x7f426a89d6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f426a89d850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f426a89d9e0"/>
        <function-ref name="get" scoped="" ref="0x7f426a89db70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f426a89dd00"/>
        <function-ref name="led0On" scoped="" ref="0x7f426a89c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f426a89c1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f426a89c020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f426a89c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426a8a1230" loc="54:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426a8a1230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426a8a15d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426a8a1760"/>
        <function-ref name="request" scoped="" ref="0x7f426a8a18f0"/>
        <function-ref name="granted" scoped="" ref="0x7f426a8a1a80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426a8a1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f426a89f400" loc="57:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426a89f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426a89f780"/>
        <function-ref name="userId" scoped="" ref="0x7f426a89f910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f426a89c7a0" loc="75:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f426a89c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426a89cb20"/>
        <function-ref name="runTask" scoped="" ref="0x7f426a89ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f426b298280" loc="62:/home/punit/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f426b298280"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f426b298600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f426b298850" loc="63:/home/punit/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b298850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b298bd0"/>
        <function-ref name="requested" scoped="" ref="0x7f426b298d60"/>
        <function-ref name="granted" scoped="" ref="0x7f426b297020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b2971b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426b297340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f426b299af0" loc="60:/home/punit/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f426b299af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f426b299e70"/>
        <function-ref name="stop" scoped="" ref="0x7f426b298030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f426b297590" loc="64:/home/punit/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b297590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426b297910"/>
        <function-ref name="userId" scoped="" ref="0x7f426b297aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7f426b252ba0" loc="45:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f426b252ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f426b251020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f426b257df0" loc="44:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f426b257df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f426b31a730"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f426b31a9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b256ac0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f426b252020"/>
        <function-ref name="write" scoped="" ref="0x7f426b254710"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b2533c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f426b2512b0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f426b2512b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f426b251630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f426b2517c0"/>
        <function-ref name="led1On" scoped="" ref="0x7f426b251950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f426b251ae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f426b251c70"/>
        <function-ref name="get" scoped="" ref="0x7f426b251e00"/>
        <function-ref name="led1Off" scoped="" ref="0x7f426b250020"/>
        <function-ref name="led2On" scoped="" ref="0x7f426b250660"/>
        <function-ref name="set" scoped="" ref="0x7f426b250340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f426b2501b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f426b2504d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426b293150" loc="41:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b293150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b2934f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b293680"/>
        <function-ref name="request" scoped="" ref="0x7f426b293810"/>
        <function-ref name="granted" scoped="" ref="0x7f426b2939a0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b293b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f426b25c060" loc="42:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f426b25c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f426b31a730"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f426b31a9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b25ccb0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f426b258250"/>
        <function-ref name="write" scoped="" ref="0x7f426b25b930"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b259580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f426b257020" loc="43:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f426b257020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b2573c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b257550"/>
        <function-ref name="request" scoped="" ref="0x7f426b2576e0"/>
        <function-ref name="granted" scoped="" ref="0x7f426b257870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b257a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7f426b1e4ba0" loc="79:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f426b1e4ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f426b1e3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f426b1e32f0" loc="81:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f426b1e32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f426b1e3670"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f426b1e3800"/>
        <function-ref name="setStart" scoped="" ref="0x7f426b1e3990"/>
        <function-ref name="status" scoped="" ref="0x7f426b1e3b20"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f426b1e3cb0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f426b1e3e40"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f426b1e2020"/>
        <function-ref name="read" scoped="" ref="0x7f426b1e21b0"/>
        <function-ref name="init" scoped="" ref="0x7f426b1e2340"/>
        <function-ref name="enableAck" scoped="" ref="0x7f426b1e24d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f426b1e2660"/>
        <function-ref name="hasStart" scoped="" ref="0x7f426b1e27f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f426b1e2980"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f426b1e2c10"/>
        <function-ref name="enable" scoped="" ref="0x7f426b1e2da0"/>
        <function-ref name="write" scoped="" ref="0x7f426b1e1020"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f426b1e11b0"/>
        <function-ref name="off" scoped="" ref="0x7f426b1e1340"/>
        <function-ref name="setStop" scoped="" ref="0x7f426b1e14d0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f426b1e1660"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f426b1e17f0"/>
        <function-ref name="hasStop" scoped="" ref="0x7f426b1e1980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7f426b1e1c50" loc="82:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f426b1e1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f426b1e0020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f426b1e01b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f426b1e0340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f426b1e04d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f426b1e0660"/>
        <function-ref name="get" scoped="" ref="0x7f426b1e07f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f426b1e0980"/>
        <function-ref name="led2On" scoped="" ref="0x7f426b1df020"/>
        <function-ref name="set" scoped="" ref="0x7f426b1e0ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f426b1e0b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f426b1e0e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7f426b1df2f0" loc="83:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f426b1df2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f426b1df670"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f426b1df800"/>
        <function-ref name="led1On" scoped="" ref="0x7f426b1df990"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f426b1dfb20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f426b1dfcb0"/>
        <function-ref name="get" scoped="" ref="0x7f426b1dfe40"/>
        <function-ref name="led1Off" scoped="" ref="0x7f426b1de020"/>
        <function-ref name="led2On" scoped="" ref="0x7f426b1de660"/>
        <function-ref name="set" scoped="" ref="0x7f426b1de340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f426b1de1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f426b1de4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f426b1e9570" loc="77:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f426b1e9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f426b1e98f0"/>
        <function-ref name="stop" scoped="" ref="0x7f426b1e9a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f426b1e9e30" loc="78:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f426b1e9e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f426b31a730"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f426b31a9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b1e8ac0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f426b1e4020"/>
        <function-ref name="write" scoped="" ref="0x7f426b1e7710"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b1e63c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f426b1d9500" loc="47:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f426b1d9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f426b1d9880"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f426b1d9a10"/>
        <function-ref name="setStart" scoped="" ref="0x7f426b1d9ba0"/>
        <function-ref name="status" scoped="" ref="0x7f426b1d9d30"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f426b1d8020"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f426b1d81b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f426b1d8340"/>
        <function-ref name="read" scoped="" ref="0x7f426b1d84d0"/>
        <function-ref name="init" scoped="" ref="0x7f426b1d8660"/>
        <function-ref name="enableAck" scoped="" ref="0x7f426b1d87f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f426b1d8980"/>
        <function-ref name="hasStart" scoped="" ref="0x7f426b1d8b10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f426b1d8ca0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f426b1d7020"/>
        <function-ref name="enable" scoped="" ref="0x7f426b1d71b0"/>
        <function-ref name="write" scoped="" ref="0x7f426b1d7340"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f426b1d74d0"/>
        <function-ref name="off" scoped="" ref="0x7f426b1d7660"/>
        <function-ref name="setStop" scoped="" ref="0x7f426b1d77f0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f426b1d7980"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f426b1d7b10"/>
        <function-ref name="hasStop" scoped="" ref="0x7f426b1d7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f426b1d3020" loc="50:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f426b1d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f426b1d33a0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f426b1d3530"/>
        <function-ref name="setStart" scoped="" ref="0x7f426b1d36c0"/>
        <function-ref name="status" scoped="" ref="0x7f426b1d3850"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f426b1d39e0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f426b1d3b70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f426b1d3d00"/>
        <function-ref name="read" scoped="" ref="0x7f426b1d2020"/>
        <function-ref name="init" scoped="" ref="0x7f426b1d21b0"/>
        <function-ref name="enableAck" scoped="" ref="0x7f426b1d2340"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f426b1d24d0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f426b1d2660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f426b1d27f0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f426b1d2a80"/>
        <function-ref name="enable" scoped="" ref="0x7f426b1d2c10"/>
        <function-ref name="write" scoped="" ref="0x7f426b1d2da0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f426b1d1020"/>
        <function-ref name="off" scoped="" ref="0x7f426b1d11b0"/>
        <function-ref name="setStop" scoped="" ref="0x7f426b1d1340"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f426b1d14d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f426b1d1660"/>
        <function-ref name="hasStop" scoped="" ref="0x7f426b1d17f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7f426b1d1b80" loc="53:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7f426b1d1b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b1d0020"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b1d01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b1d0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b1d04d0"/>
        <function-ref name="get" scoped="" ref="0x7f426b1d0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b1d07f0"/>
        <function-ref name="set" scoped="" ref="0x7f426b1d0980"/>
        <function-ref name="clr" scoped="" ref="0x7f426b1d0b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7f426b1d0e50" loc="54:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7f426b1d0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f426b1cf210"/>
        <function-ref name="isInput" scoped="" ref="0x7f426b1cf3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f426b1cf530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f426b1cf6c0"/>
        <function-ref name="get" scoped="" ref="0x7f426b1cf850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f426b1cf9e0"/>
        <function-ref name="set" scoped="" ref="0x7f426b1cfb70"/>
        <function-ref name="clr" scoped="" ref="0x7f426b1cfd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426b196230" loc="46:/home/punit/tinyos-main/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426b196230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426b1965b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f426b196870" loc="47:/home/punit/tinyos-main/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f426b196870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f426b196bf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f426b196d80"/>
        <function-ref name="led1On" scoped="" ref="0x7f426b195020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f426b1951b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f426b195340"/>
        <function-ref name="get" scoped="" ref="0x7f426b1954d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f426b195660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f426b195ca0"/>
        <function-ref name="set" scoped="" ref="0x7f426b1957f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f426b195980"/>
        <function-ref name="led2On" scoped="" ref="0x7f426b195b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f426b177bb0" loc="45:/home/punit/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="MicDeviceP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f426b177bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f426c695230"/>
            <typename><typedef-ref name="TMilli" ref="0x7f426c6955a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f426b172110"/>
        <function-ref name="fired" scoped="" ref="0x7f426b175630"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f426b1734a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f426b173020"/>
        <function-ref name="getdt" scoped="" ref="0x7f426b172a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f426b172590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f426b175ab0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f426b1767e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f426b173ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f426b176cb0"/>
        <function-ref name="stop" scoped="" ref="0x7f426b1751b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f426b16fa60" loc="92:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f426b16fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f426b16fe00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426b16d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f426b16c770" loc="96:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426b16c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f426b16cb10"/>
        <function-ref name="configure" scoped="" ref="0x7f426b16cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f426b16d270" loc="93:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b16d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b16d5f0"/>
        <function-ref name="requested" scoped="" ref="0x7f426b16d780"/>
        <function-ref name="granted" scoped="" ref="0x7f426b16d910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b16daa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426b16dc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426b170cb0" loc="91:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b170cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b16f0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b16f230"/>
        <function-ref name="request" scoped="" ref="0x7f426b16f3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f426b16f550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b16f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f426b16de80" loc="94:/home/punit/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b16de80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426b16c220"/>
        <function-ref name="userId" scoped="" ref="0x7f426b16c3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f426a814770" loc="44:/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MicDeviceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f426a814770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f426a814af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f426a814d80" loc="45:/home/punit/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MicDeviceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f426a814d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f426a812180"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f426a812310"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f426a8124a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f426a812630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f426a810d80" loc="55:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f426a810d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f426a80f180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426a80f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f426a80eb60" loc="60:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426a80eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f426a80d020"/>
        <function-ref name="configure" scoped="" ref="0x7f426a80d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f426a80d440" loc="61:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f426a80d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f426a80d7c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f426a80d950"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f426a80dae0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f426a80dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f426a80f560" loc="56:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426a80f560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426a80f8e0"/>
        <function-ref name="requested" scoped="" ref="0x7f426a80fa70"/>
        <function-ref name="granted" scoped="" ref="0x7f426a80fc00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426a80fd90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426a80e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f426a80c020" loc="62:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f426a80c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f426a80c3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f426a80c530"/>
        <function-ref name="led1On" scoped="" ref="0x7f426a80c6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f426a80c850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f426a80c9e0"/>
        <function-ref name="get" scoped="" ref="0x7f426a80cb70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f426a80cd00"/>
        <function-ref name="led0On" scoped="" ref="0x7f426a80b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f426a80b1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f426a80b020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f426a80b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f426a810020" loc="54:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426a810020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426a8103c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426a810550"/>
        <function-ref name="request" scoped="" ref="0x7f426a8106e0"/>
        <function-ref name="granted" scoped="" ref="0x7f426a810870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426a810a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f426a80e270" loc="57:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426a80e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426a80e5f0"/>
        <function-ref name="userId" scoped="" ref="0x7f426a80e780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f426a80b7a0" loc="75:/home/punit/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f426a80b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426a80bb20"/>
        <function-ref name="runTask" scoped="" ref="0x7f426a80bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f426b16aad0" loc="69:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f426b16aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f426b16ae50"/>
        <function-ref name="stopDone" scoped="" ref="0x7f426b169020"/>
        <function-ref name="start" scoped="" ref="0x7f426b1691b0"/>
        <function-ref name="stop" scoped="" ref="0x7f426b169340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f426b169590" loc="71:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f426b169590"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f426b169910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f426b169b60" loc="72:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426b169b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b168020"/>
        <function-ref name="requested" scoped="" ref="0x7f426b1681b0"/>
        <function-ref name="granted" scoped="" ref="0x7f426b168340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b1684d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426b168660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f426b1688b0" loc="73:/home/punit/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426b1688b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426b168c30"/>
        <function-ref name="userId" scoped="" ref="0x7f426b168dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f426a7d7b20" loc="61:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f426a7d7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f426a7cd020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f426a7cd1b0"/>
        <function-ref name="start" scoped="" ref="0x7f426a7cd340"/>
        <function-ref name="stop" scoped="" ref="0x7f426a7cd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f426a7cd720" loc="63:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f426a7cd720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f426a7cdaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f426a7cb160" loc="78:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f426a7cb160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426a7cb4e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f426a7cb670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f426a7cdcf0" loc="64:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f426a7cdcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426a7cc0a0"/>
        <function-ref name="requested" scoped="" ref="0x7f426a7cc230"/>
        <function-ref name="granted" scoped="" ref="0x7f426a7cc3c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426a7cc550"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f426a7cc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f426a7cb940" loc="73:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7f426a7cb940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426a7cbcc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f426a7cbe50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f426a7d73c0" loc="60:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f426a7d73c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f426a7d7740"/>
        <function-ref name="stop" scoped="" ref="0x7f426a7d78d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f426a7cc930" loc="65:/home/punit/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f426a7cc930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f426a7cccb0"/>
        <function-ref name="userId" scoped="" ref="0x7f426a7cce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f426b15c5a0" loc="24:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f426b15c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b15b200"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b15b6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f426b159020" loc="26:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f426b159020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426b159c30"/>
        <function-ref name="readDone" scoped="" ref="0x7f426b158110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f426b1587e0" loc="27:/home/punit/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f426b1587e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f426b158b80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f426b158d10"/>
        <function-ref name="request" scoped="" ref="0x7f426b157020"/>
        <function-ref name="granted" scoped="" ref="0x7f426b1571b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f426b157340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f426a8bb590" loc="25:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor2.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f426a8bb590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f426a8bb910"/>
        <function-ref name="configure" scoped="" ref="0x7f426a8bbaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f426a8bd5d0" loc="22:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor2.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f426a8bd5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f426a8bc200"/>
        <function-ref name="readDone" scoped="" ref="0x7f426a8bc680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f426a8bcc60" loc="24:/home/punit/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor2.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f426a8bcc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f426a8bb020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f426a8bb1b0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f426a8bb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f426b0c5020" loc="49:/home/punit/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f426b0c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426b0c53a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b0c5530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b0c56c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b0c5850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426b0c59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f426b0c5c30" loc="50:/home/punit/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f426b0c5c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426b0c4020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f426b0c41b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b0c4340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b0c44d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f426b0c4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f426b0c48b0" loc="51:/home/punit/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f426b0c48b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f426b0c4c30"/>
        <function-ref name="source" scoped="" ref="0x7f426b0c4dc0"/>
        <function-ref name="address" scoped="" ref="0x7f426b0c3020"/>
        <function-ref name="destination" scoped="" ref="0x7f426b0c31b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f426b0c3340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f426b0c34d0"/>
        <function-ref name="type" scoped="" ref="0x7f426b0c3660"/>
        <function-ref name="setType" scoped="" ref="0x7f426b0c37f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f426b0c3980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f426b0c3b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f426b0c3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f426b0c2020" loc="52:/home/punit/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f426b0c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f426b0c23a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f426b0c2530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f426b0c26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f426a7a7100" loc="49:/home/punit/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f426a7a7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426a7a7480"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426a7a7610"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426a7a77a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f426a7a7930"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426a7a7ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f426a7a7d10" loc="50:/home/punit/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f426a7a7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426a7a60e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f426a7a6270"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426a7a6400"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426a7a6590"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f426a7a6720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f426a7a6970" loc="51:/home/punit/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f426a7a6970"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f426a7a6cf0"/>
        <function-ref name="source" scoped="" ref="0x7f426a7a6e80"/>
        <function-ref name="address" scoped="" ref="0x7f426a7a5030"/>
        <function-ref name="destination" scoped="" ref="0x7f426a7a51c0"/>
        <function-ref name="setSource" scoped="" ref="0x7f426a7a5350"/>
        <function-ref name="setDestination" scoped="" ref="0x7f426a7a54e0"/>
        <function-ref name="type" scoped="" ref="0x7f426a7a5670"/>
        <function-ref name="setType" scoped="" ref="0x7f426a7a5800"/>
        <function-ref name="isForMe" scoped="" ref="0x7f426a7a5990"/>
        <function-ref name="setGroup" scoped="" ref="0x7f426a7a5b20"/>
        <function-ref name="localGroup" scoped="" ref="0x7f426a7a5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f426a7a4020" loc="52:/home/punit/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f426a7a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f426a7a43a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f426a7a4530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f426a7a46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f426a799200" loc="44:/home/punit/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f426a799200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426a799580"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426a799710"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426a7998a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f426a799a30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426a799bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f426a799e70" loc="46:/home/punit/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f426a799e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426a798220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426a7983b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426a798540"/>
        <function-ref name="cancel" scoped="" ref="0x7f426a7986d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426a798860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f426a798ab0" loc="47:/home/punit/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f426a798ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f426a798e30"/>
        <function-ref name="source" scoped="" ref="0x7f426a797020"/>
        <function-ref name="address" scoped="" ref="0x7f426a7971b0"/>
        <function-ref name="destination" scoped="" ref="0x7f426a797340"/>
        <function-ref name="setSource" scoped="" ref="0x7f426a7974d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f426a797660"/>
        <function-ref name="type" scoped="" ref="0x7f426a7977f0"/>
        <function-ref name="setType" scoped="" ref="0x7f426a797980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f426a797b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f426a797ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f426a797e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f426b127940" loc="43:/home/punit/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f426b127940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426b127cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b127e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b124020"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b1241b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426b124340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f426b0da400" loc="48:/home/punit/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f426b0da400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426b0da7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b0da930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b0daac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b0dac50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426b0dade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f426b0db4b0" loc="46:/home/punit/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f426b0db4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f426b0db850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b0db9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b0dbb70"/>
        <function-ref name="cancel" scoped="" ref="0x7f426b0dbd00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f426b0da020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f426b0d8720" loc="50:/home/punit/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f426b0d8720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426b0d8aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f426b0d8c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b0d8dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b0d7020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f426b0d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f426b0d7480" loc="169:/home/punit/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7f426b0d7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426b0d7800"/>
        <function-ref name="runTask" scoped="" ref="0x7f426b0d7990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f426b0d7c60" loc="126:/home/punit/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7f426b0d7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f426b0d5020"/>
        <function-ref name="runTask" scoped="" ref="0x7f426b0d51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f426b0d9060" loc="49:/home/punit/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f426b0d9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f426b0d93e0"/>
        <function-ref name="source" scoped="" ref="0x7f426b0d9570"/>
        <function-ref name="address" scoped="" ref="0x7f426b0d9700"/>
        <function-ref name="destination" scoped="" ref="0x7f426b0d9890"/>
        <function-ref name="setSource" scoped="" ref="0x7f426b0d9a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f426b0d9bb0"/>
        <function-ref name="type" scoped="" ref="0x7f426b0d9d40"/>
        <function-ref name="setType" scoped="" ref="0x7f426b0d8020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f426b0d81b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f426b0d8340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f426b0d84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f426b0b8020" loc="46:/home/punit/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f426b0b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f426b0b83a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f426b0b8530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f426b0b86c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f426b0b8850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f426b0b89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f426b0b9910" loc="45:/home/punit/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f426b0b9910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f426b0b9c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f426b0b8c30" loc="47:/home/punit/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f426b0b8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f426b0b7020"/>
        <function-ref name="source" scoped="" ref="0x7f426b0b71b0"/>
        <function-ref name="address" scoped="" ref="0x7f426b0b7340"/>
        <function-ref name="destination" scoped="" ref="0x7f426b0b74d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f426b0b7660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f426b0b77f0"/>
        <function-ref name="type" scoped="" ref="0x7f426b0b7980"/>
        <function-ref name="setType" scoped="" ref="0x7f426b0b7b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f426b0b7ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f426b0b7e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f426b0b6020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Read" loc="49:/home/punit/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f426c5a2a90" loc="49:/home/punit/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f426c5a2a90"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f426c59f390" loc="55:/home/punit/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/punit/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f426c59e120" loc="63:/home/punit/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/punit/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f426c5a2a90"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f426c59fb10" loc="63:/home/punit/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f426c59fe30" loc="63:/home/punit/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f426c5a2a90"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/punit/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/punit/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f426c614920" loc="60:/home/punit/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/punit/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/punit/tinyos-main/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7f426c5bcbb0" loc="80:/home/punit/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/punit/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f426c5ce970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f426c5bc260" loc="80:/home/punit/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f426c5ce970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f426c5bc5e0" loc="80:/home/punit/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f426c5bc910" loc="80:/home/punit/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f426c5b7620" loc="135:/home/punit/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/punit/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c5b7020" loc="135:/home/punit/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f426c5b7350" loc="135:/home/punit/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f426c5b66d0" loc="123:/home/punit/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/punit/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f426c5b92a0" loc="96:/home/punit/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/punit/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c5b9020" loc="96:/home/punit/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f426c5b87f0" loc="110:/home/punit/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/punit/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c5b8210" loc="110:/home/punit/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f426c5b8560" loc="110:/home/punit/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/punit/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/punit/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f426c610c80" loc="113:/home/punit/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/punit/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f426c610a00" loc="113:/home/punit/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f426c60d2a0" loc="138:/home/punit/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/punit/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f426c60d020" loc="138:/home/punit/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f426c610020" loc="104:/home/punit/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/punit/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f426c60e520" loc="130:/home/punit/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/punit/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mts300Sounder" loc="1:/home/punit/tinyos-main/tos/sensorboards/mts300/Mts300Sounder.nc">
      <function command="" provided="0" name="beep" ref="0x7f426c58ee70" loc="3:/home/punit/tinyos-main/tos/sensorboards/mts300/Mts300Sounder.nc">
        <interfacedef-ref qname="Mts300Sounder"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="length" ref="0x7f426c58ebf0" loc="3:/home/punit/tinyos-main/tos/sensorboards/mts300/Mts300Sounder.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/punit/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f426c5b2670" loc="78:/home/punit/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/punit/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
              <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c611ce0" loc="78:/home/punit/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f426c5b2060" loc="78:/home/punit/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f426c5b2390" loc="78:/home/punit/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f426c598a60" loc="61:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f426c597270" loc="67:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f426c597a50" loc="72:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f426c596a20" loc="83:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f426c5931f0" loc="100:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f426c593a00" loc="117:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f426c596270" loc="77:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f426c5925a0" loc="134:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f426c592320" loc="134:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f426c5982d0" loc="56:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f426c594270" loc="89:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f426c594a00" loc="94:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/punit/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f426c60cbc0" loc="53:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f426c60cbc0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f426c5a7980" loc="136:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f426c5ab1f0" loc="83:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f426c5a9020" loc="114:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f426c5aa9a0" loc="114:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f426c5aace0" loc="114:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f426c5aa1f0" loc="98:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f426c5a6a10" loc="151:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f426c5a6190" loc="144:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f426c5ab9d0" loc="92:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f426c5ae750" loc="64:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f426c5ae4d0" loc="64:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f426c5a7020" loc="129:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f426c5a99c0" loc="129:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f426c5a9d00" loc="129:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f426c5ac2a0" loc="73:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f426c5ac020" loc="73:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f426c5acaa0" loc="78:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/punit/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/punit/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f426c5520e0" loc="62:/home/punit/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/punit/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f426c54abc0" loc="60:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f426c54a940" loc="60:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f426c54d190" loc="31:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f426c54dc10" loc="39:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f426c54d990" loc="39:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f426c54c780" loc="46:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f426c54c500" loc="46:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f426c54a070" loc="53:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/punit/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/punit/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f426c5373b0" loc="44:/home/punit/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f426c537ae0" loc="45:/home/punit/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f426c538580" loc="42:/home/punit/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f426c5359b0" loc="47:/home/punit/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f426c538c80" loc="43:/home/punit/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f426c535270" loc="46:/home/punit/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f426c53b760" loc="40:/home/punit/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f426c53be30" loc="41:/home/punit/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/punit/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/punit/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f426c720d30" loc="57:/home/punit/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/punit/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f426c71cce0" loc="72:/home/punit/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/punit/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f426c71c4d0" loc="65:/home/punit/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/punit/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/punit/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f426c714c50" loc="67:/home/punit/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/punit/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f426c7124f0" loc="75:/home/punit/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/punit/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/punit/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/punit/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f426c6512b0" loc="76:/home/punit/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/punit/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/punit/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/punit/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f426c6322b0" loc="62:/home/punit/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/punit/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f426c6b6ac0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/punit/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/punit/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f426c634420" loc="52:/home/punit/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/punit/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/punit/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/punit/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f426c384020" loc="65:/home/punit/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/punit/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c387c70" loc="65:/home/punit/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f426c383110" loc="78:/home/punit/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/punit/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c384e10" loc="78:/home/punit/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f426c37e490" loc="126:/home/punit/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/punit/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c380e50" loc="126:/home/punit/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f426c37e1c0" loc="126:/home/punit/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f426c380560" loc="106:/home/punit/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/punit/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f426c3815e0" loc="94:/home/punit/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/punit/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c381020" loc="94:/home/punit/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f426c381350" loc="94:/home/punit/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/punit/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f426c36b930" loc="35:/home/punit/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f426c36b930"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f426c36bb70" loc="35:/home/punit/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c36bb70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f426c361970" loc="63:/home/punit/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/punit/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c36bb70"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c3616f0" loc="63:/home/punit/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f426c360b40" loc="70:/home/punit/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/punit/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c3608c0" loc="70:/home/punit/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f426c363750" loc="49:/home/punit/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/punit/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c3634d0" loc="49:/home/punit/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f426c35f020" loc="78:/home/punit/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/punit/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c36bb70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c35e8a0" loc="78:/home/punit/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f426c35ec00" loc="78:/home/punit/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c36bb70"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/punit/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f426c352030" loc="65:/home/punit/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/punit/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c3549e0" loc="65:/home/punit/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f426c354d70" loc="65:/home/punit/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f426c3512a0" loc="71:/home/punit/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/punit/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c351020" loc="71:/home/punit/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f426c3541f0" loc="57:/home/punit/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/punit/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f426c3557f0" loc="52:/home/punit/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/punit/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f426c355570" loc="52:/home/punit/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/punit/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f426c36aad0" loc="59:/home/punit/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/punit/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c36a850" loc="59:/home/punit/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f426c368cd0" loc="71:/home/punit/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/punit/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c368a50" loc="71:/home/punit/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f426c366020" loc="85:/home/punit/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/punit/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c369ce0" loc="85:/home/punit/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f426c36fd30" loc="177:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f426c5ce590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f426c36fab0" loc="177:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f426c378a10" loc="88:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f426c5ce970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f426c378790" loc="88:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f426c386e60" loc="68:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f426c5ce970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f426c37b950" loc="78:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f426c5ce970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f426c37b6d0" loc="78:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f426c3763a0" loc="121:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f426c5ce970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f426c379d70" loc="121:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f426c376110" loc="121:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f426c5ce970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f426c377e50" loc="103:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f426c5ce970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f426c377870" loc="103:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f426c377bc0" loc="103:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f426c5ce970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f426c373810" loc="147:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f426c373590" loc="147:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f426c370b90" loc="162:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f426c3705e0" loc="162:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f426c370900" loc="162:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f426c5ce1b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f426c374600" loc="136:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f426c374380" loc="136:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f426c36e2f0" loc="187:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f426c5ce590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f426c371cf0" loc="187:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f426c36e060" loc="187:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f426c5ce590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f426c36c190" loc="195:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/punit/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f426c5ce590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f426c32b430" loc="95:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c32b1b0" loc="95:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f426c32d720" loc="81:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c32d4a0" loc="81:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f426c330dc0" loc="66:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f426c330b40" loc="66:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f426c3302a0" loc="60:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f426c330020" loc="60:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f426c32f880" loc="73:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f426c32f600" loc="73:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f426c32c5e0" loc="88:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c32c360" loc="88:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/punit/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f426c31ee60" loc="59:/home/punit/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/punit/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f426c5ce970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f426c31e850" loc="59:/home/punit/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f426c5ce970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f426c31ebd0" loc="59:/home/punit/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f426c33a0c0" loc="56:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f426c33baa0" loc="56:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f426c33bdf0" loc="56:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f426c3366d0" loc="77:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f426c3360d0" loc="77:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f426c336440" loc="77:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f426c33aba0" loc="64:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f426d15e290"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f426c33a920" loc="64:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f426c337600" loc="75:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f426c337380" loc="75:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f426c33b2a0" loc="47:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f426c33b020" loc="47:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f426c338720" loc="72:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f426c3384a0" loc="72:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/punit/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f426c322650" loc="65:/home/punit/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/punit/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c3223d0" loc="65:/home/punit/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f426c326730" loc="46:/home/punit/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/punit/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c326110" loc="46:/home/punit/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f426c3264a0" loc="46:/home/punit/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f426c323630" loc="59:/home/punit/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/punit/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c3233b0" loc="59:/home/punit/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f426c325b30" loc="53:/home/punit/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/punit/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c325510" loc="53:/home/punit/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f426c3258a0" loc="53:/home/punit/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f426c321630" loc="71:/home/punit/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/punit/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c3213b0" loc="71:/home/punit/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/punit/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f426c3320b0" loc="47:/home/punit/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/punit/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c33cde0" loc="47:/home/punit/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/punit/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f426c317e20" loc="75:/home/punit/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/punit/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c317860" loc="75:/home/punit/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f426c317b90" loc="75:/home/punit/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f426c30c620" loc="125:/home/punit/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/punit/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c30c020" loc="125:/home/punit/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f426c30c350" loc="125:/home/punit/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f426c30b660" loc="112:/home/punit/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/punit/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f426c30f2a0" loc="89:/home/punit/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/punit/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c30f020" loc="89:/home/punit/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f426c30e750" loc="100:/home/punit/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/punit/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c30e170" loc="100:/home/punit/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f426c30e4c0" loc="100:/home/punit/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/punit/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/punit/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f426c315cc0" loc="120:/home/punit/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/punit/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f426c316cc0" loc="97:/home/punit/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/punit/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f426c316350" loc="88:/home/punit/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/punit/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f426c3154f0" loc="102:/home/punit/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/punit/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f426c3148b0" loc="128:/home/punit/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/punit/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f426c2eb750" loc="51:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f426c2eb190" loc="51:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f426c2eb4c0" loc="51:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f426c2eaae0" loc="65:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f426c2e6370" loc="84:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f426c2e7520" loc="84:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f426c2e7d60" loc="84:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f426c2e60d0" loc="84:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f426c2e9cf0" loc="73:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f426c2e9710" loc="73:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f426c2e9a60" loc="73:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f426c2ea2a0" loc="58:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f426c2ea020" loc="58:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/punit/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f426c2e3690" loc="52:/home/punit/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/punit/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f426c2ece60" loc="46:/home/punit/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/punit/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/punit/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/punit/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f426c2f6c70" loc="95:/home/punit/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/punit/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f426c2ed4e0" loc="105:/home/punit/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/punit/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f426c2dd840" loc="49:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c2dd580" loc="49:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f426c2ded40" loc="42:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f426c60a7d0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f426c607180"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c2dea40" loc="42:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f426c2dcb90" loc="53:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f426c607c80"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f426c6055a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426c2dc890" loc="53:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f426c2f3a30" loc="71:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f426c2f1b20" loc="97:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f426c2f1350" loc="90:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f426c2f5190" loc="51:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f426c2f31f0" loc="63:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f426c2f22d0" loc="76:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f426c2f2af0" loc="83:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f426c2f59f0" loc="56:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/punit/tinyos-main/tos/interfaces/State.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f426c2d5350" loc="71:/home/punit/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="68:/home/punit/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f426c2d88f0" loc="56:/home/punit/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="53:/home/punit/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f426c2d7b00" loc="66:/home/punit/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="63:/home/punit/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f426c2d7880" loc="66:/home/punit/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f426c2d70e0" loc="61:/home/punit/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="58:/home/punit/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f426c2d95e0" loc="45:/home/punit/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="40:/home/punit/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f426c2d9360" loc="45:/home/punit/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f426c2d8110" loc="51:/home/punit/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="47:/home/punit/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f426c2d9e10" loc="51:/home/punit/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f426c27a020" loc="106:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f426c27b9f0" loc="106:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f426c27bd40" loc="106:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f426c27d960" loc="93:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f426c27d020" loc="87:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f426c27e820" loc="87:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f426c27ec00" loc="87:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f426c2832a0" loc="55:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f426c283020" loc="55:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f426c27b270" loc="98:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f426c280d70" loc="72:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f426c280af0" loc="72:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f426c2823e0" loc="61:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f426c282160" loc="61:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f426c279270" loc="117:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f426c27e020" loc="78:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f426c27fc50" loc="78:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f426c27aa20" loc="112:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f426c282b60" loc="66:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f426c34f670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f426c34fdd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f426c280390" loc="71:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f426c284850" loc="54:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f426c2839f0" loc="60:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f426c27f530" loc="77:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f426c24b520" loc="55:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f426c6129a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f426c24b2a0" loc="55:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f426c24a030" loc="63:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f426c6129a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f426c24bd80" loc="63:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/punit/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/punit/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f426c269640" loc="48:/home/punit/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/punit/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f426c34f670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f426c34fdd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/punit/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/punit/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f426c26b8b0" loc="56:/home/punit/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f426c26b8b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f426c26baf0" loc="56:/home/punit/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c26baf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f426c263800" loc="109:/home/punit/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/punit/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c26baf0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f426c2657e0" loc="78:/home/punit/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/punit/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f426c264e10" loc="103:/home/punit/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/punit/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c26baf0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c26baf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f426c264840" loc="103:/home/punit/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c26baf0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f426c264b80" loc="103:/home/punit/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c26baf0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f426c264020" loc="88:/home/punit/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/punit/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f426c261020" loc="116:/home/punit/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/punit/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c26baf0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f426c267680" loc="66:/home/punit/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/punit/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c26baf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f426c267400" loc="66:/home/punit/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c26baf0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f426c265020" loc="73:/home/punit/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/punit/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/punit/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f426c2530e0" loc="50:/home/punit/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/punit/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f426c5ce970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f426c252070" loc="60:/home/punit/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/punit/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f426c2538c0" loc="55:/home/punit/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/punit/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f426c5ce590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f426c255860" loc="45:/home/punit/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/punit/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f426c5ce590"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f426c5ce970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f426c255280" loc="45:/home/punit/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f426c5ce590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f426c2555d0" loc="45:/home/punit/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f426c5ce970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f426c244760" loc="53:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f426c6129a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f426c250840" loc="52:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f426c6129a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f426c2599c0" loc="52:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f426c250250" loc="52:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f426c2505a0" loc="52:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f426c24d020" loc="63:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f426c6129a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f426c24f150" loc="63:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f426c24f9c0" loc="63:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f426c24fd10" loc="63:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/punit/tinyos-main/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f426c2577e0" loc="68:/home/punit/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/punit/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f426c257020" loc="61:/home/punit/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/punit/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f426c258720" loc="54:/home/punit/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f426c25bdc0" loc="53:/home/punit/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/punit/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f426c18b2b0" loc="58:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c65eb10"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f426c65c020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x7f426c18ed50" loc="50:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c66ea70"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f426c66d020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f426c18ead0" loc="50:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c66ea70"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f426c66d020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f426c18c020" loc="54:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c660590"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f426c6609b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x7f426c191630" loc="45:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c675490"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f426c6758b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f426c18ca60" loc="55:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c660590"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f426c6609b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f426c18c7e0" loc="55:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c660590"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f426c6609b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f426c18bcf0" loc="59:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c65eb10"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f426c65c020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f426c18ba70" loc="59:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c65eb10"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f426c65c020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x7f426c190830" loc="47:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c66b160"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f426c66b580"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x7f426c190020" loc="46:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c66ea70"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f426c66d020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x7f426c18e2e0" loc="49:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c675490"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f426c6758b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f426c18e060" loc="49:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c675490"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f426c6758b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x7f426c18d7b0" loc="51:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c66b160"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f426c66b580"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f426c18d530" loc="51:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c66b160"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f426c66b580"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f426c192bd0" loc="40:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c192bd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f426c181aa0" loc="88:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f426c181820" loc="88:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f426c182900" loc="76:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f426c186560" loc="47:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c192bd0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f426c185a40" loc="60:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c192bd0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f426c1857c0" loc="60:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c192bd0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f426c184270" loc="64:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f426c1810e0" loc="82:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f426c185020" loc="53:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c192bd0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f426c186c80" loc="53:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c192bd0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f426c1849e0" loc="67:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f426c182190" loc="70:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f426c17b020" loc="41:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c17b020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f426c177970" loc="74:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f426c17ab00" loc="58:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f426c17b960" loc="48:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c17b020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f426c1782b0" loc="62:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f426c176190" loc="80:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f426c17a350" loc="54:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c17b020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f426c17a0d0" loc="54:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426c17b020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f426c178a20" loc="65:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f426c1771f0" loc="68:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f426c19f540" loc="55:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f426c19f540"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f426c198020" loc="98:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f426c19a020" loc="87:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f426c19fe70" loc="61:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f426c19f540"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f426c198a00" loc="104:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f426c198780" loc="104:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f426c197270" loc="110:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f426c19c7b0" loc="75:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f426c19c020" loc="70:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f426c19a7e0" loc="93:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f426c19d850" loc="67:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f426c19f540"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f426c19d5d0" loc="67:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f426c19f540"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f426c19b020" loc="78:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f426c19b770" loc="81:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7f426c16aad0" loc="45:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c687af0"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f426c686020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f426c165030" loc="53:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c67b580"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f426c67b9a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f426c167d80" loc="49:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c67fc90"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f426c67d0e0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f426c1667f0" loc="50:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c67fc90"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f426c67d0e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f426c166570" loc="50:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c67fc90"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f426c67d0e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f426c165a70" loc="54:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c67b580"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f426c67b9a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f426c1657f0" loc="54:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c67b580"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f426c67b9a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f426c167570" loc="46:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c687af0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f426c686020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f426c1672f0" loc="46:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c687af0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f426c686020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x7f426c15c7e0" loc="38:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x7f426c15b030" loc="44:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x7f426c15c070" loc="32:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f426c15b840" loc="50:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f426c160d80" loc="21:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c681410"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x7f426c681830"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f426c15d7e0" loc="27:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c681410"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f426c681830"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f426c15d560" loc="27:/home/punit/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f426c681410"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f426c681830"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/punit/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/punit/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f426bfef410" loc="57:/home/punit/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f426bfef410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f426bfef650" loc="57:/home/punit/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426bfef650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f426bfee020" loc="64:/home/punit/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/punit/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f426bfef650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f426bfec120" loc="76:/home/punit/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/punit/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f426bfee8a0" loc="71:/home/punit/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/punit/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f426bfec880" loc="82:/home/punit/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/punit/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/punit/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f426bf46c80" loc="54:/home/punit/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f426bf45e00" loc="66:/home/punit/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/punit/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f426bf45650" loc="61:/home/punit/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/punit/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f426bf453d0" loc="61:/home/punit/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f426bf46420" loc="53:/home/punit/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/punit/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f426bf23020" loc="56:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f426bf22ac0" loc="75:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f426bf24780" loc="51:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f426bf222a0" loc="70:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f426bf22020" loc="70:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f426bf24020" loc="46:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f426bf237d0" loc="63:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f426bf07d00" loc="48:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/home/punit/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f426be8b020" loc="24:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f426be8b870" loc="31:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f426be8a0e0" loc="39:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f426be6b2b0" loc="62:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f426be6dc60" loc="62:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f426be6b020" loc="62:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f426be66610" loc="91:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f426be67be0" loc="91:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f426be66020" loc="91:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f426be66370" loc="91:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f426be69e40" loc="82:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f426c6129a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f426be69860" loc="82:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f426be69bb0" loc="82:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f426be6ee40" loc="51:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f426c6129a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f426be6e860" loc="51:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f426be6ebb0" loc="51:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f426be6aa10" loc="71:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f426be6a0d0" loc="71:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f426be6a420" loc="71:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f426be6a770" loc="71:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/punit/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/punit/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f426be4c990" loc="70:/home/punit/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/punit/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f426be4c020" loc="70:/home/punit/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f426be4c3b0" loc="70:/home/punit/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f426be4c6f0" loc="70:/home/punit/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f426be48020" loc="82:/home/punit/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/punit/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f426be4b1d0" loc="82:/home/punit/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f426be4b560" loc="82:/home/punit/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f426be4b8a0" loc="82:/home/punit/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f426be4bc10" loc="83:/home/punit/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/punit/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f426be4e8f0" loc="45:/home/punit/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/punit/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f426be4e670" loc="45:/home/punit/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/punit/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/punit/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f426bdba2a0" loc="62:/home/punit/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/punit/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f426bdba020" loc="62:/home/punit/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f426bdb8680" loc="74:/home/punit/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/punit/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f426bdb8400" loc="74:/home/punit/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f426bdbab10" loc="68:/home/punit/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/punit/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f426bdb72a0" loc="81:/home/punit/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/punit/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f426bdb7020" loc="81:/home/punit/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f426bda30e0" loc="86:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f426bd99070" loc="126:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f426bd9ea00" loc="117:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f426bd99a90" loc="128:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f426bd99810" loc="128:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f426bda58f0" loc="83:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f426bd9c5c0" loc="122:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f426bd9c340" loc="122:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f426bda0020" loc="113:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f426bda1cf0" loc="113:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f426bda2070" loc="97:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f426bd944e0" loc="141:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f426bd94260" loc="141:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f426bda07c0" loc="114:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f426bd98c10" loc="131:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f426bd98990" loc="131:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f426bd97b70" loc="136:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f426bd9b8a0" loc="125:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f426bd9b620" loc="125:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f426bd95b10" loc="140:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f426bd9d3f0" loc="119:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f426bd9d170" loc="119:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f426bda2a50" loc="103:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f426bda27d0" loc="103:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f426bd9e2a0" loc="116:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f426bd9e020" loc="116:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f426bd9ce30" loc="123:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f426bd98270" loc="129:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f426bd97390" loc="132:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f426bd95350" loc="138:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f426bd9db70" loc="120:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f426bda3870" loc="89:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f426bda14d0" loc="109:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f426bda1250" loc="109:/home/punit/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/punit/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/punit/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f426bd8f550" loc="90:/home/punit/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/punit/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f426bd8fdb0" loc="98:/home/punit/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/punit/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/punit/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/punit/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f426bd35020" loc="95:/home/punit/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/punit/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f426bd35870" loc="105:/home/punit/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/punit/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/punit/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f426bce3a70" loc="53:/home/punit/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/punit/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f426bce03e0" loc="61:/home/punit/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/punit/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/punit/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/punit/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f426bcdc350" loc="65:/home/punit/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/punit/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f426bce1aa0" loc="59:/home/punit/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/punit/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/punit/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f426bcd34c0" loc="79:/home/punit/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/punit/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f426bcdd400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f426bcd3240" loc="79:/home/punit/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f426bcdd400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f426bcd53b0" loc="53:/home/punit/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/punit/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f426bcd4020" loc="62:/home/punit/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/punit/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f426bcdd400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f426bcd5c30" loc="62:/home/punit/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f426bcdd400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f426bcd4930" loc="70:/home/punit/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/punit/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f426bcdd400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f426bb805e0" loc="43:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f426bb36420" loc="63:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f426bb37a20" loc="63:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f426bb36190" loc="63:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f426bb37270" loc="55:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f426bb38a00" loc="49:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f426bb38780" loc="49:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f426bb4bcb0" loc="58:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426bb4ba30" loc="58:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f426bb50ca0" loc="50:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426bb50a20" loc="50:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f426bb49c80" loc="72:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426bb49a00" loc="72:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f426bb4aca0" loc="65:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f426bb4aa20" loc="65:/home/punit/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f426c5be3c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f426c5bda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/punit/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/punit/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f426b9dd920" loc="53:/home/punit/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f426b9dd920"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f426b9da270" loc="61:/home/punit/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/punit/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f426d15c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/punit/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/punit/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f426b802600" loc="53:/home/punit/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f426b802600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f426b7ff2a0" loc="64:/home/punit/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/punit/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f426b802600"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f426b7ff020" loc="64:/home/punit/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f426b802600"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/home/punit/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/home/punit/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x7f426b62c710" loc="20:/home/punit/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/home/punit/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7f426b5d40e0" loc="32:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f426b5d5850" loc="25:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7f426b5d4930" loc="39:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/punit/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/punit/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f426b5a62b0" loc="56:/home/punit/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/punit/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f426b5a5390" loc="73:/home/punit/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/punit/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f426b5a99d0" loc="46:/home/punit/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/punit/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f426b5a6b20" loc="65:/home/punit/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/punit/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f426b5a5cc0" loc="81:/home/punit/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/punit/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/punit/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/punit/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f426b52d2b0" loc="62:/home/punit/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/punit/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/home/punit/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/home/punit/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f426b4cbd40" loc="52:/home/punit/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f426b4cbd40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f426b4c8660" loc="58:/home/punit/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/home/punit/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f426b4c7400" loc="66:/home/punit/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/home/punit/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f426b4cbd40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f426b4c8e20" loc="66:/home/punit/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f426b4c7170" loc="66:/home/punit/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f426b4cbd40"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f426b4b6830" loc="100:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f426b4b8ad0" loc="100:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f426b4b8e50" loc="100:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f426b4b6210" loc="101:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f426b4b6580" loc="101:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f426b4b46c0" loc="119:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f426b4b54b0" loc="119:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f426b4b57f0" loc="119:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f426b4b5b50" loc="119:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7f426b4b4020" loc="120:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7f426b4b4400" loc="120:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f426b4bb020" loc="70:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f426b4bc1a0" loc="70:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f426b4bc520" loc="70:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f426b4bc8a0" loc="71:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f426b4bcc10" loc="71:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f426b4ba9a0" loc="91:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f426b4ba0c0" loc="81:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f426b4bba90" loc="81:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f426b4bbdd0" loc="81:/home/punit/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7f426b4a4480" loc="114:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7f426b4ab020" loc="53:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f426c6a06c0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x7f426c6a0b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7f426b4a1850" loc="140:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f426b4a15d0" loc="140:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f426b4a4d20" loc="122:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7f426b4a9de0" loc="82:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7f426b4aba80" loc="58:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f426c6a06c0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f426c6a0b90"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7f426b4ab800" loc="58:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f426c6a06c0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f426c6a0b90"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7f426b4a8d20" loc="91:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7f426b4a2d40" loc="133:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f426b4a0070" loc="150:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7f426b4a8570" loc="86:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7f426b4a6ca0" loc="99:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7f426b4a6520" loc="95:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f426b4a54c0" loc="106:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7f426b4a2530" loc="127:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7f426b4aadb0" loc="69:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f426c698590"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f426c698c70"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7f426b4aab30" loc="69:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f426c698590"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f426c698c70"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7f426b4a5cf0" loc="110:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7f426b4aa350" loc="64:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f426c698590"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f426c698c70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f426b4a9620" loc="75:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f426b4a0c00" loc="156:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f426b4a0980" loc="156:/home/punit/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicSetting" loc="68:/home/punit/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
      <documentation loc="64:/home/punit/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo&#10;</long>
      </documentation>
      <function event="" provided="0" name="toneDetected" ref="0x7f426b324350" loc="110:/home/punit/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f426b3263e0" loc="97:/home/punit/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopMic" ref="0x7f426b3274b0" loc="87:/home/punit/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gainAdjust" ref="0x7f426b328600" loc="77:/home/punit/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f426b328380" loc="77:/home/punit/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readToneDetector" ref="0x7f426b327c40" loc="92:/home/punit/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f426b326b40" loc="102:/home/punit/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="muxSel" ref="0x7f426b32bc30" loc="72:/home/punit/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sel" ref="0x7f426b32b9b0" loc="72:/home/punit/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startMic" ref="0x7f426b328d40" loc="82:/home/punit/tinyos-main/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
      <documentation loc="32:/home/punit/tinyos-main/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <typedef name="addr_size" ref="0x7f426b306b80" loc="59:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7f426b306b80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f426b3022d0" loc="76:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f426b31add0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f426b3034f0" loc="76:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f426b31add0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f426b303840" loc="76:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f426b303b90" loc="76:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f426b302020" loc="76:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f426b2fccf0" loc="112:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f426b2fc020" loc="112:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f426b2fc370" loc="112:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f426b2fc6c0" loc="112:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f426b2fca40" loc="112:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f426b2ff140" loc="92:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f426b31add0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f426b301430" loc="92:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f426b31add0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f426b301780" loc="92:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f426b301ad0" loc="92:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f426b301e50" loc="92:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f426b2fd020" loc="102:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f426b2fe1e0" loc="102:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f426c717670"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f426b2fe530" loc="102:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f426d15d5a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f426b2fe880" loc="102:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f426b2fec00" loc="102:/home/punit/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7f426b284900" loc="46:/home/punit/tinyos-main/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7f426b241d00" loc="54:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7f426b240490" loc="55:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7f426b23f580" loc="60:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f426b23f300" loc="60:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7f426b2415e0" loc="52:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7f426b23ce40" loc="65:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f426b237be0" loc="84:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f426b23b830" loc="67:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f426b23b5b0" loc="67:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f426b235450" loc="89:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f426b2437a0" loc="49:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7f426b243520" loc="49:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7f426b23c710" loc="64:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f426b23c490" loc="64:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f426b23a120" loc="68:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7f426b23fcc0" loc="61:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f426b239120" loc="75:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7f426b240be0" loc="56:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f426b2374a0" loc="83:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f426b237220" loc="83:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f426b236d00" loc="88:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f426b236a80" loc="88:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f426d15ea90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7f426b23a920" loc="72:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7f426b243e70" loc="50:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7f426b23e650" loc="62:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f426b23e3d0" loc="62:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7f426b239b40" loc="81:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f426b2398c0" loc="81:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f426b236390" loc="85:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7f426b23ed80" loc="63:/home/punit/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f426c723b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
